This is the first success with 100 iters as a test.




+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_--set_EXP_DIR_seed_rng1701_RNG_SEED_1701.txt.2018-05-29_13-41-45
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_--set_EXP_DIR_seed_rng1701_RNG_SEED_1701.txt.2018-05-29_13-41-45
+ ./tools/train_net.py --gpu 0 --solver models/caltech/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG16.v2.caffemodel --imdb caltech_train_1x --iters 100 --cfg experiments/cfgs/faster_rcnn_end2end.yml --set EXP_DIR seed_rng1701 RNG_SEED 1701
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='caltech_train_1x', max_iters=100, pretrained_model='data/imagenet_models/VGG16.v2.caffemodel', randomize=False, set_cfgs=['EXP_DIR', 'seed_rng1701', 'RNG_SEED', '1701'], solver='models/caltech/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'DATA_DIR': '/home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'seed_rng1701',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 1701,
 'ROOT_DIR': '/home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `caltech_train_1x` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py:2699: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  VisibleDeprecationWarning)
wrote gt roidb to /home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/data/cache/caltech_train_1x_gt_roidb.pkl
done
Preparing training data...
done
8642 roidb entries
Output will be saved to `/home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/output/seed_rng1701/caltech_train_1x`
Filtered 4532 roidb entries: 8642 -> 4110
Computing bounding-box regression targets...
bbox target means:
[[ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]]
[ 0.  0.  0.  0.]
bbox target stdevs:
[[ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]]
[ 0.1  0.1  0.2  0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0529 13:42:00.524232 17405 solver.cpp:48] Initializing solver from parameters:
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 50000
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0529 13:42:00.524287 17405 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0529 13:42:00.525488 17405 net.cpp:49] Initializing net from parameters:
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 21"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 21"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 21
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 84
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 1
}
I0529 13:42:00.525827 17405 layer_factory.hpp:77] Creating layer input-data
I0529 13:42:00.528245 17405 net.cpp:106] Creating Layer input-data
I0529 13:42:00.528281 17405 net.cpp:411] input-data -> data
I0529 13:42:00.528308 17405 net.cpp:411] input-data -> im_info
I0529 13:42:00.528316 17405 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0529 13:42:00.544644 17405 net.cpp:150] Setting up input-data
I0529 13:42:00.544670 17405 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0529 13:42:00.544678 17405 net.cpp:157] Top shape: 1 3 (3)
I0529 13:42:00.544682 17405 net.cpp:157] Top shape: 1 4 (4)
I0529 13:42:00.544687 17405 net.cpp:165] Memory required for data: 7200028
I0529 13:42:00.544692 17405 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0529 13:42:00.544706 17405 net.cpp:106] Creating Layer data_input-data_0_split
I0529 13:42:00.544713 17405 net.cpp:454] data_input-data_0_split <- data
I0529 13:42:00.544719 17405 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0529 13:42:00.544728 17405 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0529 13:42:00.544766 17405 net.cpp:150] Setting up data_input-data_0_split
I0529 13:42:00.544773 17405 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0529 13:42:00.544778 17405 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0529 13:42:00.544781 17405 net.cpp:165] Memory required for data: 21600028
I0529 13:42:00.544785 17405 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0529 13:42:00.544791 17405 net.cpp:106] Creating Layer im_info_input-data_1_split
I0529 13:42:00.544795 17405 net.cpp:454] im_info_input-data_1_split <- im_info
I0529 13:42:00.544800 17405 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0529 13:42:00.544806 17405 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0529 13:42:00.544833 17405 net.cpp:150] Setting up im_info_input-data_1_split
I0529 13:42:00.544855 17405 net.cpp:157] Top shape: 1 3 (3)
I0529 13:42:00.544859 17405 net.cpp:157] Top shape: 1 3 (3)
I0529 13:42:00.544863 17405 net.cpp:165] Memory required for data: 21600052
I0529 13:42:00.544867 17405 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0529 13:42:00.544872 17405 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0529 13:42:00.544876 17405 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0529 13:42:00.544881 17405 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0529 13:42:00.544888 17405 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0529 13:42:00.544919 17405 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0529 13:42:00.544924 17405 net.cpp:157] Top shape: 1 4 (4)
I0529 13:42:00.544929 17405 net.cpp:157] Top shape: 1 4 (4)
I0529 13:42:00.544932 17405 net.cpp:165] Memory required for data: 21600084
I0529 13:42:00.544936 17405 layer_factory.hpp:77] Creating layer conv1_1
I0529 13:42:00.544947 17405 net.cpp:106] Creating Layer conv1_1
I0529 13:42:00.544951 17405 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0529 13:42:00.544957 17405 net.cpp:411] conv1_1 -> conv1_1
I0529 13:42:00.549104 17405 net.cpp:150] Setting up conv1_1
I0529 13:42:00.549167 17405 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0529 13:42:00.549175 17405 net.cpp:165] Memory required for data: 175200084
I0529 13:42:00.549216 17405 layer_factory.hpp:77] Creating layer relu1_1
I0529 13:42:00.549235 17405 net.cpp:106] Creating Layer relu1_1
I0529 13:42:00.549247 17405 net.cpp:454] relu1_1 <- conv1_1
I0529 13:42:00.549258 17405 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0529 13:42:00.549293 17405 net.cpp:150] Setting up relu1_1
I0529 13:42:00.549304 17405 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0529 13:42:00.549311 17405 net.cpp:165] Memory required for data: 328800084
I0529 13:42:00.549319 17405 layer_factory.hpp:77] Creating layer conv1_2
I0529 13:42:00.549371 17405 net.cpp:106] Creating Layer conv1_2
I0529 13:42:00.549379 17405 net.cpp:454] conv1_2 <- conv1_1
I0529 13:42:00.549391 17405 net.cpp:411] conv1_2 -> conv1_2
I0529 13:42:00.554352 17405 net.cpp:150] Setting up conv1_2
I0529 13:42:00.554379 17405 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0529 13:42:00.554388 17405 net.cpp:165] Memory required for data: 482400084
I0529 13:42:00.554407 17405 layer_factory.hpp:77] Creating layer relu1_2
I0529 13:42:00.554424 17405 net.cpp:106] Creating Layer relu1_2
I0529 13:42:00.554433 17405 net.cpp:454] relu1_2 <- conv1_2
I0529 13:42:00.554445 17405 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0529 13:42:00.554457 17405 net.cpp:150] Setting up relu1_2
I0529 13:42:00.554467 17405 net.cpp:157] Top shape: 1 64 600 1000 (38400000)
I0529 13:42:00.554473 17405 net.cpp:165] Memory required for data: 636000084
I0529 13:42:00.554481 17405 layer_factory.hpp:77] Creating layer pool1
I0529 13:42:00.554494 17405 net.cpp:106] Creating Layer pool1
I0529 13:42:00.554502 17405 net.cpp:454] pool1 <- conv1_2
I0529 13:42:00.554512 17405 net.cpp:411] pool1 -> pool1
I0529 13:42:00.554594 17405 net.cpp:150] Setting up pool1
I0529 13:42:00.554607 17405 net.cpp:157] Top shape: 1 64 300 500 (9600000)
I0529 13:42:00.554615 17405 net.cpp:165] Memory required for data: 674400084
I0529 13:42:00.554621 17405 layer_factory.hpp:77] Creating layer conv2_1
I0529 13:42:00.554637 17405 net.cpp:106] Creating Layer conv2_1
I0529 13:42:00.554646 17405 net.cpp:454] conv2_1 <- pool1
I0529 13:42:00.554658 17405 net.cpp:411] conv2_1 -> conv2_1
I0529 13:42:00.556862 17405 net.cpp:150] Setting up conv2_1
I0529 13:42:00.556888 17405 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0529 13:42:00.556901 17405 net.cpp:165] Memory required for data: 751200084
I0529 13:42:00.556918 17405 layer_factory.hpp:77] Creating layer relu2_1
I0529 13:42:00.556931 17405 net.cpp:106] Creating Layer relu2_1
I0529 13:42:00.556938 17405 net.cpp:454] relu2_1 <- conv2_1
I0529 13:42:00.556959 17405 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0529 13:42:00.556970 17405 net.cpp:150] Setting up relu2_1
I0529 13:42:00.556978 17405 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0529 13:42:00.556984 17405 net.cpp:165] Memory required for data: 828000084
I0529 13:42:00.557001 17405 layer_factory.hpp:77] Creating layer conv2_2
I0529 13:42:00.557026 17405 net.cpp:106] Creating Layer conv2_2
I0529 13:42:00.557032 17405 net.cpp:454] conv2_2 <- conv2_1
I0529 13:42:00.557044 17405 net.cpp:411] conv2_2 -> conv2_2
I0529 13:42:00.557909 17405 net.cpp:150] Setting up conv2_2
I0529 13:42:00.557924 17405 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0529 13:42:00.557940 17405 net.cpp:165] Memory required for data: 904800084
I0529 13:42:00.557951 17405 layer_factory.hpp:77] Creating layer relu2_2
I0529 13:42:00.557960 17405 net.cpp:106] Creating Layer relu2_2
I0529 13:42:00.557967 17405 net.cpp:454] relu2_2 <- conv2_2
I0529 13:42:00.557987 17405 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0529 13:42:00.557997 17405 net.cpp:150] Setting up relu2_2
I0529 13:42:00.558006 17405 net.cpp:157] Top shape: 1 128 300 500 (19200000)
I0529 13:42:00.558023 17405 net.cpp:165] Memory required for data: 981600084
I0529 13:42:00.558029 17405 layer_factory.hpp:77] Creating layer pool2
I0529 13:42:00.558048 17405 net.cpp:106] Creating Layer pool2
I0529 13:42:00.558055 17405 net.cpp:454] pool2 <- conv2_2
I0529 13:42:00.558064 17405 net.cpp:411] pool2 -> pool2
I0529 13:42:00.558125 17405 net.cpp:150] Setting up pool2
I0529 13:42:00.558137 17405 net.cpp:157] Top shape: 1 128 150 250 (4800000)
I0529 13:42:00.558143 17405 net.cpp:165] Memory required for data: 1000800084
I0529 13:42:00.558149 17405 layer_factory.hpp:77] Creating layer conv3_1
I0529 13:42:00.558162 17405 net.cpp:106] Creating Layer conv3_1
I0529 13:42:00.558171 17405 net.cpp:454] conv3_1 <- pool2
I0529 13:42:00.558182 17405 net.cpp:411] conv3_1 -> conv3_1
I0529 13:42:00.560468 17405 net.cpp:150] Setting up conv3_1
I0529 13:42:00.560494 17405 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0529 13:42:00.560505 17405 net.cpp:165] Memory required for data: 1039200084
I0529 13:42:00.560523 17405 layer_factory.hpp:77] Creating layer relu3_1
I0529 13:42:00.560534 17405 net.cpp:106] Creating Layer relu3_1
I0529 13:42:00.560540 17405 net.cpp:454] relu3_1 <- conv3_1
I0529 13:42:00.560550 17405 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0529 13:42:00.560561 17405 net.cpp:150] Setting up relu3_1
I0529 13:42:00.560570 17405 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0529 13:42:00.560575 17405 net.cpp:165] Memory required for data: 1077600084
I0529 13:42:00.560582 17405 layer_factory.hpp:77] Creating layer conv3_2
I0529 13:42:00.560598 17405 net.cpp:106] Creating Layer conv3_2
I0529 13:42:00.560607 17405 net.cpp:454] conv3_2 <- conv3_1
I0529 13:42:00.560617 17405 net.cpp:411] conv3_2 -> conv3_2
I0529 13:42:00.563429 17405 net.cpp:150] Setting up conv3_2
I0529 13:42:00.563465 17405 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0529 13:42:00.563472 17405 net.cpp:165] Memory required for data: 1116000084
I0529 13:42:00.563486 17405 layer_factory.hpp:77] Creating layer relu3_2
I0529 13:42:00.563498 17405 net.cpp:106] Creating Layer relu3_2
I0529 13:42:00.563505 17405 net.cpp:454] relu3_2 <- conv3_2
I0529 13:42:00.563515 17405 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0529 13:42:00.563525 17405 net.cpp:150] Setting up relu3_2
I0529 13:42:00.563539 17405 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0529 13:42:00.563544 17405 net.cpp:165] Memory required for data: 1154400084
I0529 13:42:00.563561 17405 layer_factory.hpp:77] Creating layer conv3_3
I0529 13:42:00.563575 17405 net.cpp:106] Creating Layer conv3_3
I0529 13:42:00.563580 17405 net.cpp:454] conv3_3 <- conv3_2
I0529 13:42:00.563591 17405 net.cpp:411] conv3_3 -> conv3_3
I0529 13:42:00.566238 17405 net.cpp:150] Setting up conv3_3
I0529 13:42:00.566262 17405 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0529 13:42:00.566267 17405 net.cpp:165] Memory required for data: 1192800084
I0529 13:42:00.566279 17405 layer_factory.hpp:77] Creating layer relu3_3
I0529 13:42:00.566289 17405 net.cpp:106] Creating Layer relu3_3
I0529 13:42:00.566296 17405 net.cpp:454] relu3_3 <- conv3_3
I0529 13:42:00.566306 17405 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0529 13:42:00.566325 17405 net.cpp:150] Setting up relu3_3
I0529 13:42:00.566332 17405 net.cpp:157] Top shape: 1 256 150 250 (9600000)
I0529 13:42:00.566339 17405 net.cpp:165] Memory required for data: 1231200084
I0529 13:42:00.566344 17405 layer_factory.hpp:77] Creating layer pool3
I0529 13:42:00.566354 17405 net.cpp:106] Creating Layer pool3
I0529 13:42:00.566359 17405 net.cpp:454] pool3 <- conv3_3
I0529 13:42:00.566370 17405 net.cpp:411] pool3 -> pool3
I0529 13:42:00.566431 17405 net.cpp:150] Setting up pool3
I0529 13:42:00.566442 17405 net.cpp:157] Top shape: 1 256 75 125 (2400000)
I0529 13:42:00.566448 17405 net.cpp:165] Memory required for data: 1240800084
I0529 13:42:00.566453 17405 layer_factory.hpp:77] Creating layer conv4_1
I0529 13:42:00.566468 17405 net.cpp:106] Creating Layer conv4_1
I0529 13:42:00.566475 17405 net.cpp:454] conv4_1 <- pool3
I0529 13:42:00.566486 17405 net.cpp:411] conv4_1 -> conv4_1
I0529 13:42:00.573876 17405 net.cpp:150] Setting up conv4_1
I0529 13:42:00.573931 17405 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0529 13:42:00.573940 17405 net.cpp:165] Memory required for data: 1260000084
I0529 13:42:00.573956 17405 layer_factory.hpp:77] Creating layer relu4_1
I0529 13:42:00.573972 17405 net.cpp:106] Creating Layer relu4_1
I0529 13:42:00.573992 17405 net.cpp:454] relu4_1 <- conv4_1
I0529 13:42:00.574003 17405 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0529 13:42:00.574018 17405 net.cpp:150] Setting up relu4_1
I0529 13:42:00.574028 17405 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0529 13:42:00.574034 17405 net.cpp:165] Memory required for data: 1279200084
I0529 13:42:00.574040 17405 layer_factory.hpp:77] Creating layer conv4_2
I0529 13:42:00.574056 17405 net.cpp:106] Creating Layer conv4_2
I0529 13:42:00.574064 17405 net.cpp:454] conv4_2 <- conv4_1
I0529 13:42:00.574075 17405 net.cpp:411] conv4_2 -> conv4_2
I0529 13:42:00.582974 17405 net.cpp:150] Setting up conv4_2
I0529 13:42:00.583022 17405 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0529 13:42:00.583029 17405 net.cpp:165] Memory required for data: 1298400084
I0529 13:42:00.583055 17405 layer_factory.hpp:77] Creating layer relu4_2
I0529 13:42:00.583071 17405 net.cpp:106] Creating Layer relu4_2
I0529 13:42:00.583083 17405 net.cpp:454] relu4_2 <- conv4_2
I0529 13:42:00.583094 17405 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0529 13:42:00.583111 17405 net.cpp:150] Setting up relu4_2
I0529 13:42:00.583119 17405 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0529 13:42:00.583125 17405 net.cpp:165] Memory required for data: 1317600084
I0529 13:42:00.583130 17405 layer_factory.hpp:77] Creating layer conv4_3
I0529 13:42:00.583144 17405 net.cpp:106] Creating Layer conv4_3
I0529 13:42:00.583151 17405 net.cpp:454] conv4_3 <- conv4_2
I0529 13:42:00.583163 17405 net.cpp:411] conv4_3 -> conv4_3
I0529 13:42:00.591540 17405 net.cpp:150] Setting up conv4_3
I0529 13:42:00.591593 17405 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0529 13:42:00.591599 17405 net.cpp:165] Memory required for data: 1336800084
I0529 13:42:00.591615 17405 layer_factory.hpp:77] Creating layer relu4_3
I0529 13:42:00.591631 17405 net.cpp:106] Creating Layer relu4_3
I0529 13:42:00.591651 17405 net.cpp:454] relu4_3 <- conv4_3
I0529 13:42:00.591661 17405 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0529 13:42:00.591675 17405 net.cpp:150] Setting up relu4_3
I0529 13:42:00.591682 17405 net.cpp:157] Top shape: 1 512 75 125 (4800000)
I0529 13:42:00.591686 17405 net.cpp:165] Memory required for data: 1356000084
I0529 13:42:00.591692 17405 layer_factory.hpp:77] Creating layer pool4
I0529 13:42:00.591703 17405 net.cpp:106] Creating Layer pool4
I0529 13:42:00.591708 17405 net.cpp:454] pool4 <- conv4_3
I0529 13:42:00.591717 17405 net.cpp:411] pool4 -> pool4
I0529 13:42:00.591774 17405 net.cpp:150] Setting up pool4
I0529 13:42:00.591784 17405 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0529 13:42:00.591789 17405 net.cpp:165] Memory required for data: 1360902996
I0529 13:42:00.591794 17405 layer_factory.hpp:77] Creating layer conv5_1
I0529 13:42:00.591809 17405 net.cpp:106] Creating Layer conv5_1
I0529 13:42:00.591815 17405 net.cpp:454] conv5_1 <- pool4
I0529 13:42:00.591825 17405 net.cpp:411] conv5_1 -> conv5_1
I0529 13:42:00.599623 17405 net.cpp:150] Setting up conv5_1
I0529 13:42:00.599659 17405 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0529 13:42:00.599666 17405 net.cpp:165] Memory required for data: 1365805908
I0529 13:42:00.599680 17405 layer_factory.hpp:77] Creating layer relu5_1
I0529 13:42:00.599694 17405 net.cpp:106] Creating Layer relu5_1
I0529 13:42:00.599704 17405 net.cpp:454] relu5_1 <- conv5_1
I0529 13:42:00.599714 17405 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0529 13:42:00.599726 17405 net.cpp:150] Setting up relu5_1
I0529 13:42:00.599733 17405 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0529 13:42:00.599738 17405 net.cpp:165] Memory required for data: 1370708820
I0529 13:42:00.599743 17405 layer_factory.hpp:77] Creating layer conv5_2
I0529 13:42:00.599757 17405 net.cpp:106] Creating Layer conv5_2
I0529 13:42:00.599763 17405 net.cpp:454] conv5_2 <- conv5_1
I0529 13:42:00.599772 17405 net.cpp:411] conv5_2 -> conv5_2
I0529 13:42:00.609812 17405 net.cpp:150] Setting up conv5_2
I0529 13:42:00.609874 17405 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0529 13:42:00.609879 17405 net.cpp:165] Memory required for data: 1375611732
I0529 13:42:00.609894 17405 layer_factory.hpp:77] Creating layer relu5_2
I0529 13:42:00.609921 17405 net.cpp:106] Creating Layer relu5_2
I0529 13:42:00.609930 17405 net.cpp:454] relu5_2 <- conv5_2
I0529 13:42:00.609941 17405 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0529 13:42:00.609966 17405 net.cpp:150] Setting up relu5_2
I0529 13:42:00.609973 17405 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0529 13:42:00.609978 17405 net.cpp:165] Memory required for data: 1380514644
I0529 13:42:00.609983 17405 layer_factory.hpp:77] Creating layer conv5_3
I0529 13:42:00.610005 17405 net.cpp:106] Creating Layer conv5_3
I0529 13:42:00.610011 17405 net.cpp:454] conv5_3 <- conv5_2
I0529 13:42:00.610021 17405 net.cpp:411] conv5_3 -> conv5_3
I0529 13:42:00.618232 17405 net.cpp:150] Setting up conv5_3
I0529 13:42:00.618275 17405 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0529 13:42:00.618281 17405 net.cpp:165] Memory required for data: 1385417556
I0529 13:42:00.618294 17405 layer_factory.hpp:77] Creating layer relu5_3
I0529 13:42:00.618307 17405 net.cpp:106] Creating Layer relu5_3
I0529 13:42:00.618325 17405 net.cpp:454] relu5_3 <- conv5_3
I0529 13:42:00.618335 17405 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0529 13:42:00.618345 17405 net.cpp:150] Setting up relu5_3
I0529 13:42:00.618362 17405 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0529 13:42:00.618367 17405 net.cpp:165] Memory required for data: 1390320468
I0529 13:42:00.618372 17405 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0529 13:42:00.618381 17405 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0529 13:42:00.618386 17405 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0529 13:42:00.618392 17405 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0529 13:42:00.618402 17405 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0529 13:42:00.618450 17405 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0529 13:42:00.618459 17405 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0529 13:42:00.618465 17405 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0529 13:42:00.618469 17405 net.cpp:165] Memory required for data: 1400126292
I0529 13:42:00.618474 17405 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0529 13:42:00.618490 17405 net.cpp:106] Creating Layer rpn_conv/3x3
I0529 13:42:00.618497 17405 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0529 13:42:00.618507 17405 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0529 13:42:00.713572 17405 net.cpp:150] Setting up rpn_conv/3x3
I0529 13:42:00.713629 17405 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0529 13:42:00.713635 17405 net.cpp:165] Memory required for data: 1405029204
I0529 13:42:00.713649 17405 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0529 13:42:00.713665 17405 net.cpp:106] Creating Layer rpn_relu/3x3
I0529 13:42:00.713683 17405 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0529 13:42:00.713692 17405 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0529 13:42:00.713704 17405 net.cpp:150] Setting up rpn_relu/3x3
I0529 13:42:00.713709 17405 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0529 13:42:00.713713 17405 net.cpp:165] Memory required for data: 1409932116
I0529 13:42:00.713726 17405 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0529 13:42:00.713735 17405 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0529 13:42:00.713739 17405 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0529 13:42:00.713752 17405 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0529 13:42:00.713760 17405 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0529 13:42:00.713805 17405 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0529 13:42:00.713814 17405 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0529 13:42:00.713819 17405 net.cpp:157] Top shape: 1 512 38 63 (1225728)
I0529 13:42:00.713824 17405 net.cpp:165] Memory required for data: 1419737940
I0529 13:42:00.713827 17405 layer_factory.hpp:77] Creating layer rpn_cls_score
I0529 13:42:00.713841 17405 net.cpp:106] Creating Layer rpn_cls_score
I0529 13:42:00.713847 17405 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0529 13:42:00.713855 17405 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0529 13:42:00.714504 17405 net.cpp:150] Setting up rpn_cls_score
I0529 13:42:00.714514 17405 net.cpp:157] Top shape: 1 18 38 63 (43092)
I0529 13:42:00.714519 17405 net.cpp:165] Memory required for data: 1419910308
I0529 13:42:00.714532 17405 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0529 13:42:00.714540 17405 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0529 13:42:00.714545 17405 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0529 13:42:00.714552 17405 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0529 13:42:00.714578 17405 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0529 13:42:00.714643 17405 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0529 13:42:00.714651 17405 net.cpp:157] Top shape: 1 18 38 63 (43092)
I0529 13:42:00.714656 17405 net.cpp:157] Top shape: 1 18 38 63 (43092)
I0529 13:42:00.714660 17405 net.cpp:165] Memory required for data: 1420255044
I0529 13:42:00.714664 17405 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0529 13:42:00.714676 17405 net.cpp:106] Creating Layer rpn_bbox_pred
I0529 13:42:00.714681 17405 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0529 13:42:00.714690 17405 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0529 13:42:00.715672 17405 net.cpp:150] Setting up rpn_bbox_pred
I0529 13:42:00.715682 17405 net.cpp:157] Top shape: 1 36 38 63 (86184)
I0529 13:42:00.715687 17405 net.cpp:165] Memory required for data: 1420599780
I0529 13:42:00.715703 17405 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0529 13:42:00.715710 17405 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0529 13:42:00.715715 17405 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0529 13:42:00.715723 17405 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0529 13:42:00.715730 17405 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0529 13:42:00.715785 17405 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0529 13:42:00.715793 17405 net.cpp:157] Top shape: 1 36 38 63 (86184)
I0529 13:42:00.715798 17405 net.cpp:157] Top shape: 1 36 38 63 (86184)
I0529 13:42:00.715802 17405 net.cpp:165] Memory required for data: 1421289252
I0529 13:42:00.715807 17405 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0529 13:42:00.715816 17405 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0529 13:42:00.715821 17405 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0529 13:42:00.715828 17405 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0529 13:42:00.715857 17405 net.cpp:150] Setting up rpn_cls_score_reshape
I0529 13:42:00.715867 17405 net.cpp:157] Top shape: 1 2 342 63 (43092)
I0529 13:42:00.715870 17405 net.cpp:165] Memory required for data: 1421461620
I0529 13:42:00.715874 17405 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0529 13:42:00.715883 17405 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0529 13:42:00.715888 17405 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0529 13:42:00.715894 17405 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0529 13:42:00.715901 17405 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0529 13:42:00.715939 17405 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0529 13:42:00.715948 17405 net.cpp:157] Top shape: 1 2 342 63 (43092)
I0529 13:42:00.715953 17405 net.cpp:157] Top shape: 1 2 342 63 (43092)
I0529 13:42:00.715965 17405 net.cpp:165] Memory required for data: 1421806356
I0529 13:42:00.715970 17405 layer_factory.hpp:77] Creating layer rpn-data
I0529 13:42:00.716703 17405 net.cpp:106] Creating Layer rpn-data
I0529 13:42:00.716719 17405 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0529 13:42:00.716727 17405 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0529 13:42:00.716733 17405 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0529 13:42:00.716739 17405 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0529 13:42:00.716747 17405 net.cpp:411] rpn-data -> rpn_labels
I0529 13:42:00.716756 17405 net.cpp:411] rpn-data -> rpn_bbox_targets
I0529 13:42:00.716773 17405 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0529 13:42:00.716783 17405 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0529 13:42:00.717787 17405 net.cpp:150] Setting up rpn-data
I0529 13:42:00.717805 17405 net.cpp:157] Top shape: 1 1 342 63 (21546)
I0529 13:42:00.717811 17405 net.cpp:157] Top shape: 1 36 38 63 (86184)
I0529 13:42:00.717816 17405 net.cpp:157] Top shape: 1 36 38 63 (86184)
I0529 13:42:00.717821 17405 net.cpp:157] Top shape: 1 36 38 63 (86184)
I0529 13:42:00.717825 17405 net.cpp:165] Memory required for data: 1422926748
I0529 13:42:00.717830 17405 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0529 13:42:00.717840 17405 net.cpp:106] Creating Layer rpn_loss_cls
I0529 13:42:00.717845 17405 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0529 13:42:00.717852 17405 net.cpp:454] rpn_loss_cls <- rpn_labels
I0529 13:42:00.717859 17405 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0529 13:42:00.717888 17405 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0529 13:42:00.718075 17405 net.cpp:150] Setting up rpn_loss_cls
I0529 13:42:00.718086 17405 net.cpp:157] Top shape: (1)
I0529 13:42:00.718089 17405 net.cpp:160]     with loss weight 1
I0529 13:42:00.718104 17405 net.cpp:165] Memory required for data: 1422926752
I0529 13:42:00.718108 17405 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0529 13:42:00.718118 17405 net.cpp:106] Creating Layer rpn_loss_bbox
I0529 13:42:00.718123 17405 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0529 13:42:00.718140 17405 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0529 13:42:00.718147 17405 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0529 13:42:00.718152 17405 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0529 13:42:00.718158 17405 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0529 13:42:00.719036 17405 net.cpp:150] Setting up rpn_loss_bbox
I0529 13:42:00.719048 17405 net.cpp:157] Top shape: (1)
I0529 13:42:00.719051 17405 net.cpp:160]     with loss weight 1
I0529 13:42:00.719058 17405 net.cpp:165] Memory required for data: 1422926756
I0529 13:42:00.719063 17405 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0529 13:42:00.719082 17405 net.cpp:106] Creating Layer rpn_cls_prob
I0529 13:42:00.719087 17405 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0529 13:42:00.719094 17405 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0529 13:42:00.719168 17405 net.cpp:150] Setting up rpn_cls_prob
I0529 13:42:00.719177 17405 net.cpp:157] Top shape: 1 2 342 63 (43092)
I0529 13:42:00.719182 17405 net.cpp:165] Memory required for data: 1423099124
I0529 13:42:00.719187 17405 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0529 13:42:00.719195 17405 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0529 13:42:00.719200 17405 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0529 13:42:00.719208 17405 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0529 13:42:00.719235 17405 net.cpp:150] Setting up rpn_cls_prob_reshape
I0529 13:42:00.719244 17405 net.cpp:157] Top shape: 1 18 38 63 (43092)
I0529 13:42:00.719247 17405 net.cpp:165] Memory required for data: 1423271492
I0529 13:42:00.719252 17405 layer_factory.hpp:77] Creating layer proposal
I0529 13:42:00.720199 17405 net.cpp:106] Creating Layer proposal
I0529 13:42:00.720216 17405 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0529 13:42:00.720232 17405 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0529 13:42:00.720238 17405 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0529 13:42:00.720245 17405 net.cpp:411] proposal -> rpn_rois
I0529 13:42:00.721200 17405 net.cpp:150] Setting up proposal
I0529 13:42:00.721218 17405 net.cpp:157] Top shape: 1 5 (5)
I0529 13:42:00.721223 17405 net.cpp:165] Memory required for data: 1423271512
I0529 13:42:00.721230 17405 layer_factory.hpp:77] Creating layer roi-data
I0529 13:42:00.721447 17405 net.cpp:106] Creating Layer roi-data
I0529 13:42:00.721460 17405 net.cpp:454] roi-data <- rpn_rois
I0529 13:42:00.721467 17405 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0529 13:42:00.721477 17405 net.cpp:411] roi-data -> rois
I0529 13:42:00.721485 17405 net.cpp:411] roi-data -> labels
I0529 13:42:00.721496 17405 net.cpp:411] roi-data -> bbox_targets
I0529 13:42:00.721503 17405 net.cpp:411] roi-data -> bbox_inside_weights
I0529 13:42:00.721511 17405 net.cpp:411] roi-data -> bbox_outside_weights
I0529 13:42:00.721990 17405 net.cpp:150] Setting up roi-data
I0529 13:42:00.722007 17405 net.cpp:157] Top shape: 1 5 (5)
I0529 13:42:00.722012 17405 net.cpp:157] Top shape: 1 1 (1)
I0529 13:42:00.722018 17405 net.cpp:157] Top shape: 1 84 (84)
I0529 13:42:00.722021 17405 net.cpp:157] Top shape: 1 84 (84)
I0529 13:42:00.722026 17405 net.cpp:157] Top shape: 1 84 (84)
I0529 13:42:00.722030 17405 net.cpp:165] Memory required for data: 1423272544
I0529 13:42:00.722035 17405 layer_factory.hpp:77] Creating layer roi_pool5
I0529 13:42:00.722051 17405 net.cpp:106] Creating Layer roi_pool5
I0529 13:42:00.722059 17405 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0529 13:42:00.722066 17405 net.cpp:454] roi_pool5 <- rois
I0529 13:42:00.722072 17405 net.cpp:411] roi_pool5 -> pool5
I0529 13:42:00.722082 17405 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0529 13:42:00.722132 17405 net.cpp:150] Setting up roi_pool5
I0529 13:42:00.722141 17405 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0529 13:42:00.722146 17405 net.cpp:165] Memory required for data: 1423372896
I0529 13:42:00.722151 17405 layer_factory.hpp:77] Creating layer fc6
I0529 13:42:00.722162 17405 net.cpp:106] Creating Layer fc6
I0529 13:42:00.722167 17405 net.cpp:454] fc6 <- pool5
I0529 13:42:00.722173 17405 net.cpp:411] fc6 -> fc6
I0529 13:42:01.108203 17405 net.cpp:150] Setting up fc6
I0529 13:42:01.108275 17405 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:01.108283 17405 net.cpp:165] Memory required for data: 1423389280
I0529 13:42:01.108331 17405 layer_factory.hpp:77] Creating layer relu6
I0529 13:42:01.108351 17405 net.cpp:106] Creating Layer relu6
I0529 13:42:01.108359 17405 net.cpp:454] relu6 <- fc6
I0529 13:42:01.108381 17405 net.cpp:397] relu6 -> fc6 (in-place)
I0529 13:42:01.108397 17405 net.cpp:150] Setting up relu6
I0529 13:42:01.108410 17405 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:01.108415 17405 net.cpp:165] Memory required for data: 1423405664
I0529 13:42:01.108422 17405 layer_factory.hpp:77] Creating layer drop6
I0529 13:42:01.108433 17405 net.cpp:106] Creating Layer drop6
I0529 13:42:01.108438 17405 net.cpp:454] drop6 <- fc6
I0529 13:42:01.108445 17405 net.cpp:397] drop6 -> fc6 (in-place)
I0529 13:42:01.108482 17405 net.cpp:150] Setting up drop6
I0529 13:42:01.108492 17405 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:01.108497 17405 net.cpp:165] Memory required for data: 1423422048
I0529 13:42:01.108502 17405 layer_factory.hpp:77] Creating layer fc7
I0529 13:42:01.108513 17405 net.cpp:106] Creating Layer fc7
I0529 13:42:01.108518 17405 net.cpp:454] fc7 <- fc6
I0529 13:42:01.108527 17405 net.cpp:411] fc7 -> fc7
I0529 13:42:01.157586 17405 net.cpp:150] Setting up fc7
I0529 13:42:01.157642 17405 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:01.157649 17405 net.cpp:165] Memory required for data: 1423438432
I0529 13:42:01.157665 17405 layer_factory.hpp:77] Creating layer relu7
I0529 13:42:01.157680 17405 net.cpp:106] Creating Layer relu7
I0529 13:42:01.157690 17405 net.cpp:454] relu7 <- fc7
I0529 13:42:01.157699 17405 net.cpp:397] relu7 -> fc7 (in-place)
I0529 13:42:01.157713 17405 net.cpp:150] Setting up relu7
I0529 13:42:01.157721 17405 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:01.157726 17405 net.cpp:165] Memory required for data: 1423454816
I0529 13:42:01.157729 17405 layer_factory.hpp:77] Creating layer drop7
I0529 13:42:01.157738 17405 net.cpp:106] Creating Layer drop7
I0529 13:42:01.157743 17405 net.cpp:454] drop7 <- fc7
I0529 13:42:01.157750 17405 net.cpp:397] drop7 -> fc7 (in-place)
I0529 13:42:01.157783 17405 net.cpp:150] Setting up drop7
I0529 13:42:01.157791 17405 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:01.157796 17405 net.cpp:165] Memory required for data: 1423471200
I0529 13:42:01.157800 17405 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0529 13:42:01.157810 17405 net.cpp:106] Creating Layer fc7_drop7_0_split
I0529 13:42:01.157814 17405 net.cpp:454] fc7_drop7_0_split <- fc7
I0529 13:42:01.157821 17405 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0529 13:42:01.157830 17405 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0529 13:42:01.157881 17405 net.cpp:150] Setting up fc7_drop7_0_split
I0529 13:42:01.157892 17405 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:01.157897 17405 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:01.157902 17405 net.cpp:165] Memory required for data: 1423503968
I0529 13:42:01.157907 17405 layer_factory.hpp:77] Creating layer cls_score
I0529 13:42:01.157918 17405 net.cpp:106] Creating Layer cls_score
I0529 13:42:01.157923 17405 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0529 13:42:01.157932 17405 net.cpp:411] cls_score -> cls_score
I0529 13:42:01.161258 17405 net.cpp:150] Setting up cls_score
I0529 13:42:01.161272 17405 net.cpp:157] Top shape: 1 21 (21)
I0529 13:42:01.161275 17405 net.cpp:165] Memory required for data: 1423504052
I0529 13:42:01.161283 17405 layer_factory.hpp:77] Creating layer bbox_pred
I0529 13:42:01.161293 17405 net.cpp:106] Creating Layer bbox_pred
I0529 13:42:01.161298 17405 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0529 13:42:01.161306 17405 net.cpp:411] bbox_pred -> bbox_pred
I0529 13:42:01.175318 17405 net.cpp:150] Setting up bbox_pred
I0529 13:42:01.175338 17405 net.cpp:157] Top shape: 1 84 (84)
I0529 13:42:01.175343 17405 net.cpp:165] Memory required for data: 1423504388
I0529 13:42:01.175351 17405 layer_factory.hpp:77] Creating layer loss_cls
I0529 13:42:01.175361 17405 net.cpp:106] Creating Layer loss_cls
I0529 13:42:01.175367 17405 net.cpp:454] loss_cls <- cls_score
I0529 13:42:01.175374 17405 net.cpp:454] loss_cls <- labels
I0529 13:42:01.175382 17405 net.cpp:411] loss_cls -> loss_cls
I0529 13:42:01.175395 17405 layer_factory.hpp:77] Creating layer loss_cls
I0529 13:42:01.175506 17405 net.cpp:150] Setting up loss_cls
I0529 13:42:01.175516 17405 net.cpp:157] Top shape: (1)
I0529 13:42:01.175521 17405 net.cpp:160]     with loss weight 1
I0529 13:42:01.175544 17405 net.cpp:165] Memory required for data: 1423504392
I0529 13:42:01.175549 17405 layer_factory.hpp:77] Creating layer loss_bbox
I0529 13:42:01.175557 17405 net.cpp:106] Creating Layer loss_bbox
I0529 13:42:01.175562 17405 net.cpp:454] loss_bbox <- bbox_pred
I0529 13:42:01.175570 17405 net.cpp:454] loss_bbox <- bbox_targets
I0529 13:42:01.175575 17405 net.cpp:454] loss_bbox <- bbox_inside_weights
I0529 13:42:01.175580 17405 net.cpp:454] loss_bbox <- bbox_outside_weights
I0529 13:42:01.175587 17405 net.cpp:411] loss_bbox -> loss_bbox
I0529 13:42:01.175683 17405 net.cpp:150] Setting up loss_bbox
I0529 13:42:01.175691 17405 net.cpp:157] Top shape: (1)
I0529 13:42:01.175696 17405 net.cpp:160]     with loss weight 1
I0529 13:42:01.175703 17405 net.cpp:165] Memory required for data: 1423504396
I0529 13:42:01.175707 17405 net.cpp:226] loss_bbox needs backward computation.
I0529 13:42:01.175714 17405 net.cpp:226] loss_cls needs backward computation.
I0529 13:42:01.175719 17405 net.cpp:226] bbox_pred needs backward computation.
I0529 13:42:01.175724 17405 net.cpp:226] cls_score needs backward computation.
I0529 13:42:01.175729 17405 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0529 13:42:01.175734 17405 net.cpp:226] drop7 needs backward computation.
I0529 13:42:01.175737 17405 net.cpp:226] relu7 needs backward computation.
I0529 13:42:01.175741 17405 net.cpp:226] fc7 needs backward computation.
I0529 13:42:01.175746 17405 net.cpp:226] drop6 needs backward computation.
I0529 13:42:01.175750 17405 net.cpp:226] relu6 needs backward computation.
I0529 13:42:01.175755 17405 net.cpp:226] fc6 needs backward computation.
I0529 13:42:01.175760 17405 net.cpp:226] roi_pool5 needs backward computation.
I0529 13:42:01.175765 17405 net.cpp:226] roi-data needs backward computation.
I0529 13:42:01.175770 17405 net.cpp:226] proposal needs backward computation.
I0529 13:42:01.175777 17405 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0529 13:42:01.175782 17405 net.cpp:226] rpn_cls_prob needs backward computation.
I0529 13:42:01.175788 17405 net.cpp:226] rpn_loss_bbox needs backward computation.
I0529 13:42:01.175796 17405 net.cpp:226] rpn_loss_cls needs backward computation.
I0529 13:42:01.175802 17405 net.cpp:226] rpn-data needs backward computation.
I0529 13:42:01.175810 17405 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0529 13:42:01.175817 17405 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0529 13:42:01.175822 17405 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0529 13:42:01.175827 17405 net.cpp:226] rpn_bbox_pred needs backward computation.
I0529 13:42:01.175832 17405 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0529 13:42:01.175838 17405 net.cpp:226] rpn_cls_score needs backward computation.
I0529 13:42:01.175843 17405 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0529 13:42:01.175848 17405 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0529 13:42:01.175853 17405 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0529 13:42:01.175859 17405 net.cpp:226] conv5_3_relu5_3_0_split needs backward computation.
I0529 13:42:01.175865 17405 net.cpp:226] relu5_3 needs backward computation.
I0529 13:42:01.175869 17405 net.cpp:226] conv5_3 needs backward computation.
I0529 13:42:01.175874 17405 net.cpp:226] relu5_2 needs backward computation.
I0529 13:42:01.175879 17405 net.cpp:226] conv5_2 needs backward computation.
I0529 13:42:01.175884 17405 net.cpp:226] relu5_1 needs backward computation.
I0529 13:42:01.175889 17405 net.cpp:226] conv5_1 needs backward computation.
I0529 13:42:01.175894 17405 net.cpp:226] pool4 needs backward computation.
I0529 13:42:01.175899 17405 net.cpp:226] relu4_3 needs backward computation.
I0529 13:42:01.175902 17405 net.cpp:226] conv4_3 needs backward computation.
I0529 13:42:01.175907 17405 net.cpp:226] relu4_2 needs backward computation.
I0529 13:42:01.175912 17405 net.cpp:226] conv4_2 needs backward computation.
I0529 13:42:01.175916 17405 net.cpp:226] relu4_1 needs backward computation.
I0529 13:42:01.175921 17405 net.cpp:226] conv4_1 needs backward computation.
I0529 13:42:01.175925 17405 net.cpp:226] pool3 needs backward computation.
I0529 13:42:01.175930 17405 net.cpp:226] relu3_3 needs backward computation.
I0529 13:42:01.175935 17405 net.cpp:226] conv3_3 needs backward computation.
I0529 13:42:01.175940 17405 net.cpp:226] relu3_2 needs backward computation.
I0529 13:42:01.175945 17405 net.cpp:226] conv3_2 needs backward computation.
I0529 13:42:01.175949 17405 net.cpp:226] relu3_1 needs backward computation.
I0529 13:42:01.175953 17405 net.cpp:226] conv3_1 needs backward computation.
I0529 13:42:01.175958 17405 net.cpp:228] pool2 does not need backward computation.
I0529 13:42:01.175963 17405 net.cpp:228] relu2_2 does not need backward computation.
I0529 13:42:01.175968 17405 net.cpp:228] conv2_2 does not need backward computation.
I0529 13:42:01.175973 17405 net.cpp:228] relu2_1 does not need backward computation.
I0529 13:42:01.175978 17405 net.cpp:228] conv2_1 does not need backward computation.
I0529 13:42:01.175983 17405 net.cpp:228] pool1 does not need backward computation.
I0529 13:42:01.175988 17405 net.cpp:228] relu1_2 does not need backward computation.
I0529 13:42:01.175993 17405 net.cpp:228] conv1_2 does not need backward computation.
I0529 13:42:01.175998 17405 net.cpp:228] relu1_1 does not need backward computation.
I0529 13:42:01.176003 17405 net.cpp:228] conv1_1 does not need backward computation.
I0529 13:42:01.176009 17405 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0529 13:42:01.176015 17405 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0529 13:42:01.176021 17405 net.cpp:228] data_input-data_0_split does not need backward computation.
I0529 13:42:01.176028 17405 net.cpp:228] input-data does not need backward computation.
I0529 13:42:01.176033 17405 net.cpp:270] This network produces output loss_bbox
I0529 13:42:01.176038 17405 net.cpp:270] This network produces output loss_cls
I0529 13:42:01.176043 17405 net.cpp:270] This network produces output rpn_cls_loss
I0529 13:42:01.176048 17405 net.cpp:270] This network produces output rpn_loss_bbox
I0529 13:42:01.176107 17405 net.cpp:283] Network initialization done.
I0529 13:42:01.176326 17405 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/VGG16.v2.caffemodel
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:505] Reading dangerously large protocol message.  If the message turns out to be larger than 2147483647 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:78] The total number of bytes read was 553432430
I0529 13:42:02.497393 17405 net.cpp:816] Ignoring source layer pool5
I0529 13:42:02.594445 17405 net.cpp:816] Ignoring source layer fc8
I0529 13:42:02.594481 17405 net.cpp:816] Ignoring source layer prob
Solving...
/home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/tools/../lib/rpn/proposal_target_layer.py:127: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bbox_targets[ind, start:end] = bbox_target_data[ind, 1:]
/home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/tools/../lib/rpn/proposal_target_layer.py:128: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bbox_inside_weights[ind, start:end] = cfg.TRAIN.BBOX_INSIDE_WEIGHTS
I0529 13:42:03.032193 17405 solver.cpp:229] Iteration 0, loss = 4.80922
I0529 13:42:03.032261 17405 solver.cpp:245]     Train net output #0: loss_bbox = 6.69785e-05 (* 1 = 6.69785e-05 loss)
I0529 13:42:03.032270 17405 solver.cpp:245]     Train net output #1: loss_cls = 3.78894 (* 1 = 3.78894 loss)
I0529 13:42:03.032277 17405 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.725276 (* 1 = 0.725276 loss)
I0529 13:42:03.032284 17405 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.380128 (* 1 = 0.380128 loss)
I0529 13:42:03.032307 17405 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0529 13:42:10.258921 17405 solver.cpp:229] Iteration 20, loss = 1.05693
I0529 13:42:10.258998 17405 solver.cpp:245]     Train net output #0: loss_bbox = 0.000383206 (* 1 = 0.000383206 loss)
I0529 13:42:10.259008 17405 solver.cpp:245]     Train net output #1: loss_cls = 0.131827 (* 1 = 0.131827 loss)
I0529 13:42:10.259016 17405 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.297188 (* 1 = 0.297188 loss)
I0529 13:42:10.259022 17405 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.20163 (* 1 = 0.20163 loss)
I0529 13:42:10.259032 17405 sgd_solver.cpp:106] Iteration 20, lr = 0.001
/home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/tools/../lib/rpn/proposal_target_layer.py:166: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  fg_inds = npr.choice(fg_inds, size=fg_rois_per_this_image, replace=False)
/home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/tools/../lib/rpn/proposal_target_layer.py:177: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bg_inds = npr.choice(bg_inds, size=bg_rois_per_this_image, replace=False)
/home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/tools/../lib/rpn/proposal_target_layer.py:184: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  labels[fg_rois_per_this_image:] = 0
I0529 13:42:17.560132 17405 solver.cpp:229] Iteration 40, loss = 1.56577
I0529 13:42:17.560202 17405 solver.cpp:245]     Train net output #0: loss_bbox = 0.499403 (* 1 = 0.499403 loss)
I0529 13:42:17.560211 17405 solver.cpp:245]     Train net output #1: loss_cls = 0.661308 (* 1 = 0.661308 loss)
I0529 13:42:17.560217 17405 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.675885 (* 1 = 0.675885 loss)
I0529 13:42:17.560222 17405 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.589369 (* 1 = 0.589369 loss)
I0529 13:42:17.560245 17405 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0529 13:42:24.772963 17405 solver.cpp:229] Iteration 60, loss = 0.334391
I0529 13:42:24.773038 17405 solver.cpp:245]     Train net output #0: loss_bbox = 0.0189847 (* 1 = 0.0189847 loss)
I0529 13:42:24.773047 17405 solver.cpp:245]     Train net output #1: loss_cls = 0.0828319 (* 1 = 0.0828319 loss)
I0529 13:42:24.773053 17405 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.186801 (* 1 = 0.186801 loss)
I0529 13:42:24.773059 17405 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.12206 (* 1 = 0.12206 loss)
I0529 13:42:24.773067 17405 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0529 13:42:32.041365 17405 solver.cpp:229] Iteration 80, loss = 0.611461
I0529 13:42:32.041435 17405 solver.cpp:245]     Train net output #0: loss_bbox = 0.000631049 (* 1 = 0.000631049 loss)
I0529 13:42:32.041445 17405 solver.cpp:245]     Train net output #1: loss_cls = 0.115123 (* 1 = 0.115123 loss)
I0529 13:42:32.041452 17405 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.135109 (* 1 = 0.135109 loss)
I0529 13:42:32.041460 17405 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.196714 (* 1 = 0.196714 loss)
I0529 13:42:32.041468 17405 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/output/seed_rng1701/caltech_train_1x/vgg16_faster_rcnn_iter_100.caffemodel
done solving

real	0m56.990s
user	0m48.516s
sys	0m14.048s
+ set +x
+ ./tools/test_net.py --gpu 0 --def models/caltech/VGG16/faster_rcnn_end2end/test.prototxt --net /home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/output/seed_rng1701/caltech_train_1x/vgg16_faster_rcnn_iter_100.caffemodel --imdb caltech_test_1x --cfg experiments/cfgs/faster_rcnn_end2end.yml --set EXP_DIR seed_rng1701 RNG_SEED 1701
Called with args:
Namespace(caffemodel='/home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/output/seed_rng1701/caltech_train_1x/vgg16_faster_rcnn_iter_100.caffemodel', cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', comp_mode=False, gpu_id=0, imdb_name='caltech_test_1x', max_per_image=100, prototxt='models/caltech/VGG16/faster_rcnn_end2end/test.prototxt', set_cfgs=['EXP_DIR', 'seed_rng1701', 'RNG_SEED', '1701'], vis=False, wait=True)
Using config:
{'DATA_DIR': '/home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'seed_rng1701',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 1701,
 'ROOT_DIR': '/home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0529 13:42:43.433249 17660 net.cpp:49] Initializing net from parameters:
name: "VGG_ILSVRC_16_layers"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 21
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 84
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
}
I0529 13:42:43.433493 17660 net.cpp:413] Input 0 -> data
I0529 13:42:43.454138 17660 net.cpp:413] Input 1 -> im_info
I0529 13:42:43.454223 17660 layer_factory.hpp:77] Creating layer conv1_1
I0529 13:42:43.454257 17660 net.cpp:106] Creating Layer conv1_1
I0529 13:42:43.454263 17660 net.cpp:454] conv1_1 <- data
I0529 13:42:43.454272 17660 net.cpp:411] conv1_1 -> conv1_1
I0529 13:42:43.457173 17660 net.cpp:150] Setting up conv1_1
I0529 13:42:43.457216 17660 net.cpp:157] Top shape: 1 64 224 224 (3211264)
I0529 13:42:43.457221 17660 net.cpp:165] Memory required for data: 12845056
I0529 13:42:43.457242 17660 layer_factory.hpp:77] Creating layer relu1_1
I0529 13:42:43.457264 17660 net.cpp:106] Creating Layer relu1_1
I0529 13:42:43.457269 17660 net.cpp:454] relu1_1 <- conv1_1
I0529 13:42:43.457278 17660 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0529 13:42:43.457301 17660 net.cpp:150] Setting up relu1_1
I0529 13:42:43.457307 17660 net.cpp:157] Top shape: 1 64 224 224 (3211264)
I0529 13:42:43.457312 17660 net.cpp:165] Memory required for data: 25690112
I0529 13:42:43.457316 17660 layer_factory.hpp:77] Creating layer conv1_2
I0529 13:42:43.457327 17660 net.cpp:106] Creating Layer conv1_2
I0529 13:42:43.457332 17660 net.cpp:454] conv1_2 <- conv1_1
I0529 13:42:43.457340 17660 net.cpp:411] conv1_2 -> conv1_2
I0529 13:42:43.457679 17660 net.cpp:150] Setting up conv1_2
I0529 13:42:43.457692 17660 net.cpp:157] Top shape: 1 64 224 224 (3211264)
I0529 13:42:43.457697 17660 net.cpp:165] Memory required for data: 38535168
I0529 13:42:43.457707 17660 layer_factory.hpp:77] Creating layer relu1_2
I0529 13:42:43.457715 17660 net.cpp:106] Creating Layer relu1_2
I0529 13:42:43.457720 17660 net.cpp:454] relu1_2 <- conv1_2
I0529 13:42:43.457727 17660 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0529 13:42:43.457734 17660 net.cpp:150] Setting up relu1_2
I0529 13:42:43.457741 17660 net.cpp:157] Top shape: 1 64 224 224 (3211264)
I0529 13:42:43.457744 17660 net.cpp:165] Memory required for data: 51380224
I0529 13:42:43.457749 17660 layer_factory.hpp:77] Creating layer pool1
I0529 13:42:43.457758 17660 net.cpp:106] Creating Layer pool1
I0529 13:42:43.457763 17660 net.cpp:454] pool1 <- conv1_2
I0529 13:42:43.457770 17660 net.cpp:411] pool1 -> pool1
I0529 13:42:43.457820 17660 net.cpp:150] Setting up pool1
I0529 13:42:43.457829 17660 net.cpp:157] Top shape: 1 64 112 112 (802816)
I0529 13:42:43.457834 17660 net.cpp:165] Memory required for data: 54591488
I0529 13:42:43.457839 17660 layer_factory.hpp:77] Creating layer conv2_1
I0529 13:42:43.457849 17660 net.cpp:106] Creating Layer conv2_1
I0529 13:42:43.457854 17660 net.cpp:454] conv2_1 <- pool1
I0529 13:42:43.457861 17660 net.cpp:411] conv2_1 -> conv2_1
I0529 13:42:43.460778 17660 net.cpp:150] Setting up conv2_1
I0529 13:42:43.460799 17660 net.cpp:157] Top shape: 1 128 112 112 (1605632)
I0529 13:42:43.460805 17660 net.cpp:165] Memory required for data: 61014016
I0529 13:42:43.460819 17660 layer_factory.hpp:77] Creating layer relu2_1
I0529 13:42:43.460829 17660 net.cpp:106] Creating Layer relu2_1
I0529 13:42:43.460834 17660 net.cpp:454] relu2_1 <- conv2_1
I0529 13:42:43.460841 17660 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0529 13:42:43.460850 17660 net.cpp:150] Setting up relu2_1
I0529 13:42:43.460856 17660 net.cpp:157] Top shape: 1 128 112 112 (1605632)
I0529 13:42:43.460860 17660 net.cpp:165] Memory required for data: 67436544
I0529 13:42:43.460865 17660 layer_factory.hpp:77] Creating layer conv2_2
I0529 13:42:43.460876 17660 net.cpp:106] Creating Layer conv2_2
I0529 13:42:43.460881 17660 net.cpp:454] conv2_2 <- conv2_1
I0529 13:42:43.460888 17660 net.cpp:411] conv2_2 -> conv2_2
I0529 13:42:43.461292 17660 net.cpp:150] Setting up conv2_2
I0529 13:42:43.461305 17660 net.cpp:157] Top shape: 1 128 112 112 (1605632)
I0529 13:42:43.461309 17660 net.cpp:165] Memory required for data: 73859072
I0529 13:42:43.461318 17660 layer_factory.hpp:77] Creating layer relu2_2
I0529 13:42:43.461328 17660 net.cpp:106] Creating Layer relu2_2
I0529 13:42:43.461331 17660 net.cpp:454] relu2_2 <- conv2_2
I0529 13:42:43.461339 17660 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0529 13:42:43.461346 17660 net.cpp:150] Setting up relu2_2
I0529 13:42:43.461352 17660 net.cpp:157] Top shape: 1 128 112 112 (1605632)
I0529 13:42:43.461356 17660 net.cpp:165] Memory required for data: 80281600
I0529 13:42:43.461361 17660 layer_factory.hpp:77] Creating layer pool2
I0529 13:42:43.461369 17660 net.cpp:106] Creating Layer pool2
I0529 13:42:43.461374 17660 net.cpp:454] pool2 <- conv2_2
I0529 13:42:43.461380 17660 net.cpp:411] pool2 -> pool2
I0529 13:42:43.461423 17660 net.cpp:150] Setting up pool2
I0529 13:42:43.461432 17660 net.cpp:157] Top shape: 1 128 56 56 (401408)
I0529 13:42:43.461437 17660 net.cpp:165] Memory required for data: 81887232
I0529 13:42:43.461441 17660 layer_factory.hpp:77] Creating layer conv3_1
I0529 13:42:43.461452 17660 net.cpp:106] Creating Layer conv3_1
I0529 13:42:43.461457 17660 net.cpp:454] conv3_1 <- pool2
I0529 13:42:43.461464 17660 net.cpp:411] conv3_1 -> conv3_1
I0529 13:42:43.462003 17660 net.cpp:150] Setting up conv3_1
I0529 13:42:43.462014 17660 net.cpp:157] Top shape: 1 256 56 56 (802816)
I0529 13:42:43.462019 17660 net.cpp:165] Memory required for data: 85098496
I0529 13:42:43.462043 17660 layer_factory.hpp:77] Creating layer relu3_1
I0529 13:42:43.462054 17660 net.cpp:106] Creating Layer relu3_1
I0529 13:42:43.462057 17660 net.cpp:454] relu3_1 <- conv3_1
I0529 13:42:43.462065 17660 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0529 13:42:43.462072 17660 net.cpp:150] Setting up relu3_1
I0529 13:42:43.462079 17660 net.cpp:157] Top shape: 1 256 56 56 (802816)
I0529 13:42:43.462082 17660 net.cpp:165] Memory required for data: 88309760
I0529 13:42:43.462086 17660 layer_factory.hpp:77] Creating layer conv3_2
I0529 13:42:43.462096 17660 net.cpp:106] Creating Layer conv3_2
I0529 13:42:43.462100 17660 net.cpp:454] conv3_2 <- conv3_1
I0529 13:42:43.462108 17660 net.cpp:411] conv3_2 -> conv3_2
I0529 13:42:43.464391 17660 net.cpp:150] Setting up conv3_2
I0529 13:42:43.464412 17660 net.cpp:157] Top shape: 1 256 56 56 (802816)
I0529 13:42:43.464417 17660 net.cpp:165] Memory required for data: 91521024
I0529 13:42:43.464427 17660 layer_factory.hpp:77] Creating layer relu3_2
I0529 13:42:43.464448 17660 net.cpp:106] Creating Layer relu3_2
I0529 13:42:43.464454 17660 net.cpp:454] relu3_2 <- conv3_2
I0529 13:42:43.464462 17660 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0529 13:42:43.464470 17660 net.cpp:150] Setting up relu3_2
I0529 13:42:43.464476 17660 net.cpp:157] Top shape: 1 256 56 56 (802816)
I0529 13:42:43.464481 17660 net.cpp:165] Memory required for data: 94732288
I0529 13:42:43.464485 17660 layer_factory.hpp:77] Creating layer conv3_3
I0529 13:42:43.464496 17660 net.cpp:106] Creating Layer conv3_3
I0529 13:42:43.464501 17660 net.cpp:454] conv3_3 <- conv3_2
I0529 13:42:43.464509 17660 net.cpp:411] conv3_3 -> conv3_3
I0529 13:42:43.466789 17660 net.cpp:150] Setting up conv3_3
I0529 13:42:43.466805 17660 net.cpp:157] Top shape: 1 256 56 56 (802816)
I0529 13:42:43.466811 17660 net.cpp:165] Memory required for data: 97943552
I0529 13:42:43.466840 17660 layer_factory.hpp:77] Creating layer relu3_3
I0529 13:42:43.466861 17660 net.cpp:106] Creating Layer relu3_3
I0529 13:42:43.466866 17660 net.cpp:454] relu3_3 <- conv3_3
I0529 13:42:43.466883 17660 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0529 13:42:43.466892 17660 net.cpp:150] Setting up relu3_3
I0529 13:42:43.466897 17660 net.cpp:157] Top shape: 1 256 56 56 (802816)
I0529 13:42:43.466902 17660 net.cpp:165] Memory required for data: 101154816
I0529 13:42:43.466905 17660 layer_factory.hpp:77] Creating layer pool3
I0529 13:42:43.466915 17660 net.cpp:106] Creating Layer pool3
I0529 13:42:43.466922 17660 net.cpp:454] pool3 <- conv3_3
I0529 13:42:43.466929 17660 net.cpp:411] pool3 -> pool3
I0529 13:42:43.466974 17660 net.cpp:150] Setting up pool3
I0529 13:42:43.466984 17660 net.cpp:157] Top shape: 1 256 28 28 (200704)
I0529 13:42:43.466987 17660 net.cpp:165] Memory required for data: 101957632
I0529 13:42:43.466992 17660 layer_factory.hpp:77] Creating layer conv4_1
I0529 13:42:43.467003 17660 net.cpp:106] Creating Layer conv4_1
I0529 13:42:43.467007 17660 net.cpp:454] conv4_1 <- pool3
I0529 13:42:43.467016 17660 net.cpp:411] conv4_1 -> conv4_1
I0529 13:42:43.472092 17660 net.cpp:150] Setting up conv4_1
I0529 13:42:43.472115 17660 net.cpp:157] Top shape: 1 512 28 28 (401408)
I0529 13:42:43.472121 17660 net.cpp:165] Memory required for data: 103563264
I0529 13:42:43.472131 17660 layer_factory.hpp:77] Creating layer relu4_1
I0529 13:42:43.472153 17660 net.cpp:106] Creating Layer relu4_1
I0529 13:42:43.472158 17660 net.cpp:454] relu4_1 <- conv4_1
I0529 13:42:43.472167 17660 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0529 13:42:43.472177 17660 net.cpp:150] Setting up relu4_1
I0529 13:42:43.472182 17660 net.cpp:157] Top shape: 1 512 28 28 (401408)
I0529 13:42:43.472187 17660 net.cpp:165] Memory required for data: 105168896
I0529 13:42:43.472192 17660 layer_factory.hpp:77] Creating layer conv4_2
I0529 13:42:43.472203 17660 net.cpp:106] Creating Layer conv4_2
I0529 13:42:43.472210 17660 net.cpp:454] conv4_2 <- conv4_1
I0529 13:42:43.472218 17660 net.cpp:411] conv4_2 -> conv4_2
I0529 13:42:43.479590 17660 net.cpp:150] Setting up conv4_2
I0529 13:42:43.479624 17660 net.cpp:157] Top shape: 1 512 28 28 (401408)
I0529 13:42:43.479630 17660 net.cpp:165] Memory required for data: 106774528
I0529 13:42:43.479662 17660 layer_factory.hpp:77] Creating layer relu4_2
I0529 13:42:43.479676 17660 net.cpp:106] Creating Layer relu4_2
I0529 13:42:43.479682 17660 net.cpp:454] relu4_2 <- conv4_2
I0529 13:42:43.479691 17660 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0529 13:42:43.479701 17660 net.cpp:150] Setting up relu4_2
I0529 13:42:43.479707 17660 net.cpp:157] Top shape: 1 512 28 28 (401408)
I0529 13:42:43.479710 17660 net.cpp:165] Memory required for data: 108380160
I0529 13:42:43.479714 17660 layer_factory.hpp:77] Creating layer conv4_3
I0529 13:42:43.479725 17660 net.cpp:106] Creating Layer conv4_3
I0529 13:42:43.479732 17660 net.cpp:454] conv4_3 <- conv4_2
I0529 13:42:43.479740 17660 net.cpp:411] conv4_3 -> conv4_3
I0529 13:42:43.488737 17660 net.cpp:150] Setting up conv4_3
I0529 13:42:43.488791 17660 net.cpp:157] Top shape: 1 512 28 28 (401408)
I0529 13:42:43.488797 17660 net.cpp:165] Memory required for data: 109985792
I0529 13:42:43.488812 17660 layer_factory.hpp:77] Creating layer relu4_3
I0529 13:42:43.488839 17660 net.cpp:106] Creating Layer relu4_3
I0529 13:42:43.488847 17660 net.cpp:454] relu4_3 <- conv4_3
I0529 13:42:43.488857 17660 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0529 13:42:43.488870 17660 net.cpp:150] Setting up relu4_3
I0529 13:42:43.488878 17660 net.cpp:157] Top shape: 1 512 28 28 (401408)
I0529 13:42:43.488883 17660 net.cpp:165] Memory required for data: 111591424
I0529 13:42:43.488888 17660 layer_factory.hpp:77] Creating layer pool4
I0529 13:42:43.488898 17660 net.cpp:106] Creating Layer pool4
I0529 13:42:43.488903 17660 net.cpp:454] pool4 <- conv4_3
I0529 13:42:43.488910 17660 net.cpp:411] pool4 -> pool4
I0529 13:42:43.488960 17660 net.cpp:150] Setting up pool4
I0529 13:42:43.488970 17660 net.cpp:157] Top shape: 1 512 14 14 (100352)
I0529 13:42:43.488976 17660 net.cpp:165] Memory required for data: 111992832
I0529 13:42:43.488979 17660 layer_factory.hpp:77] Creating layer conv5_1
I0529 13:42:43.488994 17660 net.cpp:106] Creating Layer conv5_1
I0529 13:42:43.489001 17660 net.cpp:454] conv5_1 <- pool4
I0529 13:42:43.489009 17660 net.cpp:411] conv5_1 -> conv5_1
I0529 13:42:43.496655 17660 net.cpp:150] Setting up conv5_1
I0529 13:42:43.496685 17660 net.cpp:157] Top shape: 1 512 14 14 (100352)
I0529 13:42:43.496690 17660 net.cpp:165] Memory required for data: 112394240
I0529 13:42:43.496702 17660 layer_factory.hpp:77] Creating layer relu5_1
I0529 13:42:43.496726 17660 net.cpp:106] Creating Layer relu5_1
I0529 13:42:43.496732 17660 net.cpp:454] relu5_1 <- conv5_1
I0529 13:42:43.496742 17660 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0529 13:42:43.496752 17660 net.cpp:150] Setting up relu5_1
I0529 13:42:43.496759 17660 net.cpp:157] Top shape: 1 512 14 14 (100352)
I0529 13:42:43.496763 17660 net.cpp:165] Memory required for data: 112795648
I0529 13:42:43.496768 17660 layer_factory.hpp:77] Creating layer conv5_2
I0529 13:42:43.496781 17660 net.cpp:106] Creating Layer conv5_2
I0529 13:42:43.496785 17660 net.cpp:454] conv5_2 <- conv5_1
I0529 13:42:43.496793 17660 net.cpp:411] conv5_2 -> conv5_2
I0529 13:42:43.503721 17660 net.cpp:150] Setting up conv5_2
I0529 13:42:43.503744 17660 net.cpp:157] Top shape: 1 512 14 14 (100352)
I0529 13:42:43.503749 17660 net.cpp:165] Memory required for data: 113197056
I0529 13:42:43.503758 17660 layer_factory.hpp:77] Creating layer relu5_2
I0529 13:42:43.503780 17660 net.cpp:106] Creating Layer relu5_2
I0529 13:42:43.503787 17660 net.cpp:454] relu5_2 <- conv5_2
I0529 13:42:43.503793 17660 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0529 13:42:43.503803 17660 net.cpp:150] Setting up relu5_2
I0529 13:42:43.503808 17660 net.cpp:157] Top shape: 1 512 14 14 (100352)
I0529 13:42:43.503813 17660 net.cpp:165] Memory required for data: 113598464
I0529 13:42:43.503816 17660 layer_factory.hpp:77] Creating layer conv5_3
I0529 13:42:43.503828 17660 net.cpp:106] Creating Layer conv5_3
I0529 13:42:43.503834 17660 net.cpp:454] conv5_3 <- conv5_2
I0529 13:42:43.503842 17660 net.cpp:411] conv5_3 -> conv5_3
I0529 13:42:43.510756 17660 net.cpp:150] Setting up conv5_3
I0529 13:42:43.510781 17660 net.cpp:157] Top shape: 1 512 14 14 (100352)
I0529 13:42:43.510785 17660 net.cpp:165] Memory required for data: 113999872
I0529 13:42:43.510795 17660 layer_factory.hpp:77] Creating layer relu5_3
I0529 13:42:43.510816 17660 net.cpp:106] Creating Layer relu5_3
I0529 13:42:43.510831 17660 net.cpp:454] relu5_3 <- conv5_3
I0529 13:42:43.510839 17660 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0529 13:42:43.510848 17660 net.cpp:150] Setting up relu5_3
I0529 13:42:43.510854 17660 net.cpp:157] Top shape: 1 512 14 14 (100352)
I0529 13:42:43.510859 17660 net.cpp:165] Memory required for data: 114401280
I0529 13:42:43.510862 17660 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0529 13:42:43.510880 17660 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0529 13:42:43.510885 17660 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0529 13:42:43.510892 17660 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0529 13:42:43.510901 17660 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0529 13:42:43.510948 17660 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0529 13:42:43.510957 17660 net.cpp:157] Top shape: 1 512 14 14 (100352)
I0529 13:42:43.510963 17660 net.cpp:157] Top shape: 1 512 14 14 (100352)
I0529 13:42:43.510967 17660 net.cpp:165] Memory required for data: 115204096
I0529 13:42:43.510972 17660 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0529 13:42:43.510993 17660 net.cpp:106] Creating Layer rpn_conv/3x3
I0529 13:42:43.511000 17660 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0529 13:42:43.511010 17660 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0529 13:42:43.602407 17660 net.cpp:150] Setting up rpn_conv/3x3
I0529 13:42:43.602459 17660 net.cpp:157] Top shape: 1 512 14 14 (100352)
I0529 13:42:43.602464 17660 net.cpp:165] Memory required for data: 115605504
I0529 13:42:43.602475 17660 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0529 13:42:43.602494 17660 net.cpp:106] Creating Layer rpn_relu/3x3
I0529 13:42:43.602499 17660 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0529 13:42:43.602506 17660 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0529 13:42:43.602532 17660 net.cpp:150] Setting up rpn_relu/3x3
I0529 13:42:43.602536 17660 net.cpp:157] Top shape: 1 512 14 14 (100352)
I0529 13:42:43.602540 17660 net.cpp:165] Memory required for data: 116006912
I0529 13:42:43.602543 17660 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0529 13:42:43.602551 17660 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0529 13:42:43.602555 17660 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0529 13:42:43.602576 17660 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0529 13:42:43.602583 17660 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0529 13:42:43.602629 17660 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0529 13:42:43.602638 17660 net.cpp:157] Top shape: 1 512 14 14 (100352)
I0529 13:42:43.602643 17660 net.cpp:157] Top shape: 1 512 14 14 (100352)
I0529 13:42:43.602646 17660 net.cpp:165] Memory required for data: 116809728
I0529 13:42:43.602650 17660 layer_factory.hpp:77] Creating layer rpn_cls_score
I0529 13:42:43.602663 17660 net.cpp:106] Creating Layer rpn_cls_score
I0529 13:42:43.602668 17660 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0529 13:42:43.602674 17660 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0529 13:42:43.603302 17660 net.cpp:150] Setting up rpn_cls_score
I0529 13:42:43.603313 17660 net.cpp:157] Top shape: 1 18 14 14 (3528)
I0529 13:42:43.603319 17660 net.cpp:165] Memory required for data: 116823840
I0529 13:42:43.603327 17660 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0529 13:42:43.603338 17660 net.cpp:106] Creating Layer rpn_bbox_pred
I0529 13:42:43.603343 17660 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0529 13:42:43.603351 17660 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0529 13:42:43.604270 17660 net.cpp:150] Setting up rpn_bbox_pred
I0529 13:42:43.604279 17660 net.cpp:157] Top shape: 1 36 14 14 (7056)
I0529 13:42:43.604298 17660 net.cpp:165] Memory required for data: 116852064
I0529 13:42:43.604305 17660 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0529 13:42:43.604321 17660 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0529 13:42:43.604326 17660 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0529 13:42:43.604332 17660 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0529 13:42:43.604373 17660 net.cpp:150] Setting up rpn_cls_score_reshape
I0529 13:42:43.604382 17660 net.cpp:157] Top shape: 1 2 126 14 (3528)
I0529 13:42:43.604385 17660 net.cpp:165] Memory required for data: 116866176
I0529 13:42:43.604389 17660 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0529 13:42:43.604398 17660 net.cpp:106] Creating Layer rpn_cls_prob
I0529 13:42:43.604403 17660 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0529 13:42:43.604408 17660 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0529 13:42:43.604466 17660 net.cpp:150] Setting up rpn_cls_prob
I0529 13:42:43.604475 17660 net.cpp:157] Top shape: 1 2 126 14 (3528)
I0529 13:42:43.604478 17660 net.cpp:165] Memory required for data: 116880288
I0529 13:42:43.604482 17660 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0529 13:42:43.604490 17660 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0529 13:42:43.604493 17660 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0529 13:42:43.604501 17660 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0529 13:42:43.604523 17660 net.cpp:150] Setting up rpn_cls_prob_reshape
I0529 13:42:43.604531 17660 net.cpp:157] Top shape: 1 18 14 14 (3528)
I0529 13:42:43.604534 17660 net.cpp:165] Memory required for data: 116894400
I0529 13:42:43.604553 17660 layer_factory.hpp:77] Creating layer proposal
I0529 13:42:43.605123 17660 net.cpp:106] Creating Layer proposal
I0529 13:42:43.605137 17660 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0529 13:42:43.605159 17660 net.cpp:454] proposal <- rpn_bbox_pred
I0529 13:42:43.605165 17660 net.cpp:454] proposal <- im_info
I0529 13:42:43.605188 17660 net.cpp:411] proposal -> rois
I0529 13:42:43.606067 17660 net.cpp:150] Setting up proposal
I0529 13:42:43.606083 17660 net.cpp:157] Top shape: 1 5 (5)
I0529 13:42:43.606088 17660 net.cpp:165] Memory required for data: 116894420
I0529 13:42:43.606092 17660 layer_factory.hpp:77] Creating layer roi_pool5
I0529 13:42:43.606099 17660 net.cpp:106] Creating Layer roi_pool5
I0529 13:42:43.606114 17660 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_1
I0529 13:42:43.606120 17660 net.cpp:454] roi_pool5 <- rois
I0529 13:42:43.606127 17660 net.cpp:411] roi_pool5 -> pool5
I0529 13:42:43.606149 17660 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0529 13:42:43.606201 17660 net.cpp:150] Setting up roi_pool5
I0529 13:42:43.606209 17660 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0529 13:42:43.606214 17660 net.cpp:165] Memory required for data: 116994772
I0529 13:42:43.606217 17660 layer_factory.hpp:77] Creating layer fc6
I0529 13:42:43.606231 17660 net.cpp:106] Creating Layer fc6
I0529 13:42:43.606235 17660 net.cpp:454] fc6 <- pool5
I0529 13:42:43.606242 17660 net.cpp:411] fc6 -> fc6
I0529 13:42:43.990891 17660 net.cpp:150] Setting up fc6
I0529 13:42:43.990965 17660 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:43.990972 17660 net.cpp:165] Memory required for data: 117011156
I0529 13:42:43.991034 17660 layer_factory.hpp:77] Creating layer relu6
I0529 13:42:43.991075 17660 net.cpp:106] Creating Layer relu6
I0529 13:42:43.991092 17660 net.cpp:454] relu6 <- fc6
I0529 13:42:43.991102 17660 net.cpp:397] relu6 -> fc6 (in-place)
I0529 13:42:43.991113 17660 net.cpp:150] Setting up relu6
I0529 13:42:43.991119 17660 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:43.991122 17660 net.cpp:165] Memory required for data: 117027540
I0529 13:42:43.991127 17660 layer_factory.hpp:77] Creating layer drop6
I0529 13:42:43.991142 17660 net.cpp:106] Creating Layer drop6
I0529 13:42:43.991147 17660 net.cpp:454] drop6 <- fc6
I0529 13:42:43.991152 17660 net.cpp:397] drop6 -> fc6 (in-place)
I0529 13:42:43.991181 17660 net.cpp:150] Setting up drop6
I0529 13:42:43.991189 17660 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:43.991194 17660 net.cpp:165] Memory required for data: 117043924
I0529 13:42:43.991197 17660 layer_factory.hpp:77] Creating layer fc7
I0529 13:42:43.991209 17660 net.cpp:106] Creating Layer fc7
I0529 13:42:43.991212 17660 net.cpp:454] fc7 <- fc6
I0529 13:42:43.991221 17660 net.cpp:411] fc7 -> fc7
I0529 13:42:44.054283 17660 net.cpp:150] Setting up fc7
I0529 13:42:44.054329 17660 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:44.054334 17660 net.cpp:165] Memory required for data: 117060308
I0529 13:42:44.054363 17660 layer_factory.hpp:77] Creating layer relu7
I0529 13:42:44.054378 17660 net.cpp:106] Creating Layer relu7
I0529 13:42:44.054386 17660 net.cpp:454] relu7 <- fc7
I0529 13:42:44.054409 17660 net.cpp:397] relu7 -> fc7 (in-place)
I0529 13:42:44.054422 17660 net.cpp:150] Setting up relu7
I0529 13:42:44.054427 17660 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:44.054430 17660 net.cpp:165] Memory required for data: 117076692
I0529 13:42:44.054433 17660 layer_factory.hpp:77] Creating layer drop7
I0529 13:42:44.054445 17660 net.cpp:106] Creating Layer drop7
I0529 13:42:44.054448 17660 net.cpp:454] drop7 <- fc7
I0529 13:42:44.054455 17660 net.cpp:397] drop7 -> fc7 (in-place)
I0529 13:42:44.054479 17660 net.cpp:150] Setting up drop7
I0529 13:42:44.054486 17660 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:44.054489 17660 net.cpp:165] Memory required for data: 117093076
I0529 13:42:44.054493 17660 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0529 13:42:44.054503 17660 net.cpp:106] Creating Layer fc7_drop7_0_split
I0529 13:42:44.054507 17660 net.cpp:454] fc7_drop7_0_split <- fc7
I0529 13:42:44.054513 17660 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0529 13:42:44.054519 17660 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0529 13:42:44.054563 17660 net.cpp:150] Setting up fc7_drop7_0_split
I0529 13:42:44.054569 17660 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:44.054574 17660 net.cpp:157] Top shape: 1 4096 (4096)
I0529 13:42:44.054577 17660 net.cpp:165] Memory required for data: 117125844
I0529 13:42:44.054581 17660 layer_factory.hpp:77] Creating layer cls_score
I0529 13:42:44.054591 17660 net.cpp:106] Creating Layer cls_score
I0529 13:42:44.054595 17660 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0529 13:42:44.054601 17660 net.cpp:411] cls_score -> cls_score
I0529 13:42:44.058785 17660 net.cpp:150] Setting up cls_score
I0529 13:42:44.058802 17660 net.cpp:157] Top shape: 1 21 (21)
I0529 13:42:44.058807 17660 net.cpp:165] Memory required for data: 117125928
I0529 13:42:44.058815 17660 layer_factory.hpp:77] Creating layer bbox_pred
I0529 13:42:44.058852 17660 net.cpp:106] Creating Layer bbox_pred
I0529 13:42:44.058857 17660 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0529 13:42:44.058863 17660 net.cpp:411] bbox_pred -> bbox_pred
I0529 13:42:44.069173 17660 net.cpp:150] Setting up bbox_pred
I0529 13:42:44.069198 17660 net.cpp:157] Top shape: 1 84 (84)
I0529 13:42:44.069202 17660 net.cpp:165] Memory required for data: 117126264
I0529 13:42:44.069214 17660 layer_factory.hpp:77] Creating layer cls_prob
I0529 13:42:44.069242 17660 net.cpp:106] Creating Layer cls_prob
I0529 13:42:44.069248 17660 net.cpp:454] cls_prob <- cls_score
I0529 13:42:44.069254 17660 net.cpp:411] cls_prob -> cls_prob
I0529 13:42:44.069324 17660 net.cpp:150] Setting up cls_prob
I0529 13:42:44.069332 17660 net.cpp:157] Top shape: 1 21 (21)
I0529 13:42:44.069336 17660 net.cpp:165] Memory required for data: 117126348
I0529 13:42:44.069339 17660 net.cpp:228] cls_prob does not need backward computation.
I0529 13:42:44.069344 17660 net.cpp:228] bbox_pred does not need backward computation.
I0529 13:42:44.069347 17660 net.cpp:228] cls_score does not need backward computation.
I0529 13:42:44.069352 17660 net.cpp:228] fc7_drop7_0_split does not need backward computation.
I0529 13:42:44.069356 17660 net.cpp:228] drop7 does not need backward computation.
I0529 13:42:44.069360 17660 net.cpp:228] relu7 does not need backward computation.
I0529 13:42:44.069365 17660 net.cpp:228] fc7 does not need backward computation.
I0529 13:42:44.069368 17660 net.cpp:228] drop6 does not need backward computation.
I0529 13:42:44.069372 17660 net.cpp:228] relu6 does not need backward computation.
I0529 13:42:44.069376 17660 net.cpp:228] fc6 does not need backward computation.
I0529 13:42:44.069380 17660 net.cpp:228] roi_pool5 does not need backward computation.
I0529 13:42:44.069387 17660 net.cpp:228] proposal does not need backward computation.
I0529 13:42:44.069393 17660 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0529 13:42:44.069399 17660 net.cpp:228] rpn_cls_prob does not need backward computation.
I0529 13:42:44.069404 17660 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0529 13:42:44.069408 17660 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0529 13:42:44.069413 17660 net.cpp:228] rpn_cls_score does not need backward computation.
I0529 13:42:44.069419 17660 net.cpp:228] rpn/output_rpn_relu/3x3_0_split does not need backward computation.
I0529 13:42:44.069424 17660 net.cpp:228] rpn_relu/3x3 does not need backward computation.
I0529 13:42:44.069444 17660 net.cpp:228] rpn_conv/3x3 does not need backward computation.
I0529 13:42:44.069449 17660 net.cpp:228] conv5_3_relu5_3_0_split does not need backward computation.
I0529 13:42:44.069453 17660 net.cpp:228] relu5_3 does not need backward computation.
I0529 13:42:44.069458 17660 net.cpp:228] conv5_3 does not need backward computation.
I0529 13:42:44.069464 17660 net.cpp:228] relu5_2 does not need backward computation.
I0529 13:42:44.069468 17660 net.cpp:228] conv5_2 does not need backward computation.
I0529 13:42:44.069473 17660 net.cpp:228] relu5_1 does not need backward computation.
I0529 13:42:44.069479 17660 net.cpp:228] conv5_1 does not need backward computation.
I0529 13:42:44.069483 17660 net.cpp:228] pool4 does not need backward computation.
I0529 13:42:44.069488 17660 net.cpp:228] relu4_3 does not need backward computation.
I0529 13:42:44.069491 17660 net.cpp:228] conv4_3 does not need backward computation.
I0529 13:42:44.069497 17660 net.cpp:228] relu4_2 does not need backward computation.
I0529 13:42:44.069501 17660 net.cpp:228] conv4_2 does not need backward computation.
I0529 13:42:44.069506 17660 net.cpp:228] relu4_1 does not need backward computation.
I0529 13:42:44.069512 17660 net.cpp:228] conv4_1 does not need backward computation.
I0529 13:42:44.069516 17660 net.cpp:228] pool3 does not need backward computation.
I0529 13:42:44.069521 17660 net.cpp:228] relu3_3 does not need backward computation.
I0529 13:42:44.069525 17660 net.cpp:228] conv3_3 does not need backward computation.
I0529 13:42:44.069530 17660 net.cpp:228] relu3_2 does not need backward computation.
I0529 13:42:44.069535 17660 net.cpp:228] conv3_2 does not need backward computation.
I0529 13:42:44.069538 17660 net.cpp:228] relu3_1 does not need backward computation.
I0529 13:42:44.069543 17660 net.cpp:228] conv3_1 does not need backward computation.
I0529 13:42:44.069547 17660 net.cpp:228] pool2 does not need backward computation.
I0529 13:42:44.069550 17660 net.cpp:228] relu2_2 does not need backward computation.
I0529 13:42:44.069571 17660 net.cpp:228] conv2_2 does not need backward computation.
I0529 13:42:44.069576 17660 net.cpp:228] relu2_1 does not need backward computation.
I0529 13:42:44.069579 17660 net.cpp:228] conv2_1 does not need backward computation.
I0529 13:42:44.069583 17660 net.cpp:228] pool1 does not need backward computation.
I0529 13:42:44.069587 17660 net.cpp:228] relu1_2 does not need backward computation.
I0529 13:42:44.069591 17660 net.cpp:228] conv1_2 does not need backward computation.
I0529 13:42:44.069595 17660 net.cpp:228] relu1_1 does not need backward computation.
I0529 13:42:44.069600 17660 net.cpp:228] conv1_1 does not need backward computation.
I0529 13:42:44.069604 17660 net.cpp:270] This network produces output bbox_pred
I0529 13:42:44.069608 17660 net.cpp:270] This network produces output cls_prob
I0529 13:42:44.069644 17660 net.cpp:283] Network initialization done.
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:505] Reading dangerously large protocol message.  If the message turns out to be larger than 2147483647 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:78] The total number of bytes read was 548318983
I0529 13:42:45.397537 17660 net.cpp:816] Ignoring source layer input-data
I0529 13:42:45.397579 17660 net.cpp:816] Ignoring source layer data_input-data_0_split
I0529 13:42:45.397583 17660 net.cpp:816] Ignoring source layer im_info_input-data_1_split
I0529 13:42:45.397588 17660 net.cpp:816] Ignoring source layer gt_boxes_input-data_2_split
I0529 13:42:45.412432 17660 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0529 13:42:45.412489 17660 net.cpp:816] Ignoring source layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0529 13:42:45.412494 17660 net.cpp:816] Ignoring source layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0529 13:42:45.412497 17660 net.cpp:816] Ignoring source layer rpn-data
I0529 13:42:45.412501 17660 net.cpp:816] Ignoring source layer rpn_loss_cls
I0529 13:42:45.412504 17660 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0529 13:42:45.412510 17660 net.cpp:816] Ignoring source layer roi-data
I0529 13:42:45.509920 17660 net.cpp:816] Ignoring source layer loss_cls
I0529 13:42:45.509970 17660 net.cpp:816] Ignoring source layer loss_bbox
im_detect: 1/4088 0.277s 0.000s
im_detect: 2/4088 0.189s 0.000s
im_detect: 3/4088 0.158s 0.000s
im_detect: 4/4088 0.142s 0.000s
im_detect: 5/4088 0.133s 0.000s
im_detect: 6/4088 0.127s 0.000s
im_detect: 7/4088 0.123s 0.000s
im_detect: 8/4088 0.120s 0.000s
im_detect: 9/4088 0.120s 0.000s
im_detect: 10/4088 0.120s 0.000s
im_detect: 11/4088 0.118s 0.000s
im_detect: 12/4088 0.117s 0.000s
im_detect: 13/4088 0.116s 0.000s
im_detect: 14/4088 0.116s 0.000s
im_detect: 15/4088 0.115s 0.000s
im_detect: 16/4088 0.114s 0.000s
im_detect: 17/4088 0.114s 0.000s
im_detect: 18/4088 0.113s 0.000s
im_detect: 19/4088 0.113s 0.000s
im_detect: 20/4088 0.112s 0.000s
im_detect: 21/4088 0.112s 0.000s
im_detect: 22/4088 0.112s 0.000s
im_detect: 23/4088 0.111s 0.000s
im_detect: 24/4088 0.111s 0.000s
im_detect: 25/4088 0.110s 0.000s
im_detect: 26/4088 0.110s 0.000s
im_detect: 27/4088 0.109s 0.000s
im_detect: 28/4088 0.109s 0.000s
im_detect: 29/4088 0.108s 0.000s
im_detect: 30/4088 0.108s 0.000s
im_detect: 31/4088 0.108s 0.000s
im_detect: 32/4088 0.107s 0.000s
im_detect: 33/4088 0.107s 0.000s
im_detect: 34/4088 0.107s 0.000s
im_detect: 35/4088 0.106s 0.000s
im_detect: 36/4088 0.106s 0.000s
im_detect: 37/4088 0.106s 0.000s
im_detect: 38/4088 0.106s 0.000s
im_detect: 39/4088 0.105s 0.000s
im_detect: 40/4088 0.105s 0.000s
im_detect: 41/4088 0.105s 0.000s
im_detect: 42/4088 0.105s 0.000s
im_detect: 43/4088 0.105s 0.000s
im_detect: 44/4088 0.104s 0.000s
im_detect: 45/4088 0.104s 0.000s
im_detect: 46/4088 0.104s 0.000s
im_detect: 47/4088 0.104s 0.000s
im_detect: 48/4088 0.104s 0.000s
im_detect: 49/4088 0.104s 0.000s
im_detect: 50/4088 0.104s 0.000s
im_detect: 51/4088 0.104s 0.000s
im_detect: 52/4088 0.104s 0.000s
im_detect: 53/4088 0.104s 0.000s
im_detect: 54/4088 0.104s 0.000s
im_detect: 55/4088 0.104s 0.000s
im_detect: 56/4088 0.104s 0.000s
im_detect: 57/4088 0.104s 0.000s
im_detect: 58/4088 0.104s 0.000s
im_detect: 59/4088 0.104s 0.000s
im_detect: 60/4088 0.104s 0.000s
im_detect: 61/4088 0.104s 0.000s
im_detect: 62/4088 0.104s 0.000s
im_detect: 63/4088 0.104s 0.000s
im_detect: 64/4088 0.104s 0.000s
im_detect: 65/4088 0.104s 0.000s
im_detect: 66/4088 0.104s 0.000s
im_detect: 67/4088 0.104s 0.000s
im_detect: 68/4088 0.104s 0.000s
im_detect: 69/4088 0.103s 0.000s
im_detect: 70/4088 0.103s 0.000s
im_detect: 71/4088 0.103s 0.000s
im_detect: 72/4088 0.103s 0.000s
im_detect: 73/4088 0.103s 0.000s
im_detect: 74/4088 0.103s 0.000s
im_detect: 75/4088 0.103s 0.000s
im_detect: 76/4088 0.103s 0.000s
im_detect: 77/4088 0.103s 0.000s
im_detect: 78/4088 0.103s 0.000s
im_detect: 79/4088 0.103s 0.000s
im_detect: 80/4088 0.103s 0.000s
im_detect: 81/4088 0.102s 0.000s
im_detect: 82/4088 0.102s 0.000s
im_detect: 83/4088 0.102s 0.000s
im_detect: 84/4088 0.103s 0.000s
im_detect: 85/4088 0.103s 0.000s
im_detect: 86/4088 0.103s 0.000s
im_detect: 87/4088 0.103s 0.000s
im_detect: 88/4088 0.103s 0.000s
im_detect: 89/4088 0.103s 0.000s
im_detect: 90/4088 0.103s 0.000s
im_detect: 91/4088 0.103s 0.000s
im_detect: 92/4088 0.102s 0.000s
im_detect: 93/4088 0.102s 0.000s
im_detect: 94/4088 0.102s 0.000s
im_detect: 95/4088 0.102s 0.000s
im_detect: 96/4088 0.102s 0.000s
im_detect: 97/4088 0.102s 0.000s
im_detect: 98/4088 0.102s 0.000s
im_detect: 99/4088 0.102s 0.000s
im_detect: 100/4088 0.102s 0.000s
im_detect: 101/4088 0.102s 0.000s
im_detect: 102/4088 0.102s 0.000s
im_detect: 103/4088 0.102s 0.000s
im_detect: 104/4088 0.102s 0.000s
im_detect: 105/4088 0.102s 0.000s
im_detect: 106/4088 0.102s 0.000s
im_detect: 107/4088 0.102s 0.000s
im_detect: 108/4088 0.102s 0.000s
im_detect: 109/4088 0.102s 0.000s
im_detect: 110/4088 0.102s 0.000s
im_detect: 111/4088 0.102s 0.000s
im_detect: 112/4088 0.102s 0.000s
im_detect: 113/4088 0.102s 0.000s
im_detect: 114/4088 0.102s 0.000s
im_detect: 115/4088 0.102s 0.000s
im_detect: 116/4088 0.102s 0.000s
im_detect: 117/4088 0.102s 0.000s
im_detect: 118/4088 0.102s 0.000s
im_detect: 119/4088 0.102s 0.000s
im_detect: 120/4088 0.102s 0.000s
im_detect: 121/4088 0.102s 0.000s
im_detect: 122/4088 0.103s 0.000s
im_detect: 123/4088 0.103s 0.000s
im_detect: 124/4088 0.103s 0.000s
im_detect: 125/4088 0.102s 0.000s
im_detect: 126/4088 0.102s 0.000s
im_detect: 127/4088 0.102s 0.000s
im_detect: 128/4088 0.102s 0.000s
im_detect: 129/4088 0.102s 0.000s
im_detect: 130/4088 0.102s 0.000s
im_detect: 131/4088 0.102s 0.000s
im_detect: 132/4088 0.102s 0.000s
im_detect: 133/4088 0.102s 0.000s
im_detect: 134/4088 0.102s 0.000s
im_detect: 135/4088 0.102s 0.000s
im_detect: 136/4088 0.102s 0.000s
im_detect: 137/4088 0.102s 0.000s
im_detect: 138/4088 0.102s 0.000s
im_detect: 139/4088 0.102s 0.000s
im_detect: 140/4088 0.102s 0.000s
im_detect: 141/4088 0.102s 0.000s
im_detect: 142/4088 0.102s 0.000s
im_detect: 143/4088 0.102s 0.000s
im_detect: 144/4088 0.102s 0.000s
im_detect: 145/4088 0.102s 0.000s
im_detect: 146/4088 0.102s 0.000s
im_detect: 147/4088 0.102s 0.000s
im_detect: 148/4088 0.102s 0.000s
im_detect: 149/4088 0.102s 0.000s
im_detect: 150/4088 0.102s 0.000s
im_detect: 151/4088 0.102s 0.000s
im_detect: 152/4088 0.101s 0.000s
im_detect: 153/4088 0.101s 0.000s
im_detect: 154/4088 0.101s 0.000s
im_detect: 155/4088 0.101s 0.000s
im_detect: 156/4088 0.101s 0.000s
im_detect: 157/4088 0.101s 0.000s
im_detect: 158/4088 0.101s 0.000s
im_detect: 159/4088 0.101s 0.000s
im_detect: 160/4088 0.101s 0.000s
im_detect: 161/4088 0.101s 0.000s
im_detect: 162/4088 0.102s 0.000s
im_detect: 163/4088 0.102s 0.000s
im_detect: 164/4088 0.101s 0.000s
im_detect: 165/4088 0.101s 0.000s
im_detect: 166/4088 0.101s 0.000s
im_detect: 167/4088 0.101s 0.000s
im_detect: 168/4088 0.101s 0.000s
im_detect: 169/4088 0.101s 0.000s
im_detect: 170/4088 0.101s 0.000s
im_detect: 171/4088 0.101s 0.000s
im_detect: 172/4088 0.101s 0.000s
im_detect: 173/4088 0.101s 0.000s
im_detect: 174/4088 0.101s 0.000s
im_detect: 175/4088 0.101s 0.000s
im_detect: 176/4088 0.101s 0.000s
im_detect: 177/4088 0.101s 0.000s
im_detect: 178/4088 0.102s 0.000s
im_detect: 179/4088 0.102s 0.000s
im_detect: 180/4088 0.102s 0.000s
im_detect: 181/4088 0.102s 0.000s
im_detect: 182/4088 0.102s 0.000s
im_detect: 183/4088 0.102s 0.000s
im_detect: 184/4088 0.102s 0.000s
im_detect: 185/4088 0.102s 0.000s
im_detect: 186/4088 0.102s 0.000s
im_detect: 187/4088 0.102s 0.000s
im_detect: 188/4088 0.102s 0.000s
im_detect: 189/4088 0.102s 0.000s
im_detect: 190/4088 0.102s 0.000s
im_detect: 191/4088 0.102s 0.000s
im_detect: 192/4088 0.102s 0.000s
im_detect: 193/4088 0.102s 0.000s
im_detect: 194/4088 0.101s 0.000s
im_detect: 195/4088 0.101s 0.000s
im_detect: 196/4088 0.101s 0.000s
im_detect: 197/4088 0.101s 0.000s
im_detect: 198/4088 0.101s 0.000s
im_detect: 199/4088 0.101s 0.000s
im_detect: 200/4088 0.101s 0.000s
im_detect: 201/4088 0.101s 0.000s
im_detect: 202/4088 0.101s 0.000s
im_detect: 203/4088 0.101s 0.000s
im_detect: 204/4088 0.101s 0.000s
im_detect: 205/4088 0.101s 0.000s
im_detect: 206/4088 0.102s 0.000s
im_detect: 207/4088 0.102s 0.000s
im_detect: 208/4088 0.102s 0.000s
im_detect: 209/4088 0.102s 0.000s
im_detect: 210/4088 0.102s 0.000s
im_detect: 211/4088 0.102s 0.000s
im_detect: 212/4088 0.102s 0.000s
im_detect: 213/4088 0.102s 0.000s
im_detect: 214/4088 0.102s 0.000s
im_detect: 215/4088 0.102s 0.000s
im_detect: 216/4088 0.101s 0.000s
im_detect: 217/4088 0.101s 0.000s
im_detect: 218/4088 0.101s 0.000s
im_detect: 219/4088 0.102s 0.000s
im_detect: 220/4088 0.102s 0.000s
im_detect: 221/4088 0.102s 0.000s
im_detect: 222/4088 0.102s 0.000s
im_detect: 223/4088 0.102s 0.000s
im_detect: 224/4088 0.102s 0.000s
im_detect: 225/4088 0.102s 0.000s
im_detect: 226/4088 0.102s 0.000s
im_detect: 227/4088 0.102s 0.000s
im_detect: 228/4088 0.102s 0.000s
im_detect: 229/4088 0.102s 0.000s
im_detect: 230/4088 0.102s 0.000s
im_detect: 231/4088 0.102s 0.000s
im_detect: 232/4088 0.102s 0.000s
im_detect: 233/4088 0.102s 0.000s
im_detect: 234/4088 0.102s 0.000s
im_detect: 235/4088 0.102s 0.000s
im_detect: 236/4088 0.102s 0.000s
im_detect: 237/4088 0.102s 0.000s
im_detect: 238/4088 0.102s 0.000s
im_detect: 239/4088 0.102s 0.000s
im_detect: 240/4088 0.102s 0.000s
im_detect: 241/4088 0.102s 0.000s
im_detect: 242/4088 0.102s 0.000s
im_detect: 243/4088 0.102s 0.000s
im_detect: 244/4088 0.102s 0.000s
im_detect: 245/4088 0.102s 0.000s
im_detect: 246/4088 0.102s 0.000s
im_detect: 247/4088 0.102s 0.000s
im_detect: 248/4088 0.102s 0.000s
im_detect: 249/4088 0.102s 0.000s
im_detect: 250/4088 0.102s 0.000s
im_detect: 251/4088 0.102s 0.000s
im_detect: 252/4088 0.102s 0.000s
im_detect: 253/4088 0.102s 0.000s
im_detect: 254/4088 0.102s 0.000s
im_detect: 255/4088 0.102s 0.000s
im_detect: 256/4088 0.102s 0.000s
im_detect: 257/4088 0.102s 0.000s
im_detect: 258/4088 0.102s 0.000s
im_detect: 259/4088 0.102s 0.000s
im_detect: 260/4088 0.102s 0.000s
im_detect: 261/4088 0.102s 0.000s
im_detect: 262/4088 0.102s 0.000s
im_detect: 263/4088 0.102s 0.000s
im_detect: 264/4088 0.102s 0.000s
im_detect: 265/4088 0.102s 0.000s
im_detect: 266/4088 0.102s 0.000s
im_detect: 267/4088 0.102s 0.000s
im_detect: 268/4088 0.102s 0.000s
im_detect: 269/4088 0.102s 0.000s
im_detect: 270/4088 0.102s 0.000s
im_detect: 271/4088 0.102s 0.000s
im_detect: 272/4088 0.102s 0.000s
im_detect: 273/4088 0.102s 0.000s
im_detect: 274/4088 0.102s 0.000s
im_detect: 275/4088 0.102s 0.000s
im_detect: 276/4088 0.102s 0.000s
im_detect: 277/4088 0.102s 0.000s
im_detect: 278/4088 0.102s 0.000s
im_detect: 279/4088 0.102s 0.000s
im_detect: 280/4088 0.102s 0.000s
im_detect: 281/4088 0.102s 0.000s
im_detect: 282/4088 0.102s 0.000s
im_detect: 283/4088 0.102s 0.000s
im_detect: 284/4088 0.102s 0.000s
im_detect: 285/4088 0.102s 0.000s
im_detect: 286/4088 0.102s 0.000s
im_detect: 287/4088 0.102s 0.000s
im_detect: 288/4088 0.102s 0.000s
im_detect: 289/4088 0.102s 0.000s
im_detect: 290/4088 0.102s 0.000s
im_detect: 291/4088 0.102s 0.000s
im_detect: 292/4088 0.102s 0.000s
im_detect: 293/4088 0.102s 0.000s
im_detect: 294/4088 0.102s 0.000s
im_detect: 295/4088 0.101s 0.000s
im_detect: 296/4088 0.101s 0.000s
im_detect: 297/4088 0.101s 0.000s
im_detect: 298/4088 0.101s 0.000s
im_detect: 299/4088 0.101s 0.000s
im_detect: 300/4088 0.101s 0.000s
im_detect: 301/4088 0.102s 0.000s
im_detect: 302/4088 0.102s 0.000s
im_detect: 303/4088 0.102s 0.000s
im_detect: 304/4088 0.102s 0.000s
im_detect: 305/4088 0.102s 0.000s
im_detect: 306/4088 0.102s 0.000s
im_detect: 307/4088 0.102s 0.000s
im_detect: 308/4088 0.102s 0.000s
im_detect: 309/4088 0.102s 0.000s
im_detect: 310/4088 0.102s 0.000s
im_detect: 311/4088 0.102s 0.000s
im_detect: 312/4088 0.102s 0.000s
im_detect: 313/4088 0.102s 0.000s
im_detect: 314/4088 0.102s 0.000s
im_detect: 315/4088 0.102s 0.000s
im_detect: 316/4088 0.102s 0.000s
im_detect: 317/4088 0.102s 0.000s
im_detect: 318/4088 0.102s 0.000s
im_detect: 319/4088 0.102s 0.000s
im_detect: 320/4088 0.102s 0.000s
im_detect: 321/4088 0.102s 0.000s
im_detect: 322/4088 0.101s 0.000s
im_detect: 323/4088 0.101s 0.000s
im_detect: 324/4088 0.101s 0.000s
im_detect: 325/4088 0.101s 0.000s
im_detect: 326/4088 0.101s 0.000s
im_detect: 327/4088 0.101s 0.000s
im_detect: 328/4088 0.101s 0.000s
im_detect: 329/4088 0.101s 0.000s
im_detect: 330/4088 0.101s 0.000s
im_detect: 331/4088 0.101s 0.000s
im_detect: 332/4088 0.101s 0.000s
im_detect: 333/4088 0.101s 0.000s
im_detect: 334/4088 0.101s 0.000s
im_detect: 335/4088 0.101s 0.000s
im_detect: 336/4088 0.101s 0.000s
im_detect: 337/4088 0.101s 0.000s
im_detect: 338/4088 0.101s 0.000s
im_detect: 339/4088 0.101s 0.000s
im_detect: 340/4088 0.101s 0.000s
im_detect: 341/4088 0.101s 0.000s
im_detect: 342/4088 0.101s 0.000s
im_detect: 343/4088 0.101s 0.000s
im_detect: 344/4088 0.101s 0.000s
im_detect: 345/4088 0.101s 0.000s
im_detect: 346/4088 0.101s 0.000s
im_detect: 347/4088 0.101s 0.000s
im_detect: 348/4088 0.101s 0.000s
im_detect: 349/4088 0.101s 0.000s
im_detect: 350/4088 0.101s 0.000s
im_detect: 351/4088 0.101s 0.000s
im_detect: 352/4088 0.101s 0.000s
im_detect: 353/4088 0.101s 0.000s
im_detect: 354/4088 0.101s 0.000s
im_detect: 355/4088 0.101s 0.000s
im_detect: 356/4088 0.101s 0.000s
im_detect: 357/4088 0.101s 0.000s
im_detect: 358/4088 0.101s 0.000s
im_detect: 359/4088 0.101s 0.000s
im_detect: 360/4088 0.101s 0.000s
im_detect: 361/4088 0.101s 0.000s
im_detect: 362/4088 0.101s 0.000s
im_detect: 363/4088 0.101s 0.000s
im_detect: 364/4088 0.101s 0.000s
im_detect: 365/4088 0.101s 0.000s
im_detect: 366/4088 0.101s 0.000s
im_detect: 367/4088 0.101s 0.000s
im_detect: 368/4088 0.101s 0.000s
im_detect: 369/4088 0.101s 0.000s
im_detect: 370/4088 0.101s 0.000s
im_detect: 371/4088 0.101s 0.000s
im_detect: 372/4088 0.101s 0.000s
im_detect: 373/4088 0.101s 0.000s
im_detect: 374/4088 0.101s 0.000s
im_detect: 375/4088 0.101s 0.000s
im_detect: 376/4088 0.101s 0.000s
im_detect: 377/4088 0.101s 0.000s
im_detect: 378/4088 0.101s 0.000s
im_detect: 379/4088 0.101s 0.000s
im_detect: 380/4088 0.101s 0.000s
im_detect: 381/4088 0.101s 0.000s
im_detect: 382/4088 0.101s 0.000s
im_detect: 383/4088 0.101s 0.000s
im_detect: 384/4088 0.101s 0.000s
im_detect: 385/4088 0.101s 0.000s
im_detect: 386/4088 0.101s 0.000s
im_detect: 387/4088 0.101s 0.000s
im_detect: 388/4088 0.101s 0.000s
im_detect: 389/4088 0.101s 0.000s
im_detect: 390/4088 0.101s 0.000s
im_detect: 391/4088 0.101s 0.000s
im_detect: 392/4088 0.101s 0.000s
im_detect: 393/4088 0.101s 0.000s
im_detect: 394/4088 0.101s 0.000s
im_detect: 395/4088 0.101s 0.000s
im_detect: 396/4088 0.101s 0.000s
im_detect: 397/4088 0.101s 0.000s
im_detect: 398/4088 0.101s 0.000s
im_detect: 399/4088 0.101s 0.000s
im_detect: 400/4088 0.101s 0.000s
im_detect: 401/4088 0.101s 0.000s
im_detect: 402/4088 0.101s 0.000s
im_detect: 403/4088 0.101s 0.000s
im_detect: 404/4088 0.101s 0.000s
im_detect: 405/4088 0.101s 0.000s
im_detect: 406/4088 0.101s 0.000s
im_detect: 407/4088 0.101s 0.000s
im_detect: 408/4088 0.101s 0.000s
im_detect: 409/4088 0.101s 0.000s
im_detect: 410/4088 0.101s 0.000s
im_detect: 411/4088 0.101s 0.000s
im_detect: 412/4088 0.101s 0.000s
im_detect: 413/4088 0.101s 0.000s
im_detect: 414/4088 0.101s 0.000s
im_detect: 415/4088 0.101s 0.000s
im_detect: 416/4088 0.101s 0.000s
im_detect: 417/4088 0.101s 0.000s
im_detect: 418/4088 0.101s 0.000s
im_detect: 419/4088 0.101s 0.000s
im_detect: 420/4088 0.101s 0.000s
im_detect: 421/4088 0.101s 0.000s
im_detect: 422/4088 0.101s 0.000s
im_detect: 423/4088 0.101s 0.000s
im_detect: 424/4088 0.101s 0.000s
im_detect: 425/4088 0.101s 0.000s
im_detect: 426/4088 0.101s 0.000s
im_detect: 427/4088 0.101s 0.000s
im_detect: 428/4088 0.101s 0.000s
im_detect: 429/4088 0.101s 0.000s
im_detect: 430/4088 0.101s 0.000s
im_detect: 431/4088 0.101s 0.000s
im_detect: 432/4088 0.101s 0.000s
im_detect: 433/4088 0.101s 0.000s
im_detect: 434/4088 0.101s 0.000s
im_detect: 435/4088 0.101s 0.000s
im_detect: 436/4088 0.101s 0.000s
im_detect: 437/4088 0.101s 0.000s
im_detect: 438/4088 0.101s 0.000s
im_detect: 439/4088 0.101s 0.000s
im_detect: 440/4088 0.101s 0.000s
im_detect: 441/4088 0.101s 0.000s
im_detect: 442/4088 0.101s 0.000s
im_detect: 443/4088 0.101s 0.000s
im_detect: 444/4088 0.101s 0.000s
im_detect: 445/4088 0.101s 0.000s
im_detect: 446/4088 0.101s 0.000s
im_detect: 447/4088 0.101s 0.000s
im_detect: 448/4088 0.101s 0.000s
im_detect: 449/4088 0.101s 0.000s
im_detect: 450/4088 0.101s 0.000s
im_detect: 451/4088 0.101s 0.000s
im_detect: 452/4088 0.101s 0.000s
im_detect: 453/4088 0.101s 0.000s
im_detect: 454/4088 0.101s 0.000s
im_detect: 455/4088 0.101s 0.000s
im_detect: 456/4088 0.101s 0.000s
im_detect: 457/4088 0.101s 0.000s
im_detect: 458/4088 0.101s 0.000s
im_detect: 459/4088 0.101s 0.000s
im_detect: 460/4088 0.101s 0.000s
im_detect: 461/4088 0.101s 0.000s
im_detect: 462/4088 0.101s 0.000s
im_detect: 463/4088 0.101s 0.000s
im_detect: 464/4088 0.101s 0.000s
im_detect: 465/4088 0.101s 0.000s
im_detect: 466/4088 0.101s 0.000s
im_detect: 467/4088 0.101s 0.000s
im_detect: 468/4088 0.101s 0.000s
im_detect: 469/4088 0.101s 0.000s
im_detect: 470/4088 0.101s 0.000s
im_detect: 471/4088 0.101s 0.000s
im_detect: 472/4088 0.101s 0.000s
im_detect: 473/4088 0.101s 0.000s
im_detect: 474/4088 0.101s 0.000s
im_detect: 475/4088 0.101s 0.000s
im_detect: 476/4088 0.101s 0.000s
im_detect: 477/4088 0.101s 0.000s
im_detect: 478/4088 0.101s 0.000s
im_detect: 479/4088 0.100s 0.000s
im_detect: 480/4088 0.100s 0.000s
im_detect: 481/4088 0.100s 0.000s
im_detect: 482/4088 0.100s 0.000s
im_detect: 483/4088 0.100s 0.000s
im_detect: 484/4088 0.100s 0.000s
im_detect: 485/4088 0.100s 0.000s
im_detect: 486/4088 0.100s 0.000s
im_detect: 487/4088 0.100s 0.000s
im_detect: 488/4088 0.100s 0.000s
im_detect: 489/4088 0.100s 0.000s
im_detect: 490/4088 0.100s 0.000s
im_detect: 491/4088 0.100s 0.000s
im_detect: 492/4088 0.100s 0.000s
im_detect: 493/4088 0.100s 0.000s
im_detect: 494/4088 0.100s 0.000s
im_detect: 495/4088 0.100s 0.000s
im_detect: 496/4088 0.100s 0.000s
im_detect: 497/4088 0.100s 0.000s
im_detect: 498/4088 0.100s 0.000s
im_detect: 499/4088 0.100s 0.000s
im_detect: 500/4088 0.100s 0.000s
im_detect: 501/4088 0.100s 0.000s
im_detect: 502/4088 0.100s 0.000s
im_detect: 503/4088 0.100s 0.000s
im_detect: 504/4088 0.100s 0.000s
im_detect: 505/4088 0.100s 0.000s
im_detect: 506/4088 0.100s 0.000s
im_detect: 507/4088 0.100s 0.000s
im_detect: 508/4088 0.100s 0.000s
im_detect: 509/4088 0.100s 0.000s
im_detect: 510/4088 0.100s 0.000s
im_detect: 511/4088 0.100s 0.000s
im_detect: 512/4088 0.100s 0.000s
im_detect: 513/4088 0.100s 0.000s
im_detect: 514/4088 0.100s 0.000s
im_detect: 515/4088 0.100s 0.000s
im_detect: 516/4088 0.100s 0.000s
im_detect: 517/4088 0.100s 0.000s
im_detect: 518/4088 0.100s 0.000s
im_detect: 519/4088 0.100s 0.000s
im_detect: 520/4088 0.100s 0.000s
im_detect: 521/4088 0.100s 0.000s
im_detect: 522/4088 0.100s 0.000s
im_detect: 523/4088 0.100s 0.000s
im_detect: 524/4088 0.100s 0.000s
im_detect: 525/4088 0.100s 0.000s
im_detect: 526/4088 0.100s 0.000s
im_detect: 527/4088 0.100s 0.000s
im_detect: 528/4088 0.100s 0.000s
im_detect: 529/4088 0.100s 0.000s
im_detect: 530/4088 0.100s 0.000s
im_detect: 531/4088 0.100s 0.000s
im_detect: 532/4088 0.100s 0.000s
im_detect: 533/4088 0.100s 0.000s
im_detect: 534/4088 0.100s 0.000s
im_detect: 535/4088 0.100s 0.000s
im_detect: 536/4088 0.100s 0.000s
im_detect: 537/4088 0.100s 0.000s
im_detect: 538/4088 0.100s 0.000s
im_detect: 539/4088 0.100s 0.000s
im_detect: 540/4088 0.100s 0.000s
im_detect: 541/4088 0.100s 0.000s
im_detect: 542/4088 0.100s 0.000s
im_detect: 543/4088 0.100s 0.000s
im_detect: 544/4088 0.100s 0.000s
im_detect: 545/4088 0.100s 0.000s
im_detect: 546/4088 0.100s 0.000s
im_detect: 547/4088 0.100s 0.000s
im_detect: 548/4088 0.100s 0.000s
im_detect: 549/4088 0.100s 0.000s
im_detect: 550/4088 0.100s 0.000s
im_detect: 551/4088 0.100s 0.000s
im_detect: 552/4088 0.100s 0.000s
im_detect: 553/4088 0.100s 0.000s
im_detect: 554/4088 0.100s 0.000s
im_detect: 555/4088 0.100s 0.000s
im_detect: 556/4088 0.100s 0.000s
im_detect: 557/4088 0.101s 0.000s
im_detect: 558/4088 0.101s 0.000s
im_detect: 559/4088 0.101s 0.000s
im_detect: 560/4088 0.100s 0.000s
im_detect: 561/4088 0.100s 0.000s
im_detect: 562/4088 0.100s 0.000s
im_detect: 563/4088 0.100s 0.000s
im_detect: 564/4088 0.100s 0.000s
im_detect: 565/4088 0.100s 0.000s
im_detect: 566/4088 0.100s 0.000s
im_detect: 567/4088 0.100s 0.000s
im_detect: 568/4088 0.100s 0.000s
im_detect: 569/4088 0.100s 0.000s
im_detect: 570/4088 0.100s 0.000s
im_detect: 571/4088 0.100s 0.000s
im_detect: 572/4088 0.101s 0.000s
im_detect: 573/4088 0.101s 0.000s
im_detect: 574/4088 0.101s 0.000s
im_detect: 575/4088 0.101s 0.000s
im_detect: 576/4088 0.101s 0.000s
im_detect: 577/4088 0.101s 0.000s
im_detect: 578/4088 0.101s 0.000s
im_detect: 579/4088 0.101s 0.000s
im_detect: 580/4088 0.101s 0.000s
im_detect: 581/4088 0.101s 0.000s
im_detect: 582/4088 0.101s 0.000s
im_detect: 583/4088 0.101s 0.000s
im_detect: 584/4088 0.101s 0.000s
im_detect: 585/4088 0.101s 0.000s
im_detect: 586/4088 0.101s 0.000s
im_detect: 587/4088 0.101s 0.000s
im_detect: 588/4088 0.101s 0.000s
im_detect: 589/4088 0.101s 0.000s
im_detect: 590/4088 0.101s 0.000s
im_detect: 591/4088 0.101s 0.000s
im_detect: 592/4088 0.101s 0.000s
im_detect: 593/4088 0.101s 0.000s
im_detect: 594/4088 0.101s 0.000s
im_detect: 595/4088 0.101s 0.000s
im_detect: 596/4088 0.101s 0.000s
im_detect: 597/4088 0.101s 0.000s
im_detect: 598/4088 0.101s 0.000s
im_detect: 599/4088 0.101s 0.000s
im_detect: 600/4088 0.101s 0.000s
im_detect: 601/4088 0.101s 0.000s
im_detect: 602/4088 0.101s 0.000s
im_detect: 603/4088 0.101s 0.000s
im_detect: 604/4088 0.101s 0.000s
im_detect: 605/4088 0.101s 0.000s
im_detect: 606/4088 0.101s 0.000s
im_detect: 607/4088 0.101s 0.000s
im_detect: 608/4088 0.101s 0.000s
im_detect: 609/4088 0.101s 0.000s
im_detect: 610/4088 0.101s 0.000s
im_detect: 611/4088 0.101s 0.000s
im_detect: 612/4088 0.101s 0.000s
im_detect: 613/4088 0.101s 0.000s
im_detect: 614/4088 0.101s 0.000s
im_detect: 615/4088 0.101s 0.000s
im_detect: 616/4088 0.100s 0.000s
im_detect: 617/4088 0.101s 0.000s
im_detect: 618/4088 0.101s 0.000s
im_detect: 619/4088 0.101s 0.000s
im_detect: 620/4088 0.101s 0.000s
im_detect: 621/4088 0.101s 0.000s
im_detect: 622/4088 0.101s 0.000s
im_detect: 623/4088 0.101s 0.000s
im_detect: 624/4088 0.100s 0.000s
im_detect: 625/4088 0.100s 0.000s
im_detect: 626/4088 0.100s 0.000s
im_detect: 627/4088 0.100s 0.000s
im_detect: 628/4088 0.100s 0.000s
im_detect: 629/4088 0.100s 0.000s
im_detect: 630/4088 0.100s 0.000s
im_detect: 631/4088 0.100s 0.000s
im_detect: 632/4088 0.100s 0.000s
im_detect: 633/4088 0.100s 0.000s
im_detect: 634/4088 0.100s 0.000s
im_detect: 635/4088 0.100s 0.000s
im_detect: 636/4088 0.100s 0.000s
im_detect: 637/4088 0.100s 0.000s
im_detect: 638/4088 0.100s 0.000s
im_detect: 639/4088 0.100s 0.000s
im_detect: 640/4088 0.100s 0.000s
im_detect: 641/4088 0.101s 0.000s
im_detect: 642/4088 0.101s 0.000s
im_detect: 643/4088 0.101s 0.000s
im_detect: 644/4088 0.101s 0.000s
im_detect: 645/4088 0.101s 0.000s
im_detect: 646/4088 0.101s 0.000s
im_detect: 647/4088 0.101s 0.000s
im_detect: 648/4088 0.101s 0.000s
im_detect: 649/4088 0.101s 0.000s
im_detect: 650/4088 0.101s 0.000s
im_detect: 651/4088 0.101s 0.000s
im_detect: 652/4088 0.101s 0.000s
im_detect: 653/4088 0.101s 0.000s
im_detect: 654/4088 0.101s 0.000s
im_detect: 655/4088 0.101s 0.000s
im_detect: 656/4088 0.101s 0.000s
im_detect: 657/4088 0.101s 0.000s
im_detect: 658/4088 0.101s 0.000s
im_detect: 659/4088 0.101s 0.000s
im_detect: 660/4088 0.101s 0.000s
im_detect: 661/4088 0.101s 0.000s
im_detect: 662/4088 0.101s 0.000s
im_detect: 663/4088 0.101s 0.000s
im_detect: 664/4088 0.101s 0.000s
im_detect: 665/4088 0.101s 0.000s
im_detect: 666/4088 0.101s 0.000s
im_detect: 667/4088 0.101s 0.000s
im_detect: 668/4088 0.101s 0.000s
im_detect: 669/4088 0.101s 0.000s
im_detect: 670/4088 0.101s 0.000s
im_detect: 671/4088 0.101s 0.000s
im_detect: 672/4088 0.101s 0.000s
im_detect: 673/4088 0.101s 0.000s
im_detect: 674/4088 0.101s 0.000s
im_detect: 675/4088 0.101s 0.000s
im_detect: 676/4088 0.101s 0.000s
im_detect: 677/4088 0.101s 0.000s
im_detect: 678/4088 0.101s 0.000s
im_detect: 679/4088 0.101s 0.000s
im_detect: 680/4088 0.101s 0.000s
im_detect: 681/4088 0.101s 0.000s
im_detect: 682/4088 0.101s 0.000s
im_detect: 683/4088 0.101s 0.000s
im_detect: 684/4088 0.101s 0.000s
im_detect: 685/4088 0.101s 0.000s
im_detect: 686/4088 0.101s 0.000s
im_detect: 687/4088 0.101s 0.000s
im_detect: 688/4088 0.101s 0.000s
im_detect: 689/4088 0.101s 0.000s
im_detect: 690/4088 0.101s 0.000s
im_detect: 691/4088 0.101s 0.000s
im_detect: 692/4088 0.101s 0.000s
im_detect: 693/4088 0.101s 0.000s
im_detect: 694/4088 0.101s 0.000s
im_detect: 695/4088 0.101s 0.000s
im_detect: 696/4088 0.101s 0.000s
im_detect: 697/4088 0.101s 0.000s
im_detect: 698/4088 0.101s 0.000s
im_detect: 699/4088 0.101s 0.000s
im_detect: 700/4088 0.101s 0.000s
im_detect: 701/4088 0.101s 0.000s
im_detect: 702/4088 0.101s 0.000s
im_detect: 703/4088 0.101s 0.000s
im_detect: 704/4088 0.101s 0.000s
im_detect: 705/4088 0.101s 0.000s
im_detect: 706/4088 0.101s 0.000s
im_detect: 707/4088 0.101s 0.000s
im_detect: 708/4088 0.101s 0.000s
im_detect: 709/4088 0.101s 0.000s
im_detect: 710/4088 0.101s 0.000s
im_detect: 711/4088 0.101s 0.000s
im_detect: 712/4088 0.101s 0.000s
im_detect: 713/4088 0.101s 0.000s
im_detect: 714/4088 0.101s 0.000s
im_detect: 715/4088 0.101s 0.000s
im_detect: 716/4088 0.101s 0.000s
im_detect: 717/4088 0.101s 0.000s
im_detect: 718/4088 0.101s 0.000s
im_detect: 719/4088 0.101s 0.000s
im_detect: 720/4088 0.101s 0.000s
im_detect: 721/4088 0.101s 0.000s
im_detect: 722/4088 0.101s 0.000s
im_detect: 723/4088 0.101s 0.000s
im_detect: 724/4088 0.101s 0.000s
im_detect: 725/4088 0.101s 0.000s
im_detect: 726/4088 0.101s 0.000s
im_detect: 727/4088 0.101s 0.000s
im_detect: 728/4088 0.101s 0.000s
im_detect: 729/4088 0.101s 0.000s
im_detect: 730/4088 0.101s 0.000s
im_detect: 731/4088 0.101s 0.000s
im_detect: 732/4088 0.101s 0.000s
im_detect: 733/4088 0.101s 0.000s
im_detect: 734/4088 0.101s 0.000s
im_detect: 735/4088 0.101s 0.000s
im_detect: 736/4088 0.101s 0.000s
im_detect: 737/4088 0.101s 0.000s
im_detect: 738/4088 0.101s 0.000s
im_detect: 739/4088 0.101s 0.000s
im_detect: 740/4088 0.101s 0.000s
im_detect: 741/4088 0.101s 0.000s
im_detect: 742/4088 0.101s 0.000s
im_detect: 743/4088 0.101s 0.000s
im_detect: 744/4088 0.101s 0.000s
im_detect: 745/4088 0.101s 0.000s
im_detect: 746/4088 0.101s 0.000s
im_detect: 747/4088 0.101s 0.000s
im_detect: 748/4088 0.101s 0.000s
im_detect: 749/4088 0.101s 0.000s
im_detect: 750/4088 0.101s 0.000s
im_detect: 751/4088 0.101s 0.000s
im_detect: 752/4088 0.101s 0.000s
im_detect: 753/4088 0.101s 0.000s
im_detect: 754/4088 0.101s 0.000s
im_detect: 755/4088 0.101s 0.000s
im_detect: 756/4088 0.101s 0.000s
im_detect: 757/4088 0.101s 0.000s
im_detect: 758/4088 0.101s 0.000s
im_detect: 759/4088 0.101s 0.000s
im_detect: 760/4088 0.101s 0.000s
im_detect: 761/4088 0.101s 0.000s
im_detect: 762/4088 0.101s 0.000s
im_detect: 763/4088 0.101s 0.000s
im_detect: 764/4088 0.101s 0.000s
im_detect: 765/4088 0.101s 0.000s
im_detect: 766/4088 0.101s 0.000s
im_detect: 767/4088 0.101s 0.000s
im_detect: 768/4088 0.101s 0.000s
im_detect: 769/4088 0.101s 0.000s
im_detect: 770/4088 0.101s 0.000s
im_detect: 771/4088 0.101s 0.000s
im_detect: 772/4088 0.101s 0.000s
im_detect: 773/4088 0.101s 0.000s
im_detect: 774/4088 0.101s 0.000s
im_detect: 775/4088 0.101s 0.000s
im_detect: 776/4088 0.101s 0.000s
im_detect: 777/4088 0.101s 0.000s
im_detect: 778/4088 0.101s 0.000s
im_detect: 779/4088 0.101s 0.000s
im_detect: 780/4088 0.101s 0.000s
im_detect: 781/4088 0.101s 0.000s
im_detect: 782/4088 0.101s 0.000s
im_detect: 783/4088 0.101s 0.000s
im_detect: 784/4088 0.101s 0.000s
im_detect: 785/4088 0.101s 0.000s
im_detect: 786/4088 0.101s 0.000s
im_detect: 787/4088 0.101s 0.000s
im_detect: 788/4088 0.101s 0.000s
im_detect: 789/4088 0.101s 0.000s
im_detect: 790/4088 0.101s 0.000s
im_detect: 791/4088 0.101s 0.000s
im_detect: 792/4088 0.101s 0.000s
im_detect: 793/4088 0.101s 0.000s
im_detect: 794/4088 0.101s 0.000s
im_detect: 795/4088 0.101s 0.000s
im_detect: 796/4088 0.101s 0.000s
im_detect: 797/4088 0.101s 0.000s
im_detect: 798/4088 0.101s 0.000s
im_detect: 799/4088 0.101s 0.000s
im_detect: 800/4088 0.101s 0.000s
im_detect: 801/4088 0.101s 0.000s
im_detect: 802/4088 0.101s 0.000s
im_detect: 803/4088 0.101s 0.000s
im_detect: 804/4088 0.101s 0.000s
im_detect: 805/4088 0.101s 0.000s
im_detect: 806/4088 0.101s 0.000s
im_detect: 807/4088 0.101s 0.000s
im_detect: 808/4088 0.101s 0.000s
im_detect: 809/4088 0.101s 0.000s
im_detect: 810/4088 0.101s 0.000s
im_detect: 811/4088 0.101s 0.000s
im_detect: 812/4088 0.101s 0.000s
im_detect: 813/4088 0.101s 0.000s
im_detect: 814/4088 0.101s 0.000s
im_detect: 815/4088 0.101s 0.000s
im_detect: 816/4088 0.101s 0.000s
im_detect: 817/4088 0.101s 0.000s
im_detect: 818/4088 0.101s 0.000s
im_detect: 819/4088 0.101s 0.000s
im_detect: 820/4088 0.101s 0.000s
im_detect: 821/4088 0.101s 0.000s
im_detect: 822/4088 0.101s 0.000s
im_detect: 823/4088 0.101s 0.000s
im_detect: 824/4088 0.101s 0.000s
im_detect: 825/4088 0.101s 0.000s
im_detect: 826/4088 0.101s 0.000s
im_detect: 827/4088 0.101s 0.000s
im_detect: 828/4088 0.101s 0.000s
im_detect: 829/4088 0.101s 0.000s
im_detect: 830/4088 0.101s 0.000s
im_detect: 831/4088 0.101s 0.000s
im_detect: 832/4088 0.101s 0.000s
im_detect: 833/4088 0.101s 0.000s
im_detect: 834/4088 0.101s 0.000s
im_detect: 835/4088 0.101s 0.000s
im_detect: 836/4088 0.101s 0.000s
im_detect: 837/4088 0.101s 0.000s
im_detect: 838/4088 0.101s 0.000s
im_detect: 839/4088 0.101s 0.000s
im_detect: 840/4088 0.101s 0.000s
im_detect: 841/4088 0.101s 0.000s
im_detect: 842/4088 0.101s 0.000s
im_detect: 843/4088 0.101s 0.000s
im_detect: 844/4088 0.101s 0.000s
im_detect: 845/4088 0.101s 0.000s
im_detect: 846/4088 0.101s 0.000s
im_detect: 847/4088 0.101s 0.000s
im_detect: 848/4088 0.101s 0.000s
im_detect: 849/4088 0.101s 0.000s
im_detect: 850/4088 0.101s 0.000s
im_detect: 851/4088 0.101s 0.000s
im_detect: 852/4088 0.101s 0.000s
im_detect: 853/4088 0.101s 0.000s
im_detect: 854/4088 0.101s 0.000s
im_detect: 855/4088 0.101s 0.000s
im_detect: 856/4088 0.101s 0.000s
im_detect: 857/4088 0.101s 0.000s
im_detect: 858/4088 0.101s 0.000s
im_detect: 859/4088 0.101s 0.000s
im_detect: 860/4088 0.101s 0.000s
im_detect: 861/4088 0.101s 0.000s
im_detect: 862/4088 0.101s 0.000s
im_detect: 863/4088 0.101s 0.000s
im_detect: 864/4088 0.101s 0.000s
im_detect: 865/4088 0.101s 0.000s
im_detect: 866/4088 0.101s 0.000s
im_detect: 867/4088 0.101s 0.000s
im_detect: 868/4088 0.101s 0.000s
im_detect: 869/4088 0.101s 0.000s
im_detect: 870/4088 0.101s 0.000s
im_detect: 871/4088 0.101s 0.000s
im_detect: 872/4088 0.101s 0.000s
im_detect: 873/4088 0.101s 0.000s
im_detect: 874/4088 0.101s 0.000s
im_detect: 875/4088 0.101s 0.000s
im_detect: 876/4088 0.101s 0.000s
im_detect: 877/4088 0.101s 0.000s
im_detect: 878/4088 0.101s 0.000s
im_detect: 879/4088 0.101s 0.000s
im_detect: 880/4088 0.101s 0.000s
im_detect: 881/4088 0.101s 0.000s
im_detect: 882/4088 0.101s 0.000s
im_detect: 883/4088 0.101s 0.000s
im_detect: 884/4088 0.101s 0.000s
im_detect: 885/4088 0.101s 0.000s
im_detect: 886/4088 0.101s 0.000s
im_detect: 887/4088 0.101s 0.000s
im_detect: 888/4088 0.101s 0.000s
im_detect: 889/4088 0.101s 0.000s
im_detect: 890/4088 0.101s 0.000s
im_detect: 891/4088 0.101s 0.000s
im_detect: 892/4088 0.101s 0.000s
im_detect: 893/4088 0.101s 0.000s
im_detect: 894/4088 0.101s 0.000s
im_detect: 895/4088 0.101s 0.000s
im_detect: 896/4088 0.101s 0.000s
im_detect: 897/4088 0.101s 0.000s
im_detect: 898/4088 0.101s 0.000s
im_detect: 899/4088 0.101s 0.000s
im_detect: 900/4088 0.101s 0.000s
im_detect: 901/4088 0.101s 0.000s
im_detect: 902/4088 0.101s 0.000s
im_detect: 903/4088 0.101s 0.000s
im_detect: 904/4088 0.101s 0.000s
im_detect: 905/4088 0.101s 0.000s
im_detect: 906/4088 0.101s 0.000s
im_detect: 907/4088 0.101s 0.000s
im_detect: 908/4088 0.101s 0.000s
im_detect: 909/4088 0.101s 0.000s
im_detect: 910/4088 0.101s 0.000s
im_detect: 911/4088 0.101s 0.000s
im_detect: 912/4088 0.101s 0.000s
im_detect: 913/4088 0.101s 0.000s
im_detect: 914/4088 0.101s 0.000s
im_detect: 915/4088 0.101s 0.000s
im_detect: 916/4088 0.101s 0.000s
im_detect: 917/4088 0.101s 0.000s
im_detect: 918/4088 0.101s 0.000s
im_detect: 919/4088 0.101s 0.000s
im_detect: 920/4088 0.101s 0.000s
im_detect: 921/4088 0.101s 0.000s
im_detect: 922/4088 0.101s 0.000s
im_detect: 923/4088 0.101s 0.000s
im_detect: 924/4088 0.101s 0.000s
im_detect: 925/4088 0.101s 0.000s
im_detect: 926/4088 0.101s 0.000s
im_detect: 927/4088 0.101s 0.000s
im_detect: 928/4088 0.101s 0.000s
im_detect: 929/4088 0.101s 0.000s
im_detect: 930/4088 0.101s 0.000s
im_detect: 931/4088 0.101s 0.000s
im_detect: 932/4088 0.101s 0.000s
im_detect: 933/4088 0.101s 0.000s
im_detect: 934/4088 0.101s 0.000s
im_detect: 935/4088 0.101s 0.000s
im_detect: 936/4088 0.101s 0.000s
im_detect: 937/4088 0.101s 0.000s
im_detect: 938/4088 0.101s 0.000s
im_detect: 939/4088 0.101s 0.000s
im_detect: 940/4088 0.101s 0.000s
im_detect: 941/4088 0.101s 0.000s
im_detect: 942/4088 0.101s 0.000s
im_detect: 943/4088 0.101s 0.000s
im_detect: 944/4088 0.101s 0.000s
im_detect: 945/4088 0.101s 0.000s
im_detect: 946/4088 0.101s 0.000s
im_detect: 947/4088 0.101s 0.000s
im_detect: 948/4088 0.101s 0.000s
im_detect: 949/4088 0.101s 0.000s
im_detect: 950/4088 0.101s 0.000s
im_detect: 951/4088 0.101s 0.000s
im_detect: 952/4088 0.101s 0.000s
im_detect: 953/4088 0.101s 0.000s
im_detect: 954/4088 0.101s 0.000s
im_detect: 955/4088 0.101s 0.000s
im_detect: 956/4088 0.101s 0.000s
im_detect: 957/4088 0.101s 0.000s
im_detect: 958/4088 0.101s 0.000s
im_detect: 959/4088 0.101s 0.000s
im_detect: 960/4088 0.101s 0.000s
im_detect: 961/4088 0.101s 0.000s
im_detect: 962/4088 0.101s 0.000s
im_detect: 963/4088 0.101s 0.000s
im_detect: 964/4088 0.101s 0.000s
im_detect: 965/4088 0.101s 0.000s
im_detect: 966/4088 0.101s 0.000s
im_detect: 967/4088 0.101s 0.000s
im_detect: 968/4088 0.101s 0.000s
im_detect: 969/4088 0.101s 0.000s
im_detect: 970/4088 0.101s 0.000s
im_detect: 971/4088 0.101s 0.000s
im_detect: 972/4088 0.101s 0.000s
im_detect: 973/4088 0.101s 0.000s
im_detect: 974/4088 0.101s 0.000s
im_detect: 975/4088 0.101s 0.000s
im_detect: 976/4088 0.101s 0.000s
im_detect: 977/4088 0.101s 0.000s
im_detect: 978/4088 0.101s 0.000s
im_detect: 979/4088 0.101s 0.000s
im_detect: 980/4088 0.101s 0.000s
im_detect: 981/4088 0.101s 0.000s
im_detect: 982/4088 0.101s 0.000s
im_detect: 983/4088 0.101s 0.000s
im_detect: 984/4088 0.101s 0.000s
im_detect: 985/4088 0.101s 0.000s
im_detect: 986/4088 0.101s 0.000s
im_detect: 987/4088 0.101s 0.000s
im_detect: 988/4088 0.101s 0.000s
im_detect: 989/4088 0.101s 0.000s
im_detect: 990/4088 0.101s 0.000s
im_detect: 991/4088 0.101s 0.000s
im_detect: 992/4088 0.101s 0.000s
im_detect: 993/4088 0.101s 0.000s
im_detect: 994/4088 0.101s 0.000s
im_detect: 995/4088 0.101s 0.000s
im_detect: 996/4088 0.101s 0.000s
im_detect: 997/4088 0.101s 0.000s
im_detect: 998/4088 0.101s 0.000s
im_detect: 999/4088 0.101s 0.000s
im_detect: 1000/4088 0.101s 0.000s
im_detect: 1001/4088 0.101s 0.000s
im_detect: 1002/4088 0.101s 0.000s
im_detect: 1003/4088 0.101s 0.000s
im_detect: 1004/4088 0.101s 0.000s
im_detect: 1005/4088 0.101s 0.000s
im_detect: 1006/4088 0.101s 0.000s
im_detect: 1007/4088 0.101s 0.000s
im_detect: 1008/4088 0.101s 0.000s
im_detect: 1009/4088 0.101s 0.000s
im_detect: 1010/4088 0.101s 0.000s
im_detect: 1011/4088 0.101s 0.000s
im_detect: 1012/4088 0.101s 0.000s
im_detect: 1013/4088 0.101s 0.000s
im_detect: 1014/4088 0.101s 0.000s
im_detect: 1015/4088 0.101s 0.000s
im_detect: 1016/4088 0.101s 0.000s
im_detect: 1017/4088 0.101s 0.000s
im_detect: 1018/4088 0.101s 0.000s
im_detect: 1019/4088 0.101s 0.000s
im_detect: 1020/4088 0.101s 0.000s
im_detect: 1021/4088 0.101s 0.000s
im_detect: 1022/4088 0.101s 0.000s
im_detect: 1023/4088 0.101s 0.000s
im_detect: 1024/4088 0.101s 0.000s
im_detect: 1025/4088 0.101s 0.000s
im_detect: 1026/4088 0.101s 0.000s
im_detect: 1027/4088 0.101s 0.000s
im_detect: 1028/4088 0.101s 0.000s
im_detect: 1029/4088 0.101s 0.000s
im_detect: 1030/4088 0.101s 0.000s
im_detect: 1031/4088 0.101s 0.000s
im_detect: 1032/4088 0.101s 0.000s
im_detect: 1033/4088 0.101s 0.000s
im_detect: 1034/4088 0.101s 0.000s
im_detect: 1035/4088 0.101s 0.000s
im_detect: 1036/4088 0.101s 0.000s
im_detect: 1037/4088 0.101s 0.000s
im_detect: 1038/4088 0.101s 0.000s
im_detect: 1039/4088 0.101s 0.000s
im_detect: 1040/4088 0.101s 0.000s
im_detect: 1041/4088 0.101s 0.000s
im_detect: 1042/4088 0.101s 0.000s
im_detect: 1043/4088 0.101s 0.000s
im_detect: 1044/4088 0.102s 0.000s
im_detect: 1045/4088 0.102s 0.000s
im_detect: 1046/4088 0.102s 0.000s
im_detect: 1047/4088 0.102s 0.000s
im_detect: 1048/4088 0.102s 0.000s
im_detect: 1049/4088 0.102s 0.000s
im_detect: 1050/4088 0.102s 0.000s
im_detect: 1051/4088 0.102s 0.000s
im_detect: 1052/4088 0.102s 0.000s
im_detect: 1053/4088 0.102s 0.000s
im_detect: 1054/4088 0.102s 0.000s
im_detect: 1055/4088 0.101s 0.000s
im_detect: 1056/4088 0.101s 0.000s
im_detect: 1057/4088 0.101s 0.000s
im_detect: 1058/4088 0.101s 0.000s
im_detect: 1059/4088 0.101s 0.000s
im_detect: 1060/4088 0.101s 0.000s
im_detect: 1061/4088 0.101s 0.000s
im_detect: 1062/4088 0.101s 0.000s
im_detect: 1063/4088 0.101s 0.000s
im_detect: 1064/4088 0.101s 0.000s
im_detect: 1065/4088 0.101s 0.000s
im_detect: 1066/4088 0.101s 0.000s
im_detect: 1067/4088 0.101s 0.000s
im_detect: 1068/4088 0.101s 0.000s
im_detect: 1069/4088 0.101s 0.000s
im_detect: 1070/4088 0.101s 0.000s
im_detect: 1071/4088 0.101s 0.000s
im_detect: 1072/4088 0.101s 0.000s
im_detect: 1073/4088 0.101s 0.000s
im_detect: 1074/4088 0.101s 0.000s
im_detect: 1075/4088 0.101s 0.000s
im_detect: 1076/4088 0.101s 0.000s
im_detect: 1077/4088 0.101s 0.000s
im_detect: 1078/4088 0.101s 0.000s
im_detect: 1079/4088 0.101s 0.000s
im_detect: 1080/4088 0.101s 0.000s
im_detect: 1081/4088 0.101s 0.000s
im_detect: 1082/4088 0.101s 0.000s
im_detect: 1083/4088 0.101s 0.000s
im_detect: 1084/4088 0.101s 0.000s
im_detect: 1085/4088 0.101s 0.000s
im_detect: 1086/4088 0.101s 0.000s
im_detect: 1087/4088 0.101s 0.000s
im_detect: 1088/4088 0.101s 0.000s
im_detect: 1089/4088 0.101s 0.000s
im_detect: 1090/4088 0.101s 0.000s
im_detect: 1091/4088 0.101s 0.000s
im_detect: 1092/4088 0.101s 0.000s
im_detect: 1093/4088 0.101s 0.000s
im_detect: 1094/4088 0.101s 0.000s
im_detect: 1095/4088 0.101s 0.000s
im_detect: 1096/4088 0.101s 0.000s
im_detect: 1097/4088 0.101s 0.000s
im_detect: 1098/4088 0.101s 0.000s
im_detect: 1099/4088 0.101s 0.000s
im_detect: 1100/4088 0.101s 0.000s
im_detect: 1101/4088 0.101s 0.000s
im_detect: 1102/4088 0.101s 0.000s
im_detect: 1103/4088 0.101s 0.000s
im_detect: 1104/4088 0.101s 0.000s
im_detect: 1105/4088 0.101s 0.000s
im_detect: 1106/4088 0.101s 0.000s
im_detect: 1107/4088 0.101s 0.000s
im_detect: 1108/4088 0.101s 0.000s
im_detect: 1109/4088 0.101s 0.000s
im_detect: 1110/4088 0.101s 0.000s
im_detect: 1111/4088 0.101s 0.000s
im_detect: 1112/4088 0.101s 0.000s
im_detect: 1113/4088 0.101s 0.000s
im_detect: 1114/4088 0.101s 0.000s
im_detect: 1115/4088 0.101s 0.000s
im_detect: 1116/4088 0.101s 0.000s
im_detect: 1117/4088 0.101s 0.000s
im_detect: 1118/4088 0.101s 0.000s
im_detect: 1119/4088 0.101s 0.000s
im_detect: 1120/4088 0.101s 0.000s
im_detect: 1121/4088 0.101s 0.000s
im_detect: 1122/4088 0.101s 0.000s
im_detect: 1123/4088 0.101s 0.000s
im_detect: 1124/4088 0.101s 0.000s
im_detect: 1125/4088 0.101s 0.000s
im_detect: 1126/4088 0.101s 0.000s
im_detect: 1127/4088 0.101s 0.000s
im_detect: 1128/4088 0.101s 0.000s
im_detect: 1129/4088 0.101s 0.000s
im_detect: 1130/4088 0.101s 0.000s
im_detect: 1131/4088 0.101s 0.000s
im_detect: 1132/4088 0.101s 0.000s
im_detect: 1133/4088 0.101s 0.000s
im_detect: 1134/4088 0.101s 0.000s
im_detect: 1135/4088 0.101s 0.000s
im_detect: 1136/4088 0.101s 0.000s
im_detect: 1137/4088 0.101s 0.000s
im_detect: 1138/4088 0.101s 0.000s
im_detect: 1139/4088 0.101s 0.000s
im_detect: 1140/4088 0.101s 0.000s
im_detect: 1141/4088 0.101s 0.000s
im_detect: 1142/4088 0.101s 0.000s
im_detect: 1143/4088 0.101s 0.000s
im_detect: 1144/4088 0.101s 0.000s
im_detect: 1145/4088 0.102s 0.000s
im_detect: 1146/4088 0.102s 0.000s
im_detect: 1147/4088 0.102s 0.000s
im_detect: 1148/4088 0.102s 0.000s
im_detect: 1149/4088 0.102s 0.000s
im_detect: 1150/4088 0.102s 0.000s
im_detect: 1151/4088 0.102s 0.000s
im_detect: 1152/4088 0.102s 0.000s
im_detect: 1153/4088 0.102s 0.000s
im_detect: 1154/4088 0.102s 0.000s
im_detect: 1155/4088 0.102s 0.000s
im_detect: 1156/4088 0.102s 0.000s
im_detect: 1157/4088 0.102s 0.000s
im_detect: 1158/4088 0.102s 0.000s
im_detect: 1159/4088 0.102s 0.000s
im_detect: 1160/4088 0.102s 0.000s
im_detect: 1161/4088 0.102s 0.000s
im_detect: 1162/4088 0.102s 0.000s
im_detect: 1163/4088 0.102s 0.000s
im_detect: 1164/4088 0.102s 0.000s
im_detect: 1165/4088 0.102s 0.000s
im_detect: 1166/4088 0.102s 0.000s
im_detect: 1167/4088 0.102s 0.000s
im_detect: 1168/4088 0.102s 0.000s
im_detect: 1169/4088 0.102s 0.000s
im_detect: 1170/4088 0.102s 0.000s
im_detect: 1171/4088 0.102s 0.000s
im_detect: 1172/4088 0.102s 0.000s
im_detect: 1173/4088 0.102s 0.000s
im_detect: 1174/4088 0.102s 0.000s
im_detect: 1175/4088 0.102s 0.000s
im_detect: 1176/4088 0.102s 0.000s
im_detect: 1177/4088 0.102s 0.000s
im_detect: 1178/4088 0.102s 0.000s
im_detect: 1179/4088 0.102s 0.000s
im_detect: 1180/4088 0.102s 0.000s
im_detect: 1181/4088 0.102s 0.000s
im_detect: 1182/4088 0.102s 0.000s
im_detect: 1183/4088 0.102s 0.000s
im_detect: 1184/4088 0.102s 0.000s
im_detect: 1185/4088 0.102s 0.000s
im_detect: 1186/4088 0.102s 0.000s
im_detect: 1187/4088 0.102s 0.000s
im_detect: 1188/4088 0.102s 0.000s
im_detect: 1189/4088 0.102s 0.000s
im_detect: 1190/4088 0.102s 0.000s
im_detect: 1191/4088 0.102s 0.000s
im_detect: 1192/4088 0.102s 0.000s
im_detect: 1193/4088 0.102s 0.000s
im_detect: 1194/4088 0.102s 0.000s
im_detect: 1195/4088 0.102s 0.000s
im_detect: 1196/4088 0.102s 0.000s
im_detect: 1197/4088 0.102s 0.000s
im_detect: 1198/4088 0.102s 0.000s
im_detect: 1199/4088 0.102s 0.000s
im_detect: 1200/4088 0.102s 0.000s
im_detect: 1201/4088 0.102s 0.000s
im_detect: 1202/4088 0.102s 0.000s
im_detect: 1203/4088 0.102s 0.000s
im_detect: 1204/4088 0.102s 0.000s
im_detect: 1205/4088 0.102s 0.000s
im_detect: 1206/4088 0.102s 0.000s
im_detect: 1207/4088 0.102s 0.000s
im_detect: 1208/4088 0.102s 0.000s
im_detect: 1209/4088 0.102s 0.000s
im_detect: 1210/4088 0.102s 0.000s
im_detect: 1211/4088 0.102s 0.000s
im_detect: 1212/4088 0.102s 0.000s
im_detect: 1213/4088 0.102s 0.000s
im_detect: 1214/4088 0.102s 0.000s
im_detect: 1215/4088 0.102s 0.000s
im_detect: 1216/4088 0.102s 0.000s
im_detect: 1217/4088 0.102s 0.000s
im_detect: 1218/4088 0.102s 0.000s
im_detect: 1219/4088 0.102s 0.000s
im_detect: 1220/4088 0.102s 0.000s
im_detect: 1221/4088 0.102s 0.000s
im_detect: 1222/4088 0.102s 0.000s
im_detect: 1223/4088 0.102s 0.000s
im_detect: 1224/4088 0.102s 0.000s
im_detect: 1225/4088 0.102s 0.000s
im_detect: 1226/4088 0.102s 0.000s
im_detect: 1227/4088 0.102s 0.000s
im_detect: 1228/4088 0.102s 0.000s
im_detect: 1229/4088 0.102s 0.000s
im_detect: 1230/4088 0.102s 0.000s
im_detect: 1231/4088 0.102s 0.000s
im_detect: 1232/4088 0.102s 0.000s
im_detect: 1233/4088 0.102s 0.000s
im_detect: 1234/4088 0.102s 0.000s
im_detect: 1235/4088 0.102s 0.000s
im_detect: 1236/4088 0.102s 0.000s
im_detect: 1237/4088 0.102s 0.000s
im_detect: 1238/4088 0.102s 0.000s
im_detect: 1239/4088 0.102s 0.000s
im_detect: 1240/4088 0.102s 0.000s
im_detect: 1241/4088 0.102s 0.000s
im_detect: 1242/4088 0.102s 0.000s
im_detect: 1243/4088 0.102s 0.000s
im_detect: 1244/4088 0.102s 0.000s
im_detect: 1245/4088 0.102s 0.000s
im_detect: 1246/4088 0.102s 0.000s
im_detect: 1247/4088 0.102s 0.000s
im_detect: 1248/4088 0.102s 0.000s
im_detect: 1249/4088 0.102s 0.000s
im_detect: 1250/4088 0.102s 0.000s
im_detect: 1251/4088 0.102s 0.000s
im_detect: 1252/4088 0.102s 0.000s
im_detect: 1253/4088 0.102s 0.000s
im_detect: 1254/4088 0.102s 0.000s
im_detect: 1255/4088 0.102s 0.000s
im_detect: 1256/4088 0.102s 0.000s
im_detect: 1257/4088 0.102s 0.000s
im_detect: 1258/4088 0.102s 0.000s
im_detect: 1259/4088 0.102s 0.000s
im_detect: 1260/4088 0.102s 0.000s
im_detect: 1261/4088 0.102s 0.000s
im_detect: 1262/4088 0.102s 0.000s
im_detect: 1263/4088 0.102s 0.000s
im_detect: 1264/4088 0.102s 0.000s
im_detect: 1265/4088 0.102s 0.000s
im_detect: 1266/4088 0.102s 0.000s
im_detect: 1267/4088 0.102s 0.000s
im_detect: 1268/4088 0.102s 0.000s
im_detect: 1269/4088 0.102s 0.000s
im_detect: 1270/4088 0.102s 0.000s
im_detect: 1271/4088 0.102s 0.000s
im_detect: 1272/4088 0.102s 0.000s
im_detect: 1273/4088 0.102s 0.000s
im_detect: 1274/4088 0.102s 0.000s
im_detect: 1275/4088 0.102s 0.000s
im_detect: 1276/4088 0.102s 0.000s
im_detect: 1277/4088 0.102s 0.000s
im_detect: 1278/4088 0.102s 0.000s
im_detect: 1279/4088 0.102s 0.000s
im_detect: 1280/4088 0.102s 0.000s
im_detect: 1281/4088 0.102s 0.000s
im_detect: 1282/4088 0.102s 0.000s
im_detect: 1283/4088 0.102s 0.000s
im_detect: 1284/4088 0.102s 0.000s
im_detect: 1285/4088 0.102s 0.000s
im_detect: 1286/4088 0.102s 0.000s
im_detect: 1287/4088 0.102s 0.000s
im_detect: 1288/4088 0.102s 0.000s
im_detect: 1289/4088 0.102s 0.000s
im_detect: 1290/4088 0.102s 0.000s
im_detect: 1291/4088 0.102s 0.000s
im_detect: 1292/4088 0.102s 0.000s
im_detect: 1293/4088 0.102s 0.000s
im_detect: 1294/4088 0.102s 0.000s
im_detect: 1295/4088 0.102s 0.000s
im_detect: 1296/4088 0.102s 0.000s
im_detect: 1297/4088 0.102s 0.000s
im_detect: 1298/4088 0.102s 0.000s
im_detect: 1299/4088 0.102s 0.000s
im_detect: 1300/4088 0.102s 0.000s
im_detect: 1301/4088 0.102s 0.000s
im_detect: 1302/4088 0.102s 0.000s
im_detect: 1303/4088 0.102s 0.000s
im_detect: 1304/4088 0.102s 0.000s
im_detect: 1305/4088 0.102s 0.000s
im_detect: 1306/4088 0.102s 0.000s
im_detect: 1307/4088 0.102s 0.000s
im_detect: 1308/4088 0.102s 0.000s
im_detect: 1309/4088 0.102s 0.000s
im_detect: 1310/4088 0.102s 0.000s
im_detect: 1311/4088 0.102s 0.000s
im_detect: 1312/4088 0.102s 0.000s
im_detect: 1313/4088 0.102s 0.000s
im_detect: 1314/4088 0.102s 0.000s
im_detect: 1315/4088 0.102s 0.000s
im_detect: 1316/4088 0.102s 0.000s
im_detect: 1317/4088 0.102s 0.000s
im_detect: 1318/4088 0.102s 0.000s
im_detect: 1319/4088 0.102s 0.000s
im_detect: 1320/4088 0.102s 0.000s
im_detect: 1321/4088 0.102s 0.000s
im_detect: 1322/4088 0.102s 0.000s
im_detect: 1323/4088 0.102s 0.000s
im_detect: 1324/4088 0.102s 0.000s
im_detect: 1325/4088 0.102s 0.000s
im_detect: 1326/4088 0.102s 0.000s
im_detect: 1327/4088 0.102s 0.000s
im_detect: 1328/4088 0.102s 0.000s
im_detect: 1329/4088 0.102s 0.000s
im_detect: 1330/4088 0.102s 0.000s
im_detect: 1331/4088 0.102s 0.000s
im_detect: 1332/4088 0.102s 0.000s
im_detect: 1333/4088 0.102s 0.000s
im_detect: 1334/4088 0.102s 0.000s
im_detect: 1335/4088 0.102s 0.000s
im_detect: 1336/4088 0.102s 0.000s
im_detect: 1337/4088 0.102s 0.000s
im_detect: 1338/4088 0.102s 0.000s
im_detect: 1339/4088 0.102s 0.000s
im_detect: 1340/4088 0.102s 0.000s
im_detect: 1341/4088 0.102s 0.000s
im_detect: 1342/4088 0.102s 0.000s
im_detect: 1343/4088 0.102s 0.000s
im_detect: 1344/4088 0.102s 0.000s
im_detect: 1345/4088 0.102s 0.000s
im_detect: 1346/4088 0.102s 0.000s
im_detect: 1347/4088 0.102s 0.000s
im_detect: 1348/4088 0.102s 0.000s
im_detect: 1349/4088 0.102s 0.000s
im_detect: 1350/4088 0.102s 0.000s
im_detect: 1351/4088 0.102s 0.000s
im_detect: 1352/4088 0.102s 0.000s
im_detect: 1353/4088 0.102s 0.000s
im_detect: 1354/4088 0.102s 0.000s
im_detect: 1355/4088 0.102s 0.000s
im_detect: 1356/4088 0.102s 0.000s
im_detect: 1357/4088 0.102s 0.000s
im_detect: 1358/4088 0.102s 0.000s
im_detect: 1359/4088 0.102s 0.000s
im_detect: 1360/4088 0.102s 0.000s
im_detect: 1361/4088 0.102s 0.000s
im_detect: 1362/4088 0.102s 0.000s
im_detect: 1363/4088 0.102s 0.000s
im_detect: 1364/4088 0.102s 0.000s
im_detect: 1365/4088 0.102s 0.000s
im_detect: 1366/4088 0.102s 0.000s
im_detect: 1367/4088 0.102s 0.000s
im_detect: 1368/4088 0.102s 0.000s
im_detect: 1369/4088 0.102s 0.000s
im_detect: 1370/4088 0.102s 0.000s
im_detect: 1371/4088 0.102s 0.000s
im_detect: 1372/4088 0.102s 0.000s
im_detect: 1373/4088 0.102s 0.000s
im_detect: 1374/4088 0.102s 0.000s
im_detect: 1375/4088 0.102s 0.000s
im_detect: 1376/4088 0.102s 0.000s
im_detect: 1377/4088 0.102s 0.000s
im_detect: 1378/4088 0.102s 0.000s
im_detect: 1379/4088 0.102s 0.000s
im_detect: 1380/4088 0.102s 0.000s
im_detect: 1381/4088 0.102s 0.000s
im_detect: 1382/4088 0.102s 0.000s
im_detect: 1383/4088 0.102s 0.000s
im_detect: 1384/4088 0.102s 0.000s
im_detect: 1385/4088 0.102s 0.000s
im_detect: 1386/4088 0.102s 0.000s
im_detect: 1387/4088 0.102s 0.000s
im_detect: 1388/4088 0.102s 0.000s
im_detect: 1389/4088 0.102s 0.000s
im_detect: 1390/4088 0.102s 0.000s
im_detect: 1391/4088 0.102s 0.000s
im_detect: 1392/4088 0.102s 0.000s
im_detect: 1393/4088 0.102s 0.000s
im_detect: 1394/4088 0.102s 0.000s
im_detect: 1395/4088 0.102s 0.000s
im_detect: 1396/4088 0.102s 0.000s
im_detect: 1397/4088 0.102s 0.000s
im_detect: 1398/4088 0.102s 0.000s
im_detect: 1399/4088 0.102s 0.000s
im_detect: 1400/4088 0.102s 0.000s
im_detect: 1401/4088 0.102s 0.000s
im_detect: 1402/4088 0.102s 0.000s
im_detect: 1403/4088 0.102s 0.000s
im_detect: 1404/4088 0.102s 0.000s
im_detect: 1405/4088 0.102s 0.000s
im_detect: 1406/4088 0.102s 0.000s
im_detect: 1407/4088 0.102s 0.000s
im_detect: 1408/4088 0.102s 0.000s
im_detect: 1409/4088 0.102s 0.000s
im_detect: 1410/4088 0.102s 0.000s
im_detect: 1411/4088 0.102s 0.000s
im_detect: 1412/4088 0.102s 0.000s
im_detect: 1413/4088 0.102s 0.000s
im_detect: 1414/4088 0.102s 0.000s
im_detect: 1415/4088 0.102s 0.000s
im_detect: 1416/4088 0.102s 0.000s
im_detect: 1417/4088 0.102s 0.000s
im_detect: 1418/4088 0.102s 0.000s
im_detect: 1419/4088 0.102s 0.000s
im_detect: 1420/4088 0.102s 0.000s
im_detect: 1421/4088 0.102s 0.000s
im_detect: 1422/4088 0.102s 0.000s
im_detect: 1423/4088 0.102s 0.000s
im_detect: 1424/4088 0.102s 0.000s
im_detect: 1425/4088 0.102s 0.000s
im_detect: 1426/4088 0.102s 0.000s
im_detect: 1427/4088 0.102s 0.000s
im_detect: 1428/4088 0.102s 0.000s
im_detect: 1429/4088 0.102s 0.000s
im_detect: 1430/4088 0.102s 0.000s
im_detect: 1431/4088 0.102s 0.000s
im_detect: 1432/4088 0.102s 0.000s
im_detect: 1433/4088 0.102s 0.000s
im_detect: 1434/4088 0.102s 0.000s
im_detect: 1435/4088 0.102s 0.000s
im_detect: 1436/4088 0.102s 0.000s
im_detect: 1437/4088 0.102s 0.000s
im_detect: 1438/4088 0.102s 0.000s
im_detect: 1439/4088 0.102s 0.000s
im_detect: 1440/4088 0.102s 0.000s
im_detect: 1441/4088 0.102s 0.000s
im_detect: 1442/4088 0.102s 0.000s
im_detect: 1443/4088 0.102s 0.000s
im_detect: 1444/4088 0.102s 0.000s
im_detect: 1445/4088 0.102s 0.000s
im_detect: 1446/4088 0.102s 0.000s
im_detect: 1447/4088 0.102s 0.000s
im_detect: 1448/4088 0.102s 0.000s
im_detect: 1449/4088 0.102s 0.000s
im_detect: 1450/4088 0.102s 0.000s
im_detect: 1451/4088 0.102s 0.000s
im_detect: 1452/4088 0.102s 0.000s
im_detect: 1453/4088 0.102s 0.000s
im_detect: 1454/4088 0.102s 0.000s
im_detect: 1455/4088 0.102s 0.000s
im_detect: 1456/4088 0.102s 0.000s
im_detect: 1457/4088 0.102s 0.000s
im_detect: 1458/4088 0.102s 0.000s
im_detect: 1459/4088 0.102s 0.000s
im_detect: 1460/4088 0.102s 0.000s
im_detect: 1461/4088 0.102s 0.000s
im_detect: 1462/4088 0.102s 0.000s
im_detect: 1463/4088 0.102s 0.000s
im_detect: 1464/4088 0.102s 0.000s
im_detect: 1465/4088 0.102s 0.000s
im_detect: 1466/4088 0.102s 0.000s
im_detect: 1467/4088 0.102s 0.000s
im_detect: 1468/4088 0.102s 0.000s
im_detect: 1469/4088 0.102s 0.000s
im_detect: 1470/4088 0.102s 0.000s
im_detect: 1471/4088 0.102s 0.000s
im_detect: 1472/4088 0.102s 0.000s
im_detect: 1473/4088 0.102s 0.000s
im_detect: 1474/4088 0.102s 0.000s
im_detect: 1475/4088 0.102s 0.000s
im_detect: 1476/4088 0.102s 0.000s
im_detect: 1477/4088 0.102s 0.000s
im_detect: 1478/4088 0.102s 0.000s
im_detect: 1479/4088 0.102s 0.000s
im_detect: 1480/4088 0.102s 0.000s
im_detect: 1481/4088 0.102s 0.000s
im_detect: 1482/4088 0.102s 0.000s
im_detect: 1483/4088 0.102s 0.000s
im_detect: 1484/4088 0.102s 0.000s
im_detect: 1485/4088 0.102s 0.000s
im_detect: 1486/4088 0.102s 0.000s
im_detect: 1487/4088 0.102s 0.000s
im_detect: 1488/4088 0.102s 0.000s
im_detect: 1489/4088 0.102s 0.000s
im_detect: 1490/4088 0.102s 0.000s
im_detect: 1491/4088 0.102s 0.000s
im_detect: 1492/4088 0.102s 0.000s
im_detect: 1493/4088 0.102s 0.000s
im_detect: 1494/4088 0.102s 0.000s
im_detect: 1495/4088 0.102s 0.000s
im_detect: 1496/4088 0.102s 0.000s
im_detect: 1497/4088 0.102s 0.000s
im_detect: 1498/4088 0.102s 0.000s
im_detect: 1499/4088 0.102s 0.000s
im_detect: 1500/4088 0.102s 0.000s
im_detect: 1501/4088 0.102s 0.000s
im_detect: 1502/4088 0.102s 0.000s
im_detect: 1503/4088 0.102s 0.000s
im_detect: 1504/4088 0.102s 0.000s
im_detect: 1505/4088 0.102s 0.000s
im_detect: 1506/4088 0.102s 0.000s
im_detect: 1507/4088 0.102s 0.000s
im_detect: 1508/4088 0.102s 0.000s
im_detect: 1509/4088 0.102s 0.000s
im_detect: 1510/4088 0.102s 0.000s
im_detect: 1511/4088 0.102s 0.000s
im_detect: 1512/4088 0.102s 0.000s
im_detect: 1513/4088 0.102s 0.000s
im_detect: 1514/4088 0.102s 0.000s
im_detect: 1515/4088 0.102s 0.000s
im_detect: 1516/4088 0.102s 0.000s
im_detect: 1517/4088 0.102s 0.000s
im_detect: 1518/4088 0.102s 0.000s
im_detect: 1519/4088 0.102s 0.000s
im_detect: 1520/4088 0.102s 0.000s
im_detect: 1521/4088 0.102s 0.000s
im_detect: 1522/4088 0.102s 0.000s
im_detect: 1523/4088 0.102s 0.000s
im_detect: 1524/4088 0.102s 0.000s
im_detect: 1525/4088 0.102s 0.000s
im_detect: 1526/4088 0.102s 0.000s
im_detect: 1527/4088 0.102s 0.000s
im_detect: 1528/4088 0.102s 0.000s
im_detect: 1529/4088 0.102s 0.000s
im_detect: 1530/4088 0.102s 0.000s
im_detect: 1531/4088 0.102s 0.000s
im_detect: 1532/4088 0.102s 0.000s
im_detect: 1533/4088 0.102s 0.000s
im_detect: 1534/4088 0.102s 0.000s
im_detect: 1535/4088 0.102s 0.000s
im_detect: 1536/4088 0.102s 0.000s
im_detect: 1537/4088 0.102s 0.000s
im_detect: 1538/4088 0.102s 0.000s
im_detect: 1539/4088 0.102s 0.000s
im_detect: 1540/4088 0.102s 0.000s
im_detect: 1541/4088 0.102s 0.000s
im_detect: 1542/4088 0.102s 0.000s
im_detect: 1543/4088 0.102s 0.000s
im_detect: 1544/4088 0.102s 0.000s
im_detect: 1545/4088 0.102s 0.000s
im_detect: 1546/4088 0.102s 0.000s
im_detect: 1547/4088 0.102s 0.000s
im_detect: 1548/4088 0.102s 0.000s
im_detect: 1549/4088 0.102s 0.000s
im_detect: 1550/4088 0.102s 0.000s
im_detect: 1551/4088 0.102s 0.000s
im_detect: 1552/4088 0.102s 0.000s
im_detect: 1553/4088 0.102s 0.000s
im_detect: 1554/4088 0.102s 0.000s
im_detect: 1555/4088 0.102s 0.000s
im_detect: 1556/4088 0.102s 0.000s
im_detect: 1557/4088 0.102s 0.000s
im_detect: 1558/4088 0.102s 0.000s
im_detect: 1559/4088 0.102s 0.000s
im_detect: 1560/4088 0.102s 0.000s
im_detect: 1561/4088 0.102s 0.000s
im_detect: 1562/4088 0.102s 0.000s
im_detect: 1563/4088 0.102s 0.000s
im_detect: 1564/4088 0.102s 0.000s
im_detect: 1565/4088 0.102s 0.000s
im_detect: 1566/4088 0.102s 0.000s
im_detect: 1567/4088 0.102s 0.000s
im_detect: 1568/4088 0.102s 0.000s
im_detect: 1569/4088 0.102s 0.000s
im_detect: 1570/4088 0.102s 0.000s
im_detect: 1571/4088 0.102s 0.000s
im_detect: 1572/4088 0.102s 0.000s
im_detect: 1573/4088 0.102s 0.000s
im_detect: 1574/4088 0.102s 0.000s
im_detect: 1575/4088 0.102s 0.000s
im_detect: 1576/4088 0.102s 0.000s
im_detect: 1577/4088 0.102s 0.000s
im_detect: 1578/4088 0.102s 0.000s
im_detect: 1579/4088 0.102s 0.000s
im_detect: 1580/4088 0.102s 0.000s
im_detect: 1581/4088 0.102s 0.000s
im_detect: 1582/4088 0.102s 0.000s
im_detect: 1583/4088 0.102s 0.000s
im_detect: 1584/4088 0.102s 0.000s
im_detect: 1585/4088 0.102s 0.000s
im_detect: 1586/4088 0.102s 0.000s
im_detect: 1587/4088 0.102s 0.000s
im_detect: 1588/4088 0.102s 0.000s
im_detect: 1589/4088 0.102s 0.000s
im_detect: 1590/4088 0.102s 0.000s
im_detect: 1591/4088 0.102s 0.000s
im_detect: 1592/4088 0.102s 0.000s
im_detect: 1593/4088 0.102s 0.000s
im_detect: 1594/4088 0.102s 0.000s
im_detect: 1595/4088 0.102s 0.000s
im_detect: 1596/4088 0.102s 0.000s
im_detect: 1597/4088 0.102s 0.000s
im_detect: 1598/4088 0.102s 0.000s
im_detect: 1599/4088 0.102s 0.000s
im_detect: 1600/4088 0.102s 0.000s
im_detect: 1601/4088 0.102s 0.000s
im_detect: 1602/4088 0.102s 0.000s
im_detect: 1603/4088 0.102s 0.000s
im_detect: 1604/4088 0.102s 0.000s
im_detect: 1605/4088 0.102s 0.000s
im_detect: 1606/4088 0.102s 0.000s
im_detect: 1607/4088 0.102s 0.000s
im_detect: 1608/4088 0.102s 0.000s
im_detect: 1609/4088 0.102s 0.000s
im_detect: 1610/4088 0.102s 0.000s
im_detect: 1611/4088 0.102s 0.000s
im_detect: 1612/4088 0.102s 0.000s
im_detect: 1613/4088 0.102s 0.000s
im_detect: 1614/4088 0.102s 0.000s
im_detect: 1615/4088 0.102s 0.000s
im_detect: 1616/4088 0.102s 0.000s
im_detect: 1617/4088 0.102s 0.000s
im_detect: 1618/4088 0.102s 0.000s
im_detect: 1619/4088 0.102s 0.000s
im_detect: 1620/4088 0.102s 0.000s
im_detect: 1621/4088 0.102s 0.000s
im_detect: 1622/4088 0.102s 0.000s
im_detect: 1623/4088 0.102s 0.000s
im_detect: 1624/4088 0.102s 0.000s
im_detect: 1625/4088 0.102s 0.000s
im_detect: 1626/4088 0.102s 0.000s
im_detect: 1627/4088 0.102s 0.000s
im_detect: 1628/4088 0.102s 0.000s
im_detect: 1629/4088 0.102s 0.000s
im_detect: 1630/4088 0.102s 0.000s
im_detect: 1631/4088 0.102s 0.000s
im_detect: 1632/4088 0.102s 0.000s
im_detect: 1633/4088 0.102s 0.000s
im_detect: 1634/4088 0.102s 0.000s
im_detect: 1635/4088 0.102s 0.000s
im_detect: 1636/4088 0.102s 0.000s
im_detect: 1637/4088 0.102s 0.000s
im_detect: 1638/4088 0.102s 0.000s
im_detect: 1639/4088 0.102s 0.000s
im_detect: 1640/4088 0.102s 0.000s
im_detect: 1641/4088 0.102s 0.000s
im_detect: 1642/4088 0.102s 0.000s
im_detect: 1643/4088 0.102s 0.000s
im_detect: 1644/4088 0.102s 0.000s
im_detect: 1645/4088 0.102s 0.000s
im_detect: 1646/4088 0.102s 0.000s
im_detect: 1647/4088 0.102s 0.000s
im_detect: 1648/4088 0.102s 0.000s
im_detect: 1649/4088 0.102s 0.000s
im_detect: 1650/4088 0.102s 0.000s
im_detect: 1651/4088 0.102s 0.000s
im_detect: 1652/4088 0.102s 0.000s
im_detect: 1653/4088 0.102s 0.000s
im_detect: 1654/4088 0.102s 0.000s
im_detect: 1655/4088 0.102s 0.000s
im_detect: 1656/4088 0.102s 0.000s
im_detect: 1657/4088 0.102s 0.000s
im_detect: 1658/4088 0.102s 0.000s
im_detect: 1659/4088 0.102s 0.000s
im_detect: 1660/4088 0.102s 0.000s
im_detect: 1661/4088 0.102s 0.000s
im_detect: 1662/4088 0.102s 0.000s
im_detect: 1663/4088 0.102s 0.000s
im_detect: 1664/4088 0.102s 0.000s
im_detect: 1665/4088 0.102s 0.000s
im_detect: 1666/4088 0.102s 0.000s
im_detect: 1667/4088 0.102s 0.000s
im_detect: 1668/4088 0.102s 0.000s
im_detect: 1669/4088 0.102s 0.000s
im_detect: 1670/4088 0.102s 0.000s
im_detect: 1671/4088 0.102s 0.000s
im_detect: 1672/4088 0.102s 0.000s
im_detect: 1673/4088 0.102s 0.000s
im_detect: 1674/4088 0.102s 0.000s
im_detect: 1675/4088 0.102s 0.000s
im_detect: 1676/4088 0.102s 0.000s
im_detect: 1677/4088 0.102s 0.000s
im_detect: 1678/4088 0.102s 0.000s
im_detect: 1679/4088 0.102s 0.000s
im_detect: 1680/4088 0.102s 0.000s
im_detect: 1681/4088 0.102s 0.000s
im_detect: 1682/4088 0.102s 0.000s
im_detect: 1683/4088 0.102s 0.000s
im_detect: 1684/4088 0.102s 0.000s
im_detect: 1685/4088 0.102s 0.000s
im_detect: 1686/4088 0.102s 0.000s
im_detect: 1687/4088 0.102s 0.000s
im_detect: 1688/4088 0.102s 0.000s
im_detect: 1689/4088 0.102s 0.000s
im_detect: 1690/4088 0.102s 0.000s
im_detect: 1691/4088 0.102s 0.000s
im_detect: 1692/4088 0.102s 0.000s
im_detect: 1693/4088 0.102s 0.000s
im_detect: 1694/4088 0.102s 0.000s
im_detect: 1695/4088 0.102s 0.000s
im_detect: 1696/4088 0.102s 0.000s
im_detect: 1697/4088 0.102s 0.000s
im_detect: 1698/4088 0.102s 0.000s
im_detect: 1699/4088 0.102s 0.000s
im_detect: 1700/4088 0.102s 0.000s
im_detect: 1701/4088 0.102s 0.000s
im_detect: 1702/4088 0.102s 0.000s
im_detect: 1703/4088 0.102s 0.000s
im_detect: 1704/4088 0.102s 0.000s
im_detect: 1705/4088 0.102s 0.000s
im_detect: 1706/4088 0.102s 0.000s
im_detect: 1707/4088 0.102s 0.000s
im_detect: 1708/4088 0.102s 0.000s
im_detect: 1709/4088 0.102s 0.000s
im_detect: 1710/4088 0.102s 0.000s
im_detect: 1711/4088 0.102s 0.000s
im_detect: 1712/4088 0.102s 0.000s
im_detect: 1713/4088 0.102s 0.000s
im_detect: 1714/4088 0.102s 0.000s
im_detect: 1715/4088 0.102s 0.000s
im_detect: 1716/4088 0.102s 0.000s
im_detect: 1717/4088 0.102s 0.000s
im_detect: 1718/4088 0.102s 0.000s
im_detect: 1719/4088 0.102s 0.000s
im_detect: 1720/4088 0.102s 0.000s
im_detect: 1721/4088 0.102s 0.000s
im_detect: 1722/4088 0.102s 0.000s
im_detect: 1723/4088 0.102s 0.000s
im_detect: 1724/4088 0.102s 0.000s
im_detect: 1725/4088 0.102s 0.000s
im_detect: 1726/4088 0.102s 0.000s
im_detect: 1727/4088 0.102s 0.000s
im_detect: 1728/4088 0.102s 0.000s
im_detect: 1729/4088 0.102s 0.000s
im_detect: 1730/4088 0.102s 0.000s
im_detect: 1731/4088 0.102s 0.000s
im_detect: 1732/4088 0.102s 0.000s
im_detect: 1733/4088 0.102s 0.000s
im_detect: 1734/4088 0.102s 0.000s
im_detect: 1735/4088 0.102s 0.000s
im_detect: 1736/4088 0.102s 0.000s
im_detect: 1737/4088 0.102s 0.000s
im_detect: 1738/4088 0.102s 0.000s
im_detect: 1739/4088 0.102s 0.000s
im_detect: 1740/4088 0.102s 0.000s
im_detect: 1741/4088 0.102s 0.000s
im_detect: 1742/4088 0.102s 0.000s
im_detect: 1743/4088 0.102s 0.000s
im_detect: 1744/4088 0.102s 0.000s
im_detect: 1745/4088 0.102s 0.000s
im_detect: 1746/4088 0.102s 0.000s
im_detect: 1747/4088 0.102s 0.000s
im_detect: 1748/4088 0.102s 0.000s
im_detect: 1749/4088 0.102s 0.000s
im_detect: 1750/4088 0.102s 0.000s
im_detect: 1751/4088 0.102s 0.000s
im_detect: 1752/4088 0.102s 0.000s
im_detect: 1753/4088 0.102s 0.000s
im_detect: 1754/4088 0.102s 0.000s
im_detect: 1755/4088 0.102s 0.000s
im_detect: 1756/4088 0.102s 0.000s
im_detect: 1757/4088 0.102s 0.000s
im_detect: 1758/4088 0.102s 0.000s
im_detect: 1759/4088 0.102s 0.000s
im_detect: 1760/4088 0.102s 0.000s
im_detect: 1761/4088 0.102s 0.000s
im_detect: 1762/4088 0.102s 0.000s
im_detect: 1763/4088 0.102s 0.000s
im_detect: 1764/4088 0.102s 0.000s
im_detect: 1765/4088 0.102s 0.000s
im_detect: 1766/4088 0.102s 0.000s
im_detect: 1767/4088 0.102s 0.000s
im_detect: 1768/4088 0.102s 0.000s
im_detect: 1769/4088 0.102s 0.000s
im_detect: 1770/4088 0.102s 0.000s
im_detect: 1771/4088 0.102s 0.000s
im_detect: 1772/4088 0.102s 0.000s
im_detect: 1773/4088 0.102s 0.000s
im_detect: 1774/4088 0.102s 0.000s
im_detect: 1775/4088 0.102s 0.000s
im_detect: 1776/4088 0.102s 0.000s
im_detect: 1777/4088 0.102s 0.000s
im_detect: 1778/4088 0.102s 0.000s
im_detect: 1779/4088 0.102s 0.000s
im_detect: 1780/4088 0.102s 0.000s
im_detect: 1781/4088 0.102s 0.000s
im_detect: 1782/4088 0.102s 0.000s
im_detect: 1783/4088 0.102s 0.000s
im_detect: 1784/4088 0.102s 0.000s
im_detect: 1785/4088 0.102s 0.000s
im_detect: 1786/4088 0.102s 0.000s
im_detect: 1787/4088 0.102s 0.000s
im_detect: 1788/4088 0.102s 0.000s
im_detect: 1789/4088 0.102s 0.000s
im_detect: 1790/4088 0.102s 0.000s
im_detect: 1791/4088 0.102s 0.000s
im_detect: 1792/4088 0.102s 0.000s
im_detect: 1793/4088 0.102s 0.000s
im_detect: 1794/4088 0.102s 0.000s
im_detect: 1795/4088 0.102s 0.000s
im_detect: 1796/4088 0.102s 0.000s
im_detect: 1797/4088 0.102s 0.000s
im_detect: 1798/4088 0.102s 0.000s
im_detect: 1799/4088 0.102s 0.000s
im_detect: 1800/4088 0.102s 0.000s
im_detect: 1801/4088 0.102s 0.000s
im_detect: 1802/4088 0.102s 0.000s
im_detect: 1803/4088 0.102s 0.000s
im_detect: 1804/4088 0.102s 0.000s
im_detect: 1805/4088 0.102s 0.000s
im_detect: 1806/4088 0.102s 0.000s
im_detect: 1807/4088 0.102s 0.000s
im_detect: 1808/4088 0.102s 0.000s
im_detect: 1809/4088 0.102s 0.000s
im_detect: 1810/4088 0.102s 0.000s
im_detect: 1811/4088 0.102s 0.000s
im_detect: 1812/4088 0.102s 0.000s
im_detect: 1813/4088 0.102s 0.000s
im_detect: 1814/4088 0.102s 0.000s
im_detect: 1815/4088 0.102s 0.000s
im_detect: 1816/4088 0.102s 0.000s
im_detect: 1817/4088 0.102s 0.000s
im_detect: 1818/4088 0.102s 0.000s
im_detect: 1819/4088 0.102s 0.000s
im_detect: 1820/4088 0.102s 0.000s
im_detect: 1821/4088 0.102s 0.000s
im_detect: 1822/4088 0.102s 0.000s
im_detect: 1823/4088 0.102s 0.000s
im_detect: 1824/4088 0.102s 0.000s
im_detect: 1825/4088 0.102s 0.000s
im_detect: 1826/4088 0.102s 0.000s
im_detect: 1827/4088 0.102s 0.000s
im_detect: 1828/4088 0.102s 0.000s
im_detect: 1829/4088 0.102s 0.000s
im_detect: 1830/4088 0.102s 0.000s
im_detect: 1831/4088 0.102s 0.000s
im_detect: 1832/4088 0.102s 0.000s
im_detect: 1833/4088 0.102s 0.000s
im_detect: 1834/4088 0.102s 0.000s
im_detect: 1835/4088 0.102s 0.000s
im_detect: 1836/4088 0.102s 0.000s
im_detect: 1837/4088 0.102s 0.000s
im_detect: 1838/4088 0.102s 0.000s
im_detect: 1839/4088 0.102s 0.000s
im_detect: 1840/4088 0.102s 0.000s
im_detect: 1841/4088 0.102s 0.000s
im_detect: 1842/4088 0.102s 0.000s
im_detect: 1843/4088 0.102s 0.000s
im_detect: 1844/4088 0.102s 0.000s
im_detect: 1845/4088 0.102s 0.000s
im_detect: 1846/4088 0.102s 0.000s
im_detect: 1847/4088 0.102s 0.000s
im_detect: 1848/4088 0.102s 0.000s
im_detect: 1849/4088 0.102s 0.000s
im_detect: 1850/4088 0.102s 0.000s
im_detect: 1851/4088 0.102s 0.000s
im_detect: 1852/4088 0.102s 0.000s
im_detect: 1853/4088 0.102s 0.000s
im_detect: 1854/4088 0.102s 0.000s
im_detect: 1855/4088 0.102s 0.000s
im_detect: 1856/4088 0.102s 0.000s
im_detect: 1857/4088 0.102s 0.000s
im_detect: 1858/4088 0.102s 0.000s
im_detect: 1859/4088 0.102s 0.000s
im_detect: 1860/4088 0.102s 0.000s
im_detect: 1861/4088 0.102s 0.000s
im_detect: 1862/4088 0.102s 0.000s
im_detect: 1863/4088 0.102s 0.000s
im_detect: 1864/4088 0.102s 0.000s
im_detect: 1865/4088 0.102s 0.000s
im_detect: 1866/4088 0.102s 0.000s
im_detect: 1867/4088 0.102s 0.000s
im_detect: 1868/4088 0.102s 0.000s
im_detect: 1869/4088 0.102s 0.000s
im_detect: 1870/4088 0.102s 0.000s
im_detect: 1871/4088 0.102s 0.000s
im_detect: 1872/4088 0.102s 0.000s
im_detect: 1873/4088 0.102s 0.000s
im_detect: 1874/4088 0.102s 0.000s
im_detect: 1875/4088 0.102s 0.000s
im_detect: 1876/4088 0.102s 0.000s
im_detect: 1877/4088 0.102s 0.000s
im_detect: 1878/4088 0.102s 0.000s
im_detect: 1879/4088 0.102s 0.000s
im_detect: 1880/4088 0.102s 0.000s
im_detect: 1881/4088 0.102s 0.000s
im_detect: 1882/4088 0.102s 0.000s
im_detect: 1883/4088 0.102s 0.000s
im_detect: 1884/4088 0.102s 0.000s
im_detect: 1885/4088 0.102s 0.000s
im_detect: 1886/4088 0.102s 0.000s
im_detect: 1887/4088 0.102s 0.000s
im_detect: 1888/4088 0.102s 0.000s
im_detect: 1889/4088 0.102s 0.000s
im_detect: 1890/4088 0.102s 0.000s
im_detect: 1891/4088 0.102s 0.000s
im_detect: 1892/4088 0.102s 0.000s
im_detect: 1893/4088 0.102s 0.000s
im_detect: 1894/4088 0.102s 0.000s
im_detect: 1895/4088 0.102s 0.000s
im_detect: 1896/4088 0.102s 0.000s
im_detect: 1897/4088 0.102s 0.000s
im_detect: 1898/4088 0.102s 0.000s
im_detect: 1899/4088 0.102s 0.000s
im_detect: 1900/4088 0.102s 0.000s
im_detect: 1901/4088 0.102s 0.000s
im_detect: 1902/4088 0.102s 0.000s
im_detect: 1903/4088 0.102s 0.000s
im_detect: 1904/4088 0.102s 0.000s
im_detect: 1905/4088 0.102s 0.000s
im_detect: 1906/4088 0.102s 0.000s
im_detect: 1907/4088 0.102s 0.000s
im_detect: 1908/4088 0.102s 0.000s
im_detect: 1909/4088 0.102s 0.000s
im_detect: 1910/4088 0.102s 0.000s
im_detect: 1911/4088 0.102s 0.000s
im_detect: 1912/4088 0.102s 0.000s
im_detect: 1913/4088 0.102s 0.000s
im_detect: 1914/4088 0.102s 0.000s
im_detect: 1915/4088 0.102s 0.000s
im_detect: 1916/4088 0.102s 0.000s
im_detect: 1917/4088 0.102s 0.000s
im_detect: 1918/4088 0.102s 0.000s
im_detect: 1919/4088 0.102s 0.000s
im_detect: 1920/4088 0.102s 0.000s
im_detect: 1921/4088 0.102s 0.000s
im_detect: 1922/4088 0.102s 0.000s
im_detect: 1923/4088 0.102s 0.000s
im_detect: 1924/4088 0.102s 0.000s
im_detect: 1925/4088 0.102s 0.000s
im_detect: 1926/4088 0.102s 0.000s
im_detect: 1927/4088 0.102s 0.000s
im_detect: 1928/4088 0.102s 0.000s
im_detect: 1929/4088 0.102s 0.000s
im_detect: 1930/4088 0.102s 0.000s
im_detect: 1931/4088 0.102s 0.000s
im_detect: 1932/4088 0.102s 0.000s
im_detect: 1933/4088 0.102s 0.000s
im_detect: 1934/4088 0.102s 0.000s
im_detect: 1935/4088 0.102s 0.000s
im_detect: 1936/4088 0.102s 0.000s
im_detect: 1937/4088 0.102s 0.000s
im_detect: 1938/4088 0.102s 0.000s
im_detect: 1939/4088 0.102s 0.000s
im_detect: 1940/4088 0.102s 0.000s
im_detect: 1941/4088 0.102s 0.000s
im_detect: 1942/4088 0.102s 0.000s
im_detect: 1943/4088 0.102s 0.000s
im_detect: 1944/4088 0.102s 0.000s
im_detect: 1945/4088 0.102s 0.000s
im_detect: 1946/4088 0.102s 0.000s
im_detect: 1947/4088 0.102s 0.000s
im_detect: 1948/4088 0.102s 0.000s
im_detect: 1949/4088 0.102s 0.000s
im_detect: 1950/4088 0.102s 0.000s
im_detect: 1951/4088 0.102s 0.000s
im_detect: 1952/4088 0.102s 0.000s
im_detect: 1953/4088 0.102s 0.000s
im_detect: 1954/4088 0.102s 0.000s
im_detect: 1955/4088 0.102s 0.000s
im_detect: 1956/4088 0.102s 0.000s
im_detect: 1957/4088 0.102s 0.000s
im_detect: 1958/4088 0.102s 0.000s
im_detect: 1959/4088 0.102s 0.000s
im_detect: 1960/4088 0.102s 0.000s
im_detect: 1961/4088 0.102s 0.000s
im_detect: 1962/4088 0.102s 0.000s
im_detect: 1963/4088 0.102s 0.000s
im_detect: 1964/4088 0.102s 0.000s
im_detect: 1965/4088 0.102s 0.000s
im_detect: 1966/4088 0.102s 0.000s
im_detect: 1967/4088 0.102s 0.000s
im_detect: 1968/4088 0.102s 0.000s
im_detect: 1969/4088 0.102s 0.000s
im_detect: 1970/4088 0.102s 0.000s
im_detect: 1971/4088 0.102s 0.000s
im_detect: 1972/4088 0.102s 0.000s
im_detect: 1973/4088 0.102s 0.000s
im_detect: 1974/4088 0.102s 0.000s
im_detect: 1975/4088 0.102s 0.000s
im_detect: 1976/4088 0.102s 0.000s
im_detect: 1977/4088 0.102s 0.000s
im_detect: 1978/4088 0.102s 0.000s
im_detect: 1979/4088 0.102s 0.000s
im_detect: 1980/4088 0.102s 0.000s
im_detect: 1981/4088 0.102s 0.000s
im_detect: 1982/4088 0.102s 0.000s
im_detect: 1983/4088 0.102s 0.000s
im_detect: 1984/4088 0.102s 0.000s
im_detect: 1985/4088 0.102s 0.000s
im_detect: 1986/4088 0.102s 0.000s
im_detect: 1987/4088 0.102s 0.000s
im_detect: 1988/4088 0.102s 0.000s
im_detect: 1989/4088 0.102s 0.000s
im_detect: 1990/4088 0.102s 0.000s
im_detect: 1991/4088 0.102s 0.000s
im_detect: 1992/4088 0.102s 0.000s
im_detect: 1993/4088 0.102s 0.000s
im_detect: 1994/4088 0.102s 0.000s
im_detect: 1995/4088 0.102s 0.000s
im_detect: 1996/4088 0.102s 0.000s
im_detect: 1997/4088 0.102s 0.000s
im_detect: 1998/4088 0.102s 0.000s
im_detect: 1999/4088 0.102s 0.000s
im_detect: 2000/4088 0.102s 0.000s
im_detect: 2001/4088 0.102s 0.000s
im_detect: 2002/4088 0.102s 0.000s
im_detect: 2003/4088 0.102s 0.000s
im_detect: 2004/4088 0.102s 0.000s
im_detect: 2005/4088 0.102s 0.000s
im_detect: 2006/4088 0.102s 0.000s
im_detect: 2007/4088 0.102s 0.000s
im_detect: 2008/4088 0.102s 0.000s
im_detect: 2009/4088 0.102s 0.000s
im_detect: 2010/4088 0.102s 0.000s
im_detect: 2011/4088 0.102s 0.000s
im_detect: 2012/4088 0.102s 0.000s
im_detect: 2013/4088 0.102s 0.000s
im_detect: 2014/4088 0.102s 0.000s
im_detect: 2015/4088 0.102s 0.000s
im_detect: 2016/4088 0.102s 0.000s
im_detect: 2017/4088 0.102s 0.000s
im_detect: 2018/4088 0.102s 0.000s
im_detect: 2019/4088 0.102s 0.000s
im_detect: 2020/4088 0.102s 0.000s
im_detect: 2021/4088 0.102s 0.000s
im_detect: 2022/4088 0.102s 0.000s
im_detect: 2023/4088 0.102s 0.000s
im_detect: 2024/4088 0.102s 0.000s
im_detect: 2025/4088 0.102s 0.000s
im_detect: 2026/4088 0.102s 0.000s
im_detect: 2027/4088 0.102s 0.000s
im_detect: 2028/4088 0.102s 0.000s
im_detect: 2029/4088 0.102s 0.000s
im_detect: 2030/4088 0.102s 0.000s
im_detect: 2031/4088 0.102s 0.000s
im_detect: 2032/4088 0.102s 0.000s
im_detect: 2033/4088 0.102s 0.000s
im_detect: 2034/4088 0.102s 0.000s
im_detect: 2035/4088 0.102s 0.000s
im_detect: 2036/4088 0.102s 0.000s
im_detect: 2037/4088 0.102s 0.000s
im_detect: 2038/4088 0.102s 0.000s
im_detect: 2039/4088 0.102s 0.000s
im_detect: 2040/4088 0.102s 0.000s
im_detect: 2041/4088 0.102s 0.000s
im_detect: 2042/4088 0.102s 0.000s
im_detect: 2043/4088 0.102s 0.000s
im_detect: 2044/4088 0.102s 0.000s
im_detect: 2045/4088 0.102s 0.000s
im_detect: 2046/4088 0.102s 0.000s
im_detect: 2047/4088 0.102s 0.000s
im_detect: 2048/4088 0.102s 0.000s
im_detect: 2049/4088 0.102s 0.000s
im_detect: 2050/4088 0.102s 0.000s
im_detect: 2051/4088 0.102s 0.000s
im_detect: 2052/4088 0.102s 0.000s
im_detect: 2053/4088 0.102s 0.000s
im_detect: 2054/4088 0.102s 0.000s
im_detect: 2055/4088 0.102s 0.000s
im_detect: 2056/4088 0.102s 0.000s
im_detect: 2057/4088 0.102s 0.000s
im_detect: 2058/4088 0.102s 0.000s
im_detect: 2059/4088 0.102s 0.000s
im_detect: 2060/4088 0.102s 0.000s
im_detect: 2061/4088 0.102s 0.000s
im_detect: 2062/4088 0.102s 0.000s
im_detect: 2063/4088 0.102s 0.000s
im_detect: 2064/4088 0.102s 0.000s
im_detect: 2065/4088 0.102s 0.000s
im_detect: 2066/4088 0.102s 0.000s
im_detect: 2067/4088 0.102s 0.000s
im_detect: 2068/4088 0.102s 0.000s
im_detect: 2069/4088 0.102s 0.000s
im_detect: 2070/4088 0.102s 0.000s
im_detect: 2071/4088 0.102s 0.000s
im_detect: 2072/4088 0.102s 0.000s
im_detect: 2073/4088 0.102s 0.000s
im_detect: 2074/4088 0.102s 0.000s
im_detect: 2075/4088 0.102s 0.000s
im_detect: 2076/4088 0.102s 0.000s
im_detect: 2077/4088 0.102s 0.000s
im_detect: 2078/4088 0.102s 0.000s
im_detect: 2079/4088 0.102s 0.000s
im_detect: 2080/4088 0.102s 0.000s
im_detect: 2081/4088 0.102s 0.000s
im_detect: 2082/4088 0.102s 0.000s
im_detect: 2083/4088 0.102s 0.000s
im_detect: 2084/4088 0.102s 0.000s
im_detect: 2085/4088 0.102s 0.000s
im_detect: 2086/4088 0.102s 0.000s
im_detect: 2087/4088 0.102s 0.000s
im_detect: 2088/4088 0.102s 0.000s
im_detect: 2089/4088 0.102s 0.000s
im_detect: 2090/4088 0.102s 0.000s
im_detect: 2091/4088 0.102s 0.000s
im_detect: 2092/4088 0.102s 0.000s
im_detect: 2093/4088 0.102s 0.000s
im_detect: 2094/4088 0.102s 0.000s
im_detect: 2095/4088 0.102s 0.000s
im_detect: 2096/4088 0.102s 0.000s
im_detect: 2097/4088 0.102s 0.000s
im_detect: 2098/4088 0.102s 0.000s
im_detect: 2099/4088 0.102s 0.000s
im_detect: 2100/4088 0.102s 0.000s
im_detect: 2101/4088 0.102s 0.000s
im_detect: 2102/4088 0.102s 0.000s
im_detect: 2103/4088 0.102s 0.000s
im_detect: 2104/4088 0.102s 0.000s
im_detect: 2105/4088 0.102s 0.000s
im_detect: 2106/4088 0.102s 0.000s
im_detect: 2107/4088 0.102s 0.000s
im_detect: 2108/4088 0.102s 0.000s
im_detect: 2109/4088 0.102s 0.000s
im_detect: 2110/4088 0.102s 0.000s
im_detect: 2111/4088 0.102s 0.000s
im_detect: 2112/4088 0.102s 0.000s
im_detect: 2113/4088 0.102s 0.000s
im_detect: 2114/4088 0.102s 0.000s
im_detect: 2115/4088 0.102s 0.000s
im_detect: 2116/4088 0.102s 0.000s
im_detect: 2117/4088 0.102s 0.000s
im_detect: 2118/4088 0.102s 0.000s
im_detect: 2119/4088 0.102s 0.000s
im_detect: 2120/4088 0.102s 0.000s
im_detect: 2121/4088 0.102s 0.000s
im_detect: 2122/4088 0.102s 0.000s
im_detect: 2123/4088 0.102s 0.000s
im_detect: 2124/4088 0.102s 0.000s
im_detect: 2125/4088 0.102s 0.000s
im_detect: 2126/4088 0.102s 0.000s
im_detect: 2127/4088 0.102s 0.000s
im_detect: 2128/4088 0.102s 0.000s
im_detect: 2129/4088 0.102s 0.000s
im_detect: 2130/4088 0.102s 0.000s
im_detect: 2131/4088 0.102s 0.000s
im_detect: 2132/4088 0.102s 0.000s
im_detect: 2133/4088 0.102s 0.000s
im_detect: 2134/4088 0.102s 0.000s
im_detect: 2135/4088 0.102s 0.000s
im_detect: 2136/4088 0.102s 0.000s
im_detect: 2137/4088 0.102s 0.000s
im_detect: 2138/4088 0.102s 0.000s
im_detect: 2139/4088 0.102s 0.000s
im_detect: 2140/4088 0.102s 0.000s
im_detect: 2141/4088 0.102s 0.000s
im_detect: 2142/4088 0.102s 0.000s
im_detect: 2143/4088 0.102s 0.000s
im_detect: 2144/4088 0.102s 0.000s
im_detect: 2145/4088 0.102s 0.000s
im_detect: 2146/4088 0.102s 0.000s
im_detect: 2147/4088 0.102s 0.000s
im_detect: 2148/4088 0.102s 0.000s
im_detect: 2149/4088 0.102s 0.000s
im_detect: 2150/4088 0.102s 0.000s
im_detect: 2151/4088 0.102s 0.000s
im_detect: 2152/4088 0.102s 0.000s
im_detect: 2153/4088 0.102s 0.000s
im_detect: 2154/4088 0.102s 0.000s
im_detect: 2155/4088 0.102s 0.000s
im_detect: 2156/4088 0.102s 0.000s
im_detect: 2157/4088 0.102s 0.000s
im_detect: 2158/4088 0.102s 0.000s
im_detect: 2159/4088 0.102s 0.000s
im_detect: 2160/4088 0.102s 0.000s
im_detect: 2161/4088 0.102s 0.000s
im_detect: 2162/4088 0.102s 0.000s
im_detect: 2163/4088 0.102s 0.000s
im_detect: 2164/4088 0.102s 0.000s
im_detect: 2165/4088 0.102s 0.000s
im_detect: 2166/4088 0.102s 0.000s
im_detect: 2167/4088 0.102s 0.000s
im_detect: 2168/4088 0.102s 0.000s
im_detect: 2169/4088 0.102s 0.000s
im_detect: 2170/4088 0.102s 0.000s
im_detect: 2171/4088 0.102s 0.000s
im_detect: 2172/4088 0.102s 0.000s
im_detect: 2173/4088 0.102s 0.000s
im_detect: 2174/4088 0.102s 0.000s
im_detect: 2175/4088 0.102s 0.000s
im_detect: 2176/4088 0.102s 0.000s
im_detect: 2177/4088 0.102s 0.000s
im_detect: 2178/4088 0.102s 0.000s
im_detect: 2179/4088 0.102s 0.000s
im_detect: 2180/4088 0.102s 0.000s
im_detect: 2181/4088 0.102s 0.000s
im_detect: 2182/4088 0.102s 0.000s
im_detect: 2183/4088 0.102s 0.000s
im_detect: 2184/4088 0.102s 0.000s
im_detect: 2185/4088 0.102s 0.000s
im_detect: 2186/4088 0.102s 0.000s
im_detect: 2187/4088 0.102s 0.000s
im_detect: 2188/4088 0.102s 0.000s
im_detect: 2189/4088 0.102s 0.000s
im_detect: 2190/4088 0.102s 0.000s
im_detect: 2191/4088 0.102s 0.000s
im_detect: 2192/4088 0.102s 0.000s
im_detect: 2193/4088 0.102s 0.000s
im_detect: 2194/4088 0.102s 0.000s
im_detect: 2195/4088 0.102s 0.000s
im_detect: 2196/4088 0.102s 0.000s
im_detect: 2197/4088 0.102s 0.000s
im_detect: 2198/4088 0.102s 0.000s
im_detect: 2199/4088 0.102s 0.000s
im_detect: 2200/4088 0.102s 0.000s
im_detect: 2201/4088 0.102s 0.000s
im_detect: 2202/4088 0.102s 0.000s
im_detect: 2203/4088 0.102s 0.000s
im_detect: 2204/4088 0.102s 0.000s
im_detect: 2205/4088 0.102s 0.000s
im_detect: 2206/4088 0.102s 0.000s
im_detect: 2207/4088 0.102s 0.000s
im_detect: 2208/4088 0.102s 0.000s
im_detect: 2209/4088 0.102s 0.000s
im_detect: 2210/4088 0.102s 0.000s
im_detect: 2211/4088 0.102s 0.000s
im_detect: 2212/4088 0.102s 0.000s
im_detect: 2213/4088 0.102s 0.000s
im_detect: 2214/4088 0.102s 0.000s
im_detect: 2215/4088 0.102s 0.000s
im_detect: 2216/4088 0.102s 0.000s
im_detect: 2217/4088 0.102s 0.000s
im_detect: 2218/4088 0.102s 0.000s
im_detect: 2219/4088 0.102s 0.000s
im_detect: 2220/4088 0.102s 0.000s
im_detect: 2221/4088 0.102s 0.000s
im_detect: 2222/4088 0.102s 0.000s
im_detect: 2223/4088 0.102s 0.000s
im_detect: 2224/4088 0.102s 0.000s
im_detect: 2225/4088 0.102s 0.000s
im_detect: 2226/4088 0.102s 0.000s
im_detect: 2227/4088 0.102s 0.000s
im_detect: 2228/4088 0.102s 0.000s
im_detect: 2229/4088 0.102s 0.000s
im_detect: 2230/4088 0.102s 0.000s
im_detect: 2231/4088 0.102s 0.000s
im_detect: 2232/4088 0.102s 0.000s
im_detect: 2233/4088 0.102s 0.000s
im_detect: 2234/4088 0.102s 0.000s
im_detect: 2235/4088 0.102s 0.000s
im_detect: 2236/4088 0.102s 0.000s
im_detect: 2237/4088 0.102s 0.000s
im_detect: 2238/4088 0.102s 0.000s
im_detect: 2239/4088 0.102s 0.000s
im_detect: 2240/4088 0.102s 0.000s
im_detect: 2241/4088 0.102s 0.000s
im_detect: 2242/4088 0.102s 0.000s
im_detect: 2243/4088 0.102s 0.000s
im_detect: 2244/4088 0.102s 0.000s
im_detect: 2245/4088 0.102s 0.000s
im_detect: 2246/4088 0.102s 0.000s
im_detect: 2247/4088 0.102s 0.000s
im_detect: 2248/4088 0.102s 0.000s
im_detect: 2249/4088 0.102s 0.000s
im_detect: 2250/4088 0.102s 0.000s
im_detect: 2251/4088 0.102s 0.000s
im_detect: 2252/4088 0.102s 0.000s
im_detect: 2253/4088 0.102s 0.000s
im_detect: 2254/4088 0.102s 0.000s
im_detect: 2255/4088 0.102s 0.000s
im_detect: 2256/4088 0.102s 0.000s
im_detect: 2257/4088 0.102s 0.000s
im_detect: 2258/4088 0.102s 0.000s
im_detect: 2259/4088 0.102s 0.000s
im_detect: 2260/4088 0.102s 0.000s
im_detect: 2261/4088 0.102s 0.000s
im_detect: 2262/4088 0.102s 0.000s
im_detect: 2263/4088 0.102s 0.000s
im_detect: 2264/4088 0.102s 0.000s
im_detect: 2265/4088 0.102s 0.000s
im_detect: 2266/4088 0.102s 0.000s
im_detect: 2267/4088 0.102s 0.000s
im_detect: 2268/4088 0.102s 0.000s
im_detect: 2269/4088 0.102s 0.000s
im_detect: 2270/4088 0.102s 0.000s
im_detect: 2271/4088 0.102s 0.000s
im_detect: 2272/4088 0.102s 0.000s
im_detect: 2273/4088 0.102s 0.000s
im_detect: 2274/4088 0.102s 0.000s
im_detect: 2275/4088 0.102s 0.000s
im_detect: 2276/4088 0.102s 0.000s
im_detect: 2277/4088 0.102s 0.000s
im_detect: 2278/4088 0.102s 0.000s
im_detect: 2279/4088 0.102s 0.000s
im_detect: 2280/4088 0.102s 0.000s
im_detect: 2281/4088 0.102s 0.000s
im_detect: 2282/4088 0.102s 0.000s
im_detect: 2283/4088 0.102s 0.000s
im_detect: 2284/4088 0.102s 0.000s
im_detect: 2285/4088 0.102s 0.000s
im_detect: 2286/4088 0.102s 0.000s
im_detect: 2287/4088 0.102s 0.000s
im_detect: 2288/4088 0.102s 0.000s
im_detect: 2289/4088 0.102s 0.000s
im_detect: 2290/4088 0.102s 0.000s
im_detect: 2291/4088 0.102s 0.000s
im_detect: 2292/4088 0.102s 0.000s
im_detect: 2293/4088 0.102s 0.000s
im_detect: 2294/4088 0.102s 0.000s
im_detect: 2295/4088 0.102s 0.000s
im_detect: 2296/4088 0.102s 0.000s
im_detect: 2297/4088 0.102s 0.000s
im_detect: 2298/4088 0.102s 0.000s
im_detect: 2299/4088 0.102s 0.000s
im_detect: 2300/4088 0.102s 0.000s
im_detect: 2301/4088 0.102s 0.000s
im_detect: 2302/4088 0.102s 0.000s
im_detect: 2303/4088 0.102s 0.000s
im_detect: 2304/4088 0.102s 0.000s
im_detect: 2305/4088 0.102s 0.000s
im_detect: 2306/4088 0.102s 0.000s
im_detect: 2307/4088 0.102s 0.000s
im_detect: 2308/4088 0.102s 0.000s
im_detect: 2309/4088 0.102s 0.000s
im_detect: 2310/4088 0.102s 0.000s
im_detect: 2311/4088 0.102s 0.000s
im_detect: 2312/4088 0.102s 0.000s
im_detect: 2313/4088 0.102s 0.000s
im_detect: 2314/4088 0.102s 0.000s
im_detect: 2315/4088 0.102s 0.000s
im_detect: 2316/4088 0.102s 0.000s
im_detect: 2317/4088 0.102s 0.000s
im_detect: 2318/4088 0.102s 0.000s
im_detect: 2319/4088 0.102s 0.000s
im_detect: 2320/4088 0.102s 0.000s
im_detect: 2321/4088 0.102s 0.000s
im_detect: 2322/4088 0.102s 0.000s
im_detect: 2323/4088 0.102s 0.000s
im_detect: 2324/4088 0.102s 0.000s
im_detect: 2325/4088 0.102s 0.000s
im_detect: 2326/4088 0.102s 0.000s
im_detect: 2327/4088 0.102s 0.000s
im_detect: 2328/4088 0.102s 0.000s
im_detect: 2329/4088 0.102s 0.000s
im_detect: 2330/4088 0.102s 0.000s
im_detect: 2331/4088 0.102s 0.000s
im_detect: 2332/4088 0.102s 0.000s
im_detect: 2333/4088 0.102s 0.000s
im_detect: 2334/4088 0.102s 0.000s
im_detect: 2335/4088 0.102s 0.000s
im_detect: 2336/4088 0.102s 0.000s
im_detect: 2337/4088 0.102s 0.000s
im_detect: 2338/4088 0.102s 0.000s
im_detect: 2339/4088 0.102s 0.000s
im_detect: 2340/4088 0.102s 0.000s
im_detect: 2341/4088 0.102s 0.000s
im_detect: 2342/4088 0.102s 0.000s
im_detect: 2343/4088 0.102s 0.000s
im_detect: 2344/4088 0.102s 0.000s
im_detect: 2345/4088 0.102s 0.000s
im_detect: 2346/4088 0.102s 0.000s
im_detect: 2347/4088 0.102s 0.000s
im_detect: 2348/4088 0.102s 0.000s
im_detect: 2349/4088 0.102s 0.000s
im_detect: 2350/4088 0.102s 0.000s
im_detect: 2351/4088 0.102s 0.000s
im_detect: 2352/4088 0.102s 0.000s
im_detect: 2353/4088 0.102s 0.000s
im_detect: 2354/4088 0.102s 0.000s
im_detect: 2355/4088 0.102s 0.000s
im_detect: 2356/4088 0.102s 0.000s
im_detect: 2357/4088 0.102s 0.000s
im_detect: 2358/4088 0.102s 0.000s
im_detect: 2359/4088 0.102s 0.000s
im_detect: 2360/4088 0.102s 0.000s
im_detect: 2361/4088 0.102s 0.000s
im_detect: 2362/4088 0.102s 0.000s
im_detect: 2363/4088 0.102s 0.000s
im_detect: 2364/4088 0.102s 0.000s
im_detect: 2365/4088 0.102s 0.000s
im_detect: 2366/4088 0.102s 0.000s
im_detect: 2367/4088 0.102s 0.000s
im_detect: 2368/4088 0.102s 0.000s
im_detect: 2369/4088 0.102s 0.000s
im_detect: 2370/4088 0.102s 0.000s
im_detect: 2371/4088 0.102s 0.000s
im_detect: 2372/4088 0.102s 0.000s
im_detect: 2373/4088 0.102s 0.000s
im_detect: 2374/4088 0.102s 0.000s
im_detect: 2375/4088 0.102s 0.000s
im_detect: 2376/4088 0.102s 0.000s
im_detect: 2377/4088 0.102s 0.000s
im_detect: 2378/4088 0.102s 0.000s
im_detect: 2379/4088 0.102s 0.000s
im_detect: 2380/4088 0.102s 0.000s
im_detect: 2381/4088 0.102s 0.000s
im_detect: 2382/4088 0.102s 0.000s
im_detect: 2383/4088 0.102s 0.000s
im_detect: 2384/4088 0.102s 0.000s
im_detect: 2385/4088 0.102s 0.000s
im_detect: 2386/4088 0.102s 0.000s
im_detect: 2387/4088 0.102s 0.000s
im_detect: 2388/4088 0.102s 0.000s
im_detect: 2389/4088 0.102s 0.000s
im_detect: 2390/4088 0.102s 0.000s
im_detect: 2391/4088 0.102s 0.000s
im_detect: 2392/4088 0.102s 0.000s
im_detect: 2393/4088 0.102s 0.000s
im_detect: 2394/4088 0.102s 0.000s
im_detect: 2395/4088 0.102s 0.000s
im_detect: 2396/4088 0.102s 0.000s
im_detect: 2397/4088 0.102s 0.000s
im_detect: 2398/4088 0.102s 0.000s
im_detect: 2399/4088 0.102s 0.000s
im_detect: 2400/4088 0.102s 0.000s
im_detect: 2401/4088 0.102s 0.000s
im_detect: 2402/4088 0.102s 0.000s
im_detect: 2403/4088 0.102s 0.000s
im_detect: 2404/4088 0.102s 0.000s
im_detect: 2405/4088 0.102s 0.000s
im_detect: 2406/4088 0.102s 0.000s
im_detect: 2407/4088 0.102s 0.000s
im_detect: 2408/4088 0.102s 0.000s
im_detect: 2409/4088 0.102s 0.000s
im_detect: 2410/4088 0.102s 0.000s
im_detect: 2411/4088 0.102s 0.000s
im_detect: 2412/4088 0.102s 0.000s
im_detect: 2413/4088 0.102s 0.000s
im_detect: 2414/4088 0.102s 0.000s
im_detect: 2415/4088 0.102s 0.000s
im_detect: 2416/4088 0.102s 0.000s
im_detect: 2417/4088 0.102s 0.000s
im_detect: 2418/4088 0.102s 0.000s
im_detect: 2419/4088 0.102s 0.000s
im_detect: 2420/4088 0.102s 0.000s
im_detect: 2421/4088 0.102s 0.000s
im_detect: 2422/4088 0.102s 0.000s
im_detect: 2423/4088 0.102s 0.000s
im_detect: 2424/4088 0.102s 0.000s
im_detect: 2425/4088 0.102s 0.000s
im_detect: 2426/4088 0.102s 0.000s
im_detect: 2427/4088 0.102s 0.000s
im_detect: 2428/4088 0.102s 0.000s
im_detect: 2429/4088 0.102s 0.000s
im_detect: 2430/4088 0.102s 0.000s
im_detect: 2431/4088 0.102s 0.000s
im_detect: 2432/4088 0.102s 0.000s
im_detect: 2433/4088 0.102s 0.000s
im_detect: 2434/4088 0.102s 0.000s
im_detect: 2435/4088 0.102s 0.000s
im_detect: 2436/4088 0.102s 0.000s
im_detect: 2437/4088 0.102s 0.000s
im_detect: 2438/4088 0.102s 0.000s
im_detect: 2439/4088 0.102s 0.000s
im_detect: 2440/4088 0.102s 0.000s
im_detect: 2441/4088 0.102s 0.000s
im_detect: 2442/4088 0.102s 0.000s
im_detect: 2443/4088 0.102s 0.000s
im_detect: 2444/4088 0.102s 0.000s
im_detect: 2445/4088 0.102s 0.000s
im_detect: 2446/4088 0.102s 0.000s
im_detect: 2447/4088 0.102s 0.000s
im_detect: 2448/4088 0.102s 0.000s
im_detect: 2449/4088 0.102s 0.000s
im_detect: 2450/4088 0.102s 0.000s
im_detect: 2451/4088 0.102s 0.000s
im_detect: 2452/4088 0.102s 0.000s
im_detect: 2453/4088 0.102s 0.000s
im_detect: 2454/4088 0.102s 0.000s
im_detect: 2455/4088 0.102s 0.000s
im_detect: 2456/4088 0.102s 0.000s
im_detect: 2457/4088 0.102s 0.000s
im_detect: 2458/4088 0.102s 0.000s
im_detect: 2459/4088 0.102s 0.000s
im_detect: 2460/4088 0.102s 0.000s
im_detect: 2461/4088 0.102s 0.000s
im_detect: 2462/4088 0.102s 0.000s
im_detect: 2463/4088 0.102s 0.000s
im_detect: 2464/4088 0.102s 0.000s
im_detect: 2465/4088 0.102s 0.000s
im_detect: 2466/4088 0.102s 0.000s
im_detect: 2467/4088 0.102s 0.000s
im_detect: 2468/4088 0.102s 0.000s
im_detect: 2469/4088 0.102s 0.000s
im_detect: 2470/4088 0.102s 0.000s
im_detect: 2471/4088 0.102s 0.000s
im_detect: 2472/4088 0.102s 0.000s
im_detect: 2473/4088 0.102s 0.000s
im_detect: 2474/4088 0.102s 0.000s
im_detect: 2475/4088 0.102s 0.000s
im_detect: 2476/4088 0.102s 0.000s
im_detect: 2477/4088 0.102s 0.000s
im_detect: 2478/4088 0.102s 0.000s
im_detect: 2479/4088 0.102s 0.000s
im_detect: 2480/4088 0.102s 0.000s
im_detect: 2481/4088 0.102s 0.000s
im_detect: 2482/4088 0.102s 0.000s
im_detect: 2483/4088 0.102s 0.000s
im_detect: 2484/4088 0.102s 0.000s
im_detect: 2485/4088 0.102s 0.000s
im_detect: 2486/4088 0.102s 0.000s
im_detect: 2487/4088 0.102s 0.000s
im_detect: 2488/4088 0.102s 0.000s
im_detect: 2489/4088 0.102s 0.000s
im_detect: 2490/4088 0.102s 0.000s
im_detect: 2491/4088 0.102s 0.000s
im_detect: 2492/4088 0.102s 0.000s
im_detect: 2493/4088 0.102s 0.000s
im_detect: 2494/4088 0.102s 0.000s
im_detect: 2495/4088 0.102s 0.000s
im_detect: 2496/4088 0.102s 0.000s
im_detect: 2497/4088 0.102s 0.000s
im_detect: 2498/4088 0.102s 0.000s
im_detect: 2499/4088 0.102s 0.000s
im_detect: 2500/4088 0.102s 0.000s
im_detect: 2501/4088 0.102s 0.000s
im_detect: 2502/4088 0.102s 0.000s
im_detect: 2503/4088 0.102s 0.000s
im_detect: 2504/4088 0.102s 0.000s
im_detect: 2505/4088 0.102s 0.000s
im_detect: 2506/4088 0.102s 0.000s
im_detect: 2507/4088 0.102s 0.000s
im_detect: 2508/4088 0.102s 0.000s
im_detect: 2509/4088 0.102s 0.000s
im_detect: 2510/4088 0.102s 0.000s
im_detect: 2511/4088 0.102s 0.000s
im_detect: 2512/4088 0.102s 0.000s
im_detect: 2513/4088 0.102s 0.000s
im_detect: 2514/4088 0.102s 0.000s
im_detect: 2515/4088 0.102s 0.000s
im_detect: 2516/4088 0.102s 0.000s
im_detect: 2517/4088 0.102s 0.000s
im_detect: 2518/4088 0.102s 0.000s
im_detect: 2519/4088 0.102s 0.000s
im_detect: 2520/4088 0.102s 0.000s
im_detect: 2521/4088 0.102s 0.000s
im_detect: 2522/4088 0.102s 0.000s
im_detect: 2523/4088 0.102s 0.000s
im_detect: 2524/4088 0.102s 0.000s
im_detect: 2525/4088 0.102s 0.000s
im_detect: 2526/4088 0.102s 0.000s
im_detect: 2527/4088 0.102s 0.000s
im_detect: 2528/4088 0.102s 0.000s
im_detect: 2529/4088 0.102s 0.000s
im_detect: 2530/4088 0.102s 0.000s
im_detect: 2531/4088 0.102s 0.000s
im_detect: 2532/4088 0.102s 0.000s
im_detect: 2533/4088 0.102s 0.000s
im_detect: 2534/4088 0.102s 0.000s
im_detect: 2535/4088 0.102s 0.000s
im_detect: 2536/4088 0.102s 0.000s
im_detect: 2537/4088 0.102s 0.000s
im_detect: 2538/4088 0.102s 0.000s
im_detect: 2539/4088 0.102s 0.000s
im_detect: 2540/4088 0.102s 0.000s
im_detect: 2541/4088 0.102s 0.000s
im_detect: 2542/4088 0.102s 0.000s
im_detect: 2543/4088 0.102s 0.000s
im_detect: 2544/4088 0.102s 0.000s
im_detect: 2545/4088 0.102s 0.000s
im_detect: 2546/4088 0.102s 0.000s
im_detect: 2547/4088 0.102s 0.000s
im_detect: 2548/4088 0.102s 0.000s
im_detect: 2549/4088 0.102s 0.000s
im_detect: 2550/4088 0.102s 0.000s
im_detect: 2551/4088 0.102s 0.000s
im_detect: 2552/4088 0.102s 0.000s
im_detect: 2553/4088 0.102s 0.000s
im_detect: 2554/4088 0.102s 0.000s
im_detect: 2555/4088 0.102s 0.000s
im_detect: 2556/4088 0.102s 0.000s
im_detect: 2557/4088 0.102s 0.000s
im_detect: 2558/4088 0.102s 0.000s
im_detect: 2559/4088 0.102s 0.000s
im_detect: 2560/4088 0.102s 0.000s
im_detect: 2561/4088 0.102s 0.000s
im_detect: 2562/4088 0.102s 0.000s
im_detect: 2563/4088 0.102s 0.000s
im_detect: 2564/4088 0.102s 0.000s
im_detect: 2565/4088 0.102s 0.000s
im_detect: 2566/4088 0.102s 0.000s
im_detect: 2567/4088 0.102s 0.000s
im_detect: 2568/4088 0.102s 0.000s
im_detect: 2569/4088 0.102s 0.000s
im_detect: 2570/4088 0.102s 0.000s
im_detect: 2571/4088 0.102s 0.000s
im_detect: 2572/4088 0.102s 0.000s
im_detect: 2573/4088 0.102s 0.000s
im_detect: 2574/4088 0.102s 0.000s
im_detect: 2575/4088 0.102s 0.000s
im_detect: 2576/4088 0.102s 0.000s
im_detect: 2577/4088 0.102s 0.000s
im_detect: 2578/4088 0.102s 0.000s
im_detect: 2579/4088 0.102s 0.000s
im_detect: 2580/4088 0.102s 0.000s
im_detect: 2581/4088 0.102s 0.000s
im_detect: 2582/4088 0.102s 0.000s
im_detect: 2583/4088 0.102s 0.000s
im_detect: 2584/4088 0.102s 0.000s
im_detect: 2585/4088 0.102s 0.000s
im_detect: 2586/4088 0.102s 0.000s
im_detect: 2587/4088 0.102s 0.000s
im_detect: 2588/4088 0.102s 0.000s
im_detect: 2589/4088 0.102s 0.000s
im_detect: 2590/4088 0.102s 0.000s
im_detect: 2591/4088 0.102s 0.000s
im_detect: 2592/4088 0.102s 0.000s
im_detect: 2593/4088 0.102s 0.000s
im_detect: 2594/4088 0.102s 0.000s
im_detect: 2595/4088 0.102s 0.000s
im_detect: 2596/4088 0.102s 0.000s
im_detect: 2597/4088 0.102s 0.000s
im_detect: 2598/4088 0.102s 0.000s
im_detect: 2599/4088 0.102s 0.000s
im_detect: 2600/4088 0.102s 0.000s
im_detect: 2601/4088 0.102s 0.000s
im_detect: 2602/4088 0.102s 0.000s
im_detect: 2603/4088 0.102s 0.000s
im_detect: 2604/4088 0.102s 0.000s
im_detect: 2605/4088 0.102s 0.000s
im_detect: 2606/4088 0.102s 0.000s
im_detect: 2607/4088 0.102s 0.000s
im_detect: 2608/4088 0.102s 0.000s
im_detect: 2609/4088 0.102s 0.000s
im_detect: 2610/4088 0.102s 0.000s
im_detect: 2611/4088 0.102s 0.000s
im_detect: 2612/4088 0.102s 0.000s
im_detect: 2613/4088 0.102s 0.000s
im_detect: 2614/4088 0.102s 0.000s
im_detect: 2615/4088 0.102s 0.000s
im_detect: 2616/4088 0.102s 0.000s
im_detect: 2617/4088 0.102s 0.000s
im_detect: 2618/4088 0.102s 0.000s
im_detect: 2619/4088 0.102s 0.000s
im_detect: 2620/4088 0.102s 0.000s
im_detect: 2621/4088 0.102s 0.000s
im_detect: 2622/4088 0.102s 0.000s
im_detect: 2623/4088 0.102s 0.000s
im_detect: 2624/4088 0.102s 0.000s
im_detect: 2625/4088 0.102s 0.000s
im_detect: 2626/4088 0.102s 0.000s
im_detect: 2627/4088 0.102s 0.000s
im_detect: 2628/4088 0.102s 0.000s
im_detect: 2629/4088 0.102s 0.000s
im_detect: 2630/4088 0.102s 0.000s
im_detect: 2631/4088 0.102s 0.000s
im_detect: 2632/4088 0.102s 0.000s
im_detect: 2633/4088 0.102s 0.000s
im_detect: 2634/4088 0.102s 0.000s
im_detect: 2635/4088 0.102s 0.000s
im_detect: 2636/4088 0.102s 0.000s
im_detect: 2637/4088 0.102s 0.000s
im_detect: 2638/4088 0.102s 0.000s
im_detect: 2639/4088 0.102s 0.000s
im_detect: 2640/4088 0.102s 0.000s
im_detect: 2641/4088 0.102s 0.000s
im_detect: 2642/4088 0.102s 0.000s
im_detect: 2643/4088 0.102s 0.000s
im_detect: 2644/4088 0.102s 0.000s
im_detect: 2645/4088 0.102s 0.000s
im_detect: 2646/4088 0.102s 0.000s
im_detect: 2647/4088 0.102s 0.000s
im_detect: 2648/4088 0.102s 0.000s
im_detect: 2649/4088 0.102s 0.000s
im_detect: 2650/4088 0.102s 0.000s
im_detect: 2651/4088 0.102s 0.000s
im_detect: 2652/4088 0.102s 0.000s
im_detect: 2653/4088 0.102s 0.000s
im_detect: 2654/4088 0.102s 0.000s
im_detect: 2655/4088 0.102s 0.000s
im_detect: 2656/4088 0.102s 0.000s
im_detect: 2657/4088 0.102s 0.000s
im_detect: 2658/4088 0.102s 0.000s
im_detect: 2659/4088 0.102s 0.000s
im_detect: 2660/4088 0.102s 0.000s
im_detect: 2661/4088 0.102s 0.000s
im_detect: 2662/4088 0.102s 0.000s
im_detect: 2663/4088 0.102s 0.000s
im_detect: 2664/4088 0.102s 0.000s
im_detect: 2665/4088 0.102s 0.000s
im_detect: 2666/4088 0.102s 0.000s
im_detect: 2667/4088 0.102s 0.000s
im_detect: 2668/4088 0.102s 0.000s
im_detect: 2669/4088 0.102s 0.000s
im_detect: 2670/4088 0.102s 0.000s
im_detect: 2671/4088 0.102s 0.000s
im_detect: 2672/4088 0.102s 0.000s
im_detect: 2673/4088 0.102s 0.000s
im_detect: 2674/4088 0.102s 0.000s
im_detect: 2675/4088 0.102s 0.000s
im_detect: 2676/4088 0.102s 0.000s
im_detect: 2677/4088 0.102s 0.000s
im_detect: 2678/4088 0.102s 0.000s
im_detect: 2679/4088 0.102s 0.000s
im_detect: 2680/4088 0.102s 0.000s
im_detect: 2681/4088 0.102s 0.000s
im_detect: 2682/4088 0.102s 0.000s
im_detect: 2683/4088 0.102s 0.000s
im_detect: 2684/4088 0.102s 0.000s
im_detect: 2685/4088 0.102s 0.000s
im_detect: 2686/4088 0.102s 0.000s
im_detect: 2687/4088 0.102s 0.000s
im_detect: 2688/4088 0.102s 0.000s
im_detect: 2689/4088 0.102s 0.000s
im_detect: 2690/4088 0.102s 0.000s
im_detect: 2691/4088 0.102s 0.000s
im_detect: 2692/4088 0.102s 0.000s
im_detect: 2693/4088 0.102s 0.000s
im_detect: 2694/4088 0.102s 0.000s
im_detect: 2695/4088 0.102s 0.000s
im_detect: 2696/4088 0.102s 0.000s
im_detect: 2697/4088 0.102s 0.000s
im_detect: 2698/4088 0.102s 0.000s
im_detect: 2699/4088 0.102s 0.000s
im_detect: 2700/4088 0.102s 0.000s
im_detect: 2701/4088 0.102s 0.000s
im_detect: 2702/4088 0.102s 0.000s
im_detect: 2703/4088 0.102s 0.000s
im_detect: 2704/4088 0.102s 0.000s
im_detect: 2705/4088 0.102s 0.000s
im_detect: 2706/4088 0.102s 0.000s
im_detect: 2707/4088 0.102s 0.000s
im_detect: 2708/4088 0.102s 0.000s
im_detect: 2709/4088 0.102s 0.000s
im_detect: 2710/4088 0.102s 0.000s
im_detect: 2711/4088 0.102s 0.000s
im_detect: 2712/4088 0.102s 0.000s
im_detect: 2713/4088 0.102s 0.000s
im_detect: 2714/4088 0.102s 0.000s
im_detect: 2715/4088 0.102s 0.000s
im_detect: 2716/4088 0.102s 0.000s
im_detect: 2717/4088 0.102s 0.000s
im_detect: 2718/4088 0.102s 0.000s
im_detect: 2719/4088 0.102s 0.000s
im_detect: 2720/4088 0.102s 0.000s
im_detect: 2721/4088 0.102s 0.000s
im_detect: 2722/4088 0.102s 0.000s
im_detect: 2723/4088 0.102s 0.000s
im_detect: 2724/4088 0.102s 0.000s
im_detect: 2725/4088 0.102s 0.000s
im_detect: 2726/4088 0.102s 0.000s
im_detect: 2727/4088 0.102s 0.000s
im_detect: 2728/4088 0.102s 0.000s
im_detect: 2729/4088 0.102s 0.000s
im_detect: 2730/4088 0.102s 0.000s
im_detect: 2731/4088 0.102s 0.000s
im_detect: 2732/4088 0.102s 0.000s
im_detect: 2733/4088 0.102s 0.000s
im_detect: 2734/4088 0.102s 0.000s
im_detect: 2735/4088 0.102s 0.000s
im_detect: 2736/4088 0.102s 0.000s
im_detect: 2737/4088 0.102s 0.000s
im_detect: 2738/4088 0.102s 0.000s
im_detect: 2739/4088 0.102s 0.000s
im_detect: 2740/4088 0.102s 0.000s
im_detect: 2741/4088 0.102s 0.000s
im_detect: 2742/4088 0.102s 0.000s
im_detect: 2743/4088 0.102s 0.000s
im_detect: 2744/4088 0.102s 0.000s
im_detect: 2745/4088 0.102s 0.000s
im_detect: 2746/4088 0.102s 0.000s
im_detect: 2747/4088 0.102s 0.000s
im_detect: 2748/4088 0.102s 0.000s
im_detect: 2749/4088 0.102s 0.000s
im_detect: 2750/4088 0.102s 0.000s
im_detect: 2751/4088 0.102s 0.000s
im_detect: 2752/4088 0.102s 0.000s
im_detect: 2753/4088 0.102s 0.000s
im_detect: 2754/4088 0.102s 0.000s
im_detect: 2755/4088 0.102s 0.000s
im_detect: 2756/4088 0.102s 0.000s
im_detect: 2757/4088 0.102s 0.000s
im_detect: 2758/4088 0.102s 0.000s
im_detect: 2759/4088 0.102s 0.000s
im_detect: 2760/4088 0.102s 0.000s
im_detect: 2761/4088 0.102s 0.000s
im_detect: 2762/4088 0.102s 0.000s
im_detect: 2763/4088 0.102s 0.000s
im_detect: 2764/4088 0.102s 0.000s
im_detect: 2765/4088 0.102s 0.000s
im_detect: 2766/4088 0.102s 0.000s
im_detect: 2767/4088 0.102s 0.000s
im_detect: 2768/4088 0.102s 0.000s
im_detect: 2769/4088 0.102s 0.000s
im_detect: 2770/4088 0.102s 0.000s
im_detect: 2771/4088 0.102s 0.000s
im_detect: 2772/4088 0.102s 0.000s
im_detect: 2773/4088 0.102s 0.000s
im_detect: 2774/4088 0.102s 0.000s
im_detect: 2775/4088 0.102s 0.000s
im_detect: 2776/4088 0.102s 0.000s
im_detect: 2777/4088 0.102s 0.000s
im_detect: 2778/4088 0.102s 0.000s
im_detect: 2779/4088 0.102s 0.000s
im_detect: 2780/4088 0.102s 0.000s
im_detect: 2781/4088 0.102s 0.000s
im_detect: 2782/4088 0.102s 0.000s
im_detect: 2783/4088 0.102s 0.000s
im_detect: 2784/4088 0.102s 0.000s
im_detect: 2785/4088 0.102s 0.000s
im_detect: 2786/4088 0.102s 0.000s
im_detect: 2787/4088 0.102s 0.000s
im_detect: 2788/4088 0.102s 0.000s
im_detect: 2789/4088 0.102s 0.000s
im_detect: 2790/4088 0.102s 0.000s
im_detect: 2791/4088 0.102s 0.000s
im_detect: 2792/4088 0.102s 0.000s
im_detect: 2793/4088 0.102s 0.000s
im_detect: 2794/4088 0.102s 0.000s
im_detect: 2795/4088 0.102s 0.000s
im_detect: 2796/4088 0.102s 0.000s
im_detect: 2797/4088 0.102s 0.000s
im_detect: 2798/4088 0.102s 0.000s
im_detect: 2799/4088 0.102s 0.000s
im_detect: 2800/4088 0.102s 0.000s
im_detect: 2801/4088 0.102s 0.000s
im_detect: 2802/4088 0.102s 0.000s
im_detect: 2803/4088 0.102s 0.000s
im_detect: 2804/4088 0.102s 0.000s
im_detect: 2805/4088 0.102s 0.000s
im_detect: 2806/4088 0.102s 0.000s
im_detect: 2807/4088 0.102s 0.000s
im_detect: 2808/4088 0.102s 0.000s
im_detect: 2809/4088 0.102s 0.000s
im_detect: 2810/4088 0.102s 0.000s
im_detect: 2811/4088 0.102s 0.000s
im_detect: 2812/4088 0.102s 0.000s
im_detect: 2813/4088 0.102s 0.000s
im_detect: 2814/4088 0.102s 0.000s
im_detect: 2815/4088 0.102s 0.000s
im_detect: 2816/4088 0.102s 0.000s
im_detect: 2817/4088 0.102s 0.000s
im_detect: 2818/4088 0.102s 0.000s
im_detect: 2819/4088 0.102s 0.000s
im_detect: 2820/4088 0.102s 0.000s
im_detect: 2821/4088 0.102s 0.000s
im_detect: 2822/4088 0.102s 0.000s
im_detect: 2823/4088 0.102s 0.000s
im_detect: 2824/4088 0.102s 0.000s
im_detect: 2825/4088 0.102s 0.000s
im_detect: 2826/4088 0.102s 0.000s
im_detect: 2827/4088 0.102s 0.000s
im_detect: 2828/4088 0.102s 0.000s
im_detect: 2829/4088 0.102s 0.000s
im_detect: 2830/4088 0.102s 0.000s
im_detect: 2831/4088 0.102s 0.000s
im_detect: 2832/4088 0.102s 0.000s
im_detect: 2833/4088 0.102s 0.000s
im_detect: 2834/4088 0.102s 0.000s
im_detect: 2835/4088 0.102s 0.000s
im_detect: 2836/4088 0.102s 0.000s
im_detect: 2837/4088 0.102s 0.000s
im_detect: 2838/4088 0.102s 0.000s
im_detect: 2839/4088 0.102s 0.000s
im_detect: 2840/4088 0.102s 0.000s
im_detect: 2841/4088 0.102s 0.000s
im_detect: 2842/4088 0.102s 0.000s
im_detect: 2843/4088 0.102s 0.000s
im_detect: 2844/4088 0.102s 0.000s
im_detect: 2845/4088 0.102s 0.000s
im_detect: 2846/4088 0.102s 0.000s
im_detect: 2847/4088 0.102s 0.000s
im_detect: 2848/4088 0.102s 0.000s
im_detect: 2849/4088 0.102s 0.000s
im_detect: 2850/4088 0.102s 0.000s
im_detect: 2851/4088 0.102s 0.000s
im_detect: 2852/4088 0.102s 0.000s
im_detect: 2853/4088 0.102s 0.000s
im_detect: 2854/4088 0.102s 0.000s
im_detect: 2855/4088 0.102s 0.000s
im_detect: 2856/4088 0.102s 0.000s
im_detect: 2857/4088 0.102s 0.000s
im_detect: 2858/4088 0.102s 0.000s
im_detect: 2859/4088 0.102s 0.000s
im_detect: 2860/4088 0.102s 0.000s
im_detect: 2861/4088 0.102s 0.000s
im_detect: 2862/4088 0.102s 0.000s
im_detect: 2863/4088 0.102s 0.000s
im_detect: 2864/4088 0.102s 0.000s
im_detect: 2865/4088 0.102s 0.000s
im_detect: 2866/4088 0.102s 0.000s
im_detect: 2867/4088 0.102s 0.000s
im_detect: 2868/4088 0.102s 0.000s
im_detect: 2869/4088 0.102s 0.000s
im_detect: 2870/4088 0.102s 0.000s
im_detect: 2871/4088 0.102s 0.000s
im_detect: 2872/4088 0.102s 0.000s
im_detect: 2873/4088 0.102s 0.000s
im_detect: 2874/4088 0.102s 0.000s
im_detect: 2875/4088 0.102s 0.000s
im_detect: 2876/4088 0.102s 0.000s
im_detect: 2877/4088 0.102s 0.000s
im_detect: 2878/4088 0.102s 0.000s
im_detect: 2879/4088 0.102s 0.000s
im_detect: 2880/4088 0.102s 0.000s
im_detect: 2881/4088 0.102s 0.000s
im_detect: 2882/4088 0.102s 0.000s
im_detect: 2883/4088 0.102s 0.000s
im_detect: 2884/4088 0.102s 0.000s
im_detect: 2885/4088 0.102s 0.000s
im_detect: 2886/4088 0.102s 0.000s
im_detect: 2887/4088 0.102s 0.000s
im_detect: 2888/4088 0.102s 0.000s
im_detect: 2889/4088 0.102s 0.000s
im_detect: 2890/4088 0.102s 0.000s
im_detect: 2891/4088 0.102s 0.000s
im_detect: 2892/4088 0.102s 0.000s
im_detect: 2893/4088 0.102s 0.000s
im_detect: 2894/4088 0.102s 0.000s
im_detect: 2895/4088 0.102s 0.000s
im_detect: 2896/4088 0.102s 0.000s
im_detect: 2897/4088 0.102s 0.000s
im_detect: 2898/4088 0.102s 0.000s
im_detect: 2899/4088 0.102s 0.000s
im_detect: 2900/4088 0.102s 0.000s
im_detect: 2901/4088 0.102s 0.000s
im_detect: 2902/4088 0.102s 0.000s
im_detect: 2903/4088 0.102s 0.000s
im_detect: 2904/4088 0.102s 0.000s
im_detect: 2905/4088 0.102s 0.000s
im_detect: 2906/4088 0.102s 0.000s
im_detect: 2907/4088 0.102s 0.000s
im_detect: 2908/4088 0.102s 0.000s
im_detect: 2909/4088 0.102s 0.000s
im_detect: 2910/4088 0.102s 0.000s
im_detect: 2911/4088 0.102s 0.000s
im_detect: 2912/4088 0.102s 0.000s
im_detect: 2913/4088 0.102s 0.000s
im_detect: 2914/4088 0.102s 0.000s
im_detect: 2915/4088 0.102s 0.000s
im_detect: 2916/4088 0.102s 0.000s
im_detect: 2917/4088 0.102s 0.000s
im_detect: 2918/4088 0.102s 0.000s
im_detect: 2919/4088 0.102s 0.000s
im_detect: 2920/4088 0.102s 0.000s
im_detect: 2921/4088 0.102s 0.000s
im_detect: 2922/4088 0.102s 0.000s
im_detect: 2923/4088 0.102s 0.000s
im_detect: 2924/4088 0.102s 0.000s
im_detect: 2925/4088 0.102s 0.000s
im_detect: 2926/4088 0.102s 0.000s
im_detect: 2927/4088 0.102s 0.000s
im_detect: 2928/4088 0.102s 0.000s
im_detect: 2929/4088 0.102s 0.000s
im_detect: 2930/4088 0.102s 0.000s
im_detect: 2931/4088 0.102s 0.000s
im_detect: 2932/4088 0.102s 0.000s
im_detect: 2933/4088 0.102s 0.000s
im_detect: 2934/4088 0.102s 0.000s
im_detect: 2935/4088 0.102s 0.000s
im_detect: 2936/4088 0.102s 0.000s
im_detect: 2937/4088 0.102s 0.000s
im_detect: 2938/4088 0.102s 0.000s
im_detect: 2939/4088 0.102s 0.000s
im_detect: 2940/4088 0.102s 0.000s
im_detect: 2941/4088 0.102s 0.000s
im_detect: 2942/4088 0.102s 0.000s
im_detect: 2943/4088 0.102s 0.000s
im_detect: 2944/4088 0.102s 0.000s
im_detect: 2945/4088 0.102s 0.000s
im_detect: 2946/4088 0.102s 0.000s
im_detect: 2947/4088 0.102s 0.000s
im_detect: 2948/4088 0.102s 0.000s
im_detect: 2949/4088 0.102s 0.000s
im_detect: 2950/4088 0.102s 0.000s
im_detect: 2951/4088 0.102s 0.000s
im_detect: 2952/4088 0.102s 0.000s
im_detect: 2953/4088 0.102s 0.000s
im_detect: 2954/4088 0.102s 0.000s
im_detect: 2955/4088 0.102s 0.000s
im_detect: 2956/4088 0.102s 0.000s
im_detect: 2957/4088 0.102s 0.000s
im_detect: 2958/4088 0.102s 0.000s
im_detect: 2959/4088 0.102s 0.000s
im_detect: 2960/4088 0.102s 0.000s
im_detect: 2961/4088 0.102s 0.000s
im_detect: 2962/4088 0.102s 0.000s
im_detect: 2963/4088 0.102s 0.000s
im_detect: 2964/4088 0.102s 0.000s
im_detect: 2965/4088 0.102s 0.000s
im_detect: 2966/4088 0.102s 0.000s
im_detect: 2967/4088 0.102s 0.000s
im_detect: 2968/4088 0.102s 0.000s
im_detect: 2969/4088 0.102s 0.000s
im_detect: 2970/4088 0.102s 0.000s
im_detect: 2971/4088 0.102s 0.000s
im_detect: 2972/4088 0.102s 0.000s
im_detect: 2973/4088 0.102s 0.000s
im_detect: 2974/4088 0.102s 0.000s
im_detect: 2975/4088 0.102s 0.000s
im_detect: 2976/4088 0.102s 0.000s
im_detect: 2977/4088 0.102s 0.000s
im_detect: 2978/4088 0.102s 0.000s
im_detect: 2979/4088 0.102s 0.000s
im_detect: 2980/4088 0.102s 0.000s
im_detect: 2981/4088 0.102s 0.000s
im_detect: 2982/4088 0.102s 0.000s
im_detect: 2983/4088 0.102s 0.000s
im_detect: 2984/4088 0.102s 0.000s
im_detect: 2985/4088 0.102s 0.000s
im_detect: 2986/4088 0.102s 0.000s
im_detect: 2987/4088 0.102s 0.000s
im_detect: 2988/4088 0.102s 0.000s
im_detect: 2989/4088 0.102s 0.000s
im_detect: 2990/4088 0.102s 0.000s
im_detect: 2991/4088 0.102s 0.000s
im_detect: 2992/4088 0.102s 0.000s
im_detect: 2993/4088 0.102s 0.000s
im_detect: 2994/4088 0.102s 0.000s
im_detect: 2995/4088 0.102s 0.000s
im_detect: 2996/4088 0.102s 0.000s
im_detect: 2997/4088 0.102s 0.000s
im_detect: 2998/4088 0.102s 0.000s
im_detect: 2999/4088 0.102s 0.000s
im_detect: 3000/4088 0.102s 0.000s
im_detect: 3001/4088 0.102s 0.000s
im_detect: 3002/4088 0.102s 0.000s
im_detect: 3003/4088 0.102s 0.000s
im_detect: 3004/4088 0.102s 0.000s
im_detect: 3005/4088 0.102s 0.000s
im_detect: 3006/4088 0.102s 0.000s
im_detect: 3007/4088 0.102s 0.000s
im_detect: 3008/4088 0.102s 0.000s
im_detect: 3009/4088 0.102s 0.000s
im_detect: 3010/4088 0.102s 0.000s
im_detect: 3011/4088 0.102s 0.000s
im_detect: 3012/4088 0.102s 0.000s
im_detect: 3013/4088 0.102s 0.000s
im_detect: 3014/4088 0.102s 0.000s
im_detect: 3015/4088 0.102s 0.000s
im_detect: 3016/4088 0.102s 0.000s
im_detect: 3017/4088 0.102s 0.000s
im_detect: 3018/4088 0.102s 0.000s
im_detect: 3019/4088 0.102s 0.000s
im_detect: 3020/4088 0.102s 0.000s
im_detect: 3021/4088 0.102s 0.000s
im_detect: 3022/4088 0.102s 0.000s
im_detect: 3023/4088 0.102s 0.000s
im_detect: 3024/4088 0.102s 0.000s
im_detect: 3025/4088 0.102s 0.000s
im_detect: 3026/4088 0.102s 0.000s
im_detect: 3027/4088 0.102s 0.000s
im_detect: 3028/4088 0.102s 0.000s
im_detect: 3029/4088 0.102s 0.000s
im_detect: 3030/4088 0.102s 0.000s
im_detect: 3031/4088 0.102s 0.000s
im_detect: 3032/4088 0.102s 0.000s
im_detect: 3033/4088 0.102s 0.000s
im_detect: 3034/4088 0.102s 0.000s
im_detect: 3035/4088 0.102s 0.000s
im_detect: 3036/4088 0.102s 0.000s
im_detect: 3037/4088 0.102s 0.000s
im_detect: 3038/4088 0.102s 0.000s
im_detect: 3039/4088 0.102s 0.000s
im_detect: 3040/4088 0.102s 0.000s
im_detect: 3041/4088 0.102s 0.000s
im_detect: 3042/4088 0.102s 0.000s
im_detect: 3043/4088 0.102s 0.000s
im_detect: 3044/4088 0.102s 0.000s
im_detect: 3045/4088 0.102s 0.000s
im_detect: 3046/4088 0.102s 0.000s
im_detect: 3047/4088 0.102s 0.000s
im_detect: 3048/4088 0.102s 0.000s
im_detect: 3049/4088 0.102s 0.000s
im_detect: 3050/4088 0.102s 0.000s
im_detect: 3051/4088 0.102s 0.000s
im_detect: 3052/4088 0.102s 0.000s
im_detect: 3053/4088 0.102s 0.000s
im_detect: 3054/4088 0.102s 0.000s
im_detect: 3055/4088 0.102s 0.000s
im_detect: 3056/4088 0.102s 0.000s
im_detect: 3057/4088 0.102s 0.000s
im_detect: 3058/4088 0.102s 0.000s
im_detect: 3059/4088 0.102s 0.000s
im_detect: 3060/4088 0.102s 0.000s
im_detect: 3061/4088 0.102s 0.000s
im_detect: 3062/4088 0.102s 0.000s
im_detect: 3063/4088 0.102s 0.000s
im_detect: 3064/4088 0.102s 0.000s
im_detect: 3065/4088 0.102s 0.000s
im_detect: 3066/4088 0.102s 0.000s
im_detect: 3067/4088 0.102s 0.000s
im_detect: 3068/4088 0.102s 0.000s
im_detect: 3069/4088 0.102s 0.000s
im_detect: 3070/4088 0.102s 0.000s
im_detect: 3071/4088 0.102s 0.000s
im_detect: 3072/4088 0.102s 0.000s
im_detect: 3073/4088 0.102s 0.000s
im_detect: 3074/4088 0.102s 0.000s
im_detect: 3075/4088 0.102s 0.000s
im_detect: 3076/4088 0.102s 0.000s
im_detect: 3077/4088 0.102s 0.000s
im_detect: 3078/4088 0.102s 0.000s
im_detect: 3079/4088 0.102s 0.000s
im_detect: 3080/4088 0.102s 0.000s
im_detect: 3081/4088 0.102s 0.000s
im_detect: 3082/4088 0.102s 0.000s
im_detect: 3083/4088 0.102s 0.000s
im_detect: 3084/4088 0.102s 0.000s
im_detect: 3085/4088 0.102s 0.000s
im_detect: 3086/4088 0.102s 0.000s
im_detect: 3087/4088 0.102s 0.000s
im_detect: 3088/4088 0.102s 0.000s
im_detect: 3089/4088 0.102s 0.000s
im_detect: 3090/4088 0.102s 0.000s
im_detect: 3091/4088 0.102s 0.000s
im_detect: 3092/4088 0.102s 0.000s
im_detect: 3093/4088 0.102s 0.000s
im_detect: 3094/4088 0.102s 0.000s
im_detect: 3095/4088 0.102s 0.000s
im_detect: 3096/4088 0.102s 0.000s
im_detect: 3097/4088 0.102s 0.000s
im_detect: 3098/4088 0.102s 0.000s
im_detect: 3099/4088 0.102s 0.000s
im_detect: 3100/4088 0.102s 0.000s
im_detect: 3101/4088 0.102s 0.000s
im_detect: 3102/4088 0.102s 0.000s
im_detect: 3103/4088 0.102s 0.000s
im_detect: 3104/4088 0.102s 0.000s
im_detect: 3105/4088 0.102s 0.000s
im_detect: 3106/4088 0.102s 0.000s
im_detect: 3107/4088 0.102s 0.000s
im_detect: 3108/4088 0.102s 0.000s
im_detect: 3109/4088 0.102s 0.000s
im_detect: 3110/4088 0.102s 0.000s
im_detect: 3111/4088 0.102s 0.000s
im_detect: 3112/4088 0.102s 0.000s
im_detect: 3113/4088 0.102s 0.000s
im_detect: 3114/4088 0.102s 0.000s
im_detect: 3115/4088 0.102s 0.000s
im_detect: 3116/4088 0.102s 0.000s
im_detect: 3117/4088 0.102s 0.000s
im_detect: 3118/4088 0.102s 0.000s
im_detect: 3119/4088 0.102s 0.000s
im_detect: 3120/4088 0.102s 0.000s
im_detect: 3121/4088 0.102s 0.000s
im_detect: 3122/4088 0.102s 0.000s
im_detect: 3123/4088 0.102s 0.000s
im_detect: 3124/4088 0.102s 0.000s
im_detect: 3125/4088 0.102s 0.000s
im_detect: 3126/4088 0.102s 0.000s
im_detect: 3127/4088 0.102s 0.000s
im_detect: 3128/4088 0.102s 0.000s
im_detect: 3129/4088 0.102s 0.000s
im_detect: 3130/4088 0.102s 0.000s
im_detect: 3131/4088 0.102s 0.000s
im_detect: 3132/4088 0.102s 0.000s
im_detect: 3133/4088 0.102s 0.000s
im_detect: 3134/4088 0.102s 0.000s
im_detect: 3135/4088 0.102s 0.000s
im_detect: 3136/4088 0.102s 0.000s
im_detect: 3137/4088 0.102s 0.000s
im_detect: 3138/4088 0.102s 0.000s
im_detect: 3139/4088 0.102s 0.000s
im_detect: 3140/4088 0.102s 0.000s
im_detect: 3141/4088 0.102s 0.000s
im_detect: 3142/4088 0.102s 0.000s
im_detect: 3143/4088 0.102s 0.000s
im_detect: 3144/4088 0.102s 0.000s
im_detect: 3145/4088 0.102s 0.000s
im_detect: 3146/4088 0.102s 0.000s
im_detect: 3147/4088 0.102s 0.000s
im_detect: 3148/4088 0.102s 0.000s
im_detect: 3149/4088 0.102s 0.000s
im_detect: 3150/4088 0.102s 0.000s
im_detect: 3151/4088 0.102s 0.000s
im_detect: 3152/4088 0.102s 0.000s
im_detect: 3153/4088 0.102s 0.000s
im_detect: 3154/4088 0.102s 0.000s
im_detect: 3155/4088 0.102s 0.000s
im_detect: 3156/4088 0.102s 0.000s
im_detect: 3157/4088 0.102s 0.000s
im_detect: 3158/4088 0.102s 0.000s
im_detect: 3159/4088 0.102s 0.000s
im_detect: 3160/4088 0.102s 0.000s
im_detect: 3161/4088 0.102s 0.000s
im_detect: 3162/4088 0.102s 0.000s
im_detect: 3163/4088 0.102s 0.000s
im_detect: 3164/4088 0.102s 0.000s
im_detect: 3165/4088 0.102s 0.000s
im_detect: 3166/4088 0.102s 0.000s
im_detect: 3167/4088 0.102s 0.000s
im_detect: 3168/4088 0.102s 0.000s
im_detect: 3169/4088 0.102s 0.000s
im_detect: 3170/4088 0.102s 0.000s
im_detect: 3171/4088 0.102s 0.000s
im_detect: 3172/4088 0.102s 0.000s
im_detect: 3173/4088 0.102s 0.000s
im_detect: 3174/4088 0.102s 0.000s
im_detect: 3175/4088 0.102s 0.000s
im_detect: 3176/4088 0.102s 0.000s
im_detect: 3177/4088 0.102s 0.000s
im_detect: 3178/4088 0.102s 0.000s
im_detect: 3179/4088 0.102s 0.000s
im_detect: 3180/4088 0.102s 0.000s
im_detect: 3181/4088 0.102s 0.000s
im_detect: 3182/4088 0.102s 0.000s
im_detect: 3183/4088 0.102s 0.000s
im_detect: 3184/4088 0.102s 0.000s
im_detect: 3185/4088 0.102s 0.000s
im_detect: 3186/4088 0.102s 0.000s
im_detect: 3187/4088 0.102s 0.000s
im_detect: 3188/4088 0.102s 0.000s
im_detect: 3189/4088 0.102s 0.000s
im_detect: 3190/4088 0.102s 0.000s
im_detect: 3191/4088 0.102s 0.000s
im_detect: 3192/4088 0.102s 0.000s
im_detect: 3193/4088 0.102s 0.000s
im_detect: 3194/4088 0.102s 0.000s
im_detect: 3195/4088 0.102s 0.000s
im_detect: 3196/4088 0.102s 0.000s
im_detect: 3197/4088 0.102s 0.000s
im_detect: 3198/4088 0.102s 0.000s
im_detect: 3199/4088 0.102s 0.000s
im_detect: 3200/4088 0.102s 0.000s
im_detect: 3201/4088 0.102s 0.000s
im_detect: 3202/4088 0.102s 0.000s
im_detect: 3203/4088 0.102s 0.000s
im_detect: 3204/4088 0.102s 0.000s
im_detect: 3205/4088 0.102s 0.000s
im_detect: 3206/4088 0.102s 0.000s
im_detect: 3207/4088 0.102s 0.000s
im_detect: 3208/4088 0.102s 0.000s
im_detect: 3209/4088 0.102s 0.000s
im_detect: 3210/4088 0.102s 0.000s
im_detect: 3211/4088 0.102s 0.000s
im_detect: 3212/4088 0.102s 0.000s
im_detect: 3213/4088 0.102s 0.000s
im_detect: 3214/4088 0.102s 0.000s
im_detect: 3215/4088 0.102s 0.000s
im_detect: 3216/4088 0.102s 0.000s
im_detect: 3217/4088 0.102s 0.000s
im_detect: 3218/4088 0.102s 0.000s
im_detect: 3219/4088 0.102s 0.000s
im_detect: 3220/4088 0.102s 0.000s
im_detect: 3221/4088 0.102s 0.000s
im_detect: 3222/4088 0.102s 0.000s
im_detect: 3223/4088 0.102s 0.000s
im_detect: 3224/4088 0.102s 0.000s
im_detect: 3225/4088 0.102s 0.000s
im_detect: 3226/4088 0.102s 0.000s
im_detect: 3227/4088 0.102s 0.000s
im_detect: 3228/4088 0.102s 0.000s
im_detect: 3229/4088 0.102s 0.000s
im_detect: 3230/4088 0.102s 0.000s
im_detect: 3231/4088 0.102s 0.000s
im_detect: 3232/4088 0.102s 0.000s
im_detect: 3233/4088 0.102s 0.000s
im_detect: 3234/4088 0.102s 0.000s
im_detect: 3235/4088 0.102s 0.000s
im_detect: 3236/4088 0.102s 0.000s
im_detect: 3237/4088 0.102s 0.000s
im_detect: 3238/4088 0.102s 0.000s
im_detect: 3239/4088 0.102s 0.000s
im_detect: 3240/4088 0.102s 0.000s
im_detect: 3241/4088 0.102s 0.000s
im_detect: 3242/4088 0.102s 0.000s
im_detect: 3243/4088 0.102s 0.000s
im_detect: 3244/4088 0.102s 0.000s
im_detect: 3245/4088 0.102s 0.000s
im_detect: 3246/4088 0.102s 0.000s
im_detect: 3247/4088 0.102s 0.000s
im_detect: 3248/4088 0.102s 0.000s
im_detect: 3249/4088 0.102s 0.000s
im_detect: 3250/4088 0.102s 0.000s
im_detect: 3251/4088 0.102s 0.000s
im_detect: 3252/4088 0.102s 0.000s
im_detect: 3253/4088 0.102s 0.000s
im_detect: 3254/4088 0.102s 0.000s
im_detect: 3255/4088 0.102s 0.000s
im_detect: 3256/4088 0.102s 0.000s
im_detect: 3257/4088 0.102s 0.000s
im_detect: 3258/4088 0.102s 0.000s
im_detect: 3259/4088 0.102s 0.000s
im_detect: 3260/4088 0.102s 0.000s
im_detect: 3261/4088 0.102s 0.000s
im_detect: 3262/4088 0.102s 0.000s
im_detect: 3263/4088 0.102s 0.000s
im_detect: 3264/4088 0.102s 0.000s
im_detect: 3265/4088 0.102s 0.000s
im_detect: 3266/4088 0.102s 0.000s
im_detect: 3267/4088 0.102s 0.000s
im_detect: 3268/4088 0.102s 0.000s
im_detect: 3269/4088 0.102s 0.000s
im_detect: 3270/4088 0.102s 0.000s
im_detect: 3271/4088 0.102s 0.000s
im_detect: 3272/4088 0.102s 0.000s
im_detect: 3273/4088 0.102s 0.000s
im_detect: 3274/4088 0.102s 0.000s
im_detect: 3275/4088 0.102s 0.000s
im_detect: 3276/4088 0.102s 0.000s
im_detect: 3277/4088 0.102s 0.000s
im_detect: 3278/4088 0.102s 0.000s
im_detect: 3279/4088 0.102s 0.000s
im_detect: 3280/4088 0.102s 0.000s
im_detect: 3281/4088 0.102s 0.000s
im_detect: 3282/4088 0.102s 0.000s
im_detect: 3283/4088 0.102s 0.000s
im_detect: 3284/4088 0.102s 0.000s
im_detect: 3285/4088 0.102s 0.000s
im_detect: 3286/4088 0.102s 0.000s
im_detect: 3287/4088 0.102s 0.000s
im_detect: 3288/4088 0.102s 0.000s
im_detect: 3289/4088 0.102s 0.000s
im_detect: 3290/4088 0.102s 0.000s
im_detect: 3291/4088 0.102s 0.000s
im_detect: 3292/4088 0.102s 0.000s
im_detect: 3293/4088 0.102s 0.000s
im_detect: 3294/4088 0.102s 0.000s
im_detect: 3295/4088 0.102s 0.000s
im_detect: 3296/4088 0.102s 0.000s
im_detect: 3297/4088 0.102s 0.000s
im_detect: 3298/4088 0.102s 0.000s
im_detect: 3299/4088 0.102s 0.000s
im_detect: 3300/4088 0.102s 0.000s
im_detect: 3301/4088 0.102s 0.000s
im_detect: 3302/4088 0.102s 0.000s
im_detect: 3303/4088 0.102s 0.000s
im_detect: 3304/4088 0.102s 0.000s
im_detect: 3305/4088 0.102s 0.000s
im_detect: 3306/4088 0.102s 0.000s
im_detect: 3307/4088 0.102s 0.000s
im_detect: 3308/4088 0.102s 0.000s
im_detect: 3309/4088 0.102s 0.000s
im_detect: 3310/4088 0.102s 0.000s
im_detect: 3311/4088 0.102s 0.000s
im_detect: 3312/4088 0.102s 0.000s
im_detect: 3313/4088 0.102s 0.000s
im_detect: 3314/4088 0.102s 0.000s
im_detect: 3315/4088 0.102s 0.000s
im_detect: 3316/4088 0.102s 0.000s
im_detect: 3317/4088 0.102s 0.000s
im_detect: 3318/4088 0.102s 0.000s
im_detect: 3319/4088 0.102s 0.000s
im_detect: 3320/4088 0.102s 0.000s
im_detect: 3321/4088 0.102s 0.000s
im_detect: 3322/4088 0.102s 0.000s
im_detect: 3323/4088 0.102s 0.000s
im_detect: 3324/4088 0.102s 0.000s
im_detect: 3325/4088 0.102s 0.000s
im_detect: 3326/4088 0.102s 0.000s
im_detect: 3327/4088 0.102s 0.000s
im_detect: 3328/4088 0.102s 0.000s
im_detect: 3329/4088 0.102s 0.000s
im_detect: 3330/4088 0.102s 0.000s
im_detect: 3331/4088 0.102s 0.000s
im_detect: 3332/4088 0.102s 0.000s
im_detect: 3333/4088 0.102s 0.000s
im_detect: 3334/4088 0.102s 0.000s
im_detect: 3335/4088 0.102s 0.000s
im_detect: 3336/4088 0.102s 0.000s
im_detect: 3337/4088 0.102s 0.000s
im_detect: 3338/4088 0.102s 0.000s
im_detect: 3339/4088 0.102s 0.000s
im_detect: 3340/4088 0.102s 0.000s
im_detect: 3341/4088 0.102s 0.000s
im_detect: 3342/4088 0.102s 0.000s
im_detect: 3343/4088 0.102s 0.000s
im_detect: 3344/4088 0.102s 0.000s
im_detect: 3345/4088 0.102s 0.000s
im_detect: 3346/4088 0.102s 0.000s
im_detect: 3347/4088 0.102s 0.000s
im_detect: 3348/4088 0.102s 0.000s
im_detect: 3349/4088 0.102s 0.000s
im_detect: 3350/4088 0.102s 0.000s
im_detect: 3351/4088 0.102s 0.000s
im_detect: 3352/4088 0.102s 0.000s
im_detect: 3353/4088 0.102s 0.000s
im_detect: 3354/4088 0.102s 0.000s
im_detect: 3355/4088 0.102s 0.000s
im_detect: 3356/4088 0.102s 0.000s
im_detect: 3357/4088 0.102s 0.000s
im_detect: 3358/4088 0.102s 0.000s
im_detect: 3359/4088 0.102s 0.000s
im_detect: 3360/4088 0.102s 0.000s
im_detect: 3361/4088 0.102s 0.000s
im_detect: 3362/4088 0.102s 0.000s
im_detect: 3363/4088 0.102s 0.000s
im_detect: 3364/4088 0.102s 0.000s
im_detect: 3365/4088 0.102s 0.000s
im_detect: 3366/4088 0.102s 0.000s
im_detect: 3367/4088 0.102s 0.000s
im_detect: 3368/4088 0.102s 0.000s
im_detect: 3369/4088 0.102s 0.000s
im_detect: 3370/4088 0.102s 0.000s
im_detect: 3371/4088 0.102s 0.000s
im_detect: 3372/4088 0.102s 0.000s
im_detect: 3373/4088 0.102s 0.000s
im_detect: 3374/4088 0.102s 0.000s
im_detect: 3375/4088 0.102s 0.000s
im_detect: 3376/4088 0.102s 0.000s
im_detect: 3377/4088 0.102s 0.000s
im_detect: 3378/4088 0.102s 0.000s
im_detect: 3379/4088 0.102s 0.000s
im_detect: 3380/4088 0.102s 0.000s
im_detect: 3381/4088 0.102s 0.000s
im_detect: 3382/4088 0.102s 0.000s
im_detect: 3383/4088 0.102s 0.000s
im_detect: 3384/4088 0.102s 0.000s
im_detect: 3385/4088 0.102s 0.000s
im_detect: 3386/4088 0.102s 0.000s
im_detect: 3387/4088 0.102s 0.000s
im_detect: 3388/4088 0.102s 0.000s
im_detect: 3389/4088 0.102s 0.000s
im_detect: 3390/4088 0.102s 0.000s
im_detect: 3391/4088 0.102s 0.000s
im_detect: 3392/4088 0.102s 0.000s
im_detect: 3393/4088 0.102s 0.000s
im_detect: 3394/4088 0.102s 0.000s
im_detect: 3395/4088 0.102s 0.000s
im_detect: 3396/4088 0.102s 0.000s
im_detect: 3397/4088 0.102s 0.000s
im_detect: 3398/4088 0.102s 0.000s
im_detect: 3399/4088 0.102s 0.000s
im_detect: 3400/4088 0.102s 0.000s
im_detect: 3401/4088 0.102s 0.000s
im_detect: 3402/4088 0.102s 0.000s
im_detect: 3403/4088 0.102s 0.000s
im_detect: 3404/4088 0.102s 0.000s
im_detect: 3405/4088 0.102s 0.000s
im_detect: 3406/4088 0.102s 0.000s
im_detect: 3407/4088 0.102s 0.000s
im_detect: 3408/4088 0.102s 0.000s
im_detect: 3409/4088 0.102s 0.000s
im_detect: 3410/4088 0.102s 0.000s
im_detect: 3411/4088 0.102s 0.000s
im_detect: 3412/4088 0.102s 0.000s
im_detect: 3413/4088 0.102s 0.000s
im_detect: 3414/4088 0.102s 0.000s
im_detect: 3415/4088 0.102s 0.000s
im_detect: 3416/4088 0.102s 0.000s
im_detect: 3417/4088 0.102s 0.000s
im_detect: 3418/4088 0.102s 0.000s
im_detect: 3419/4088 0.102s 0.000s
im_detect: 3420/4088 0.102s 0.000s
im_detect: 3421/4088 0.102s 0.000s
im_detect: 3422/4088 0.102s 0.000s
im_detect: 3423/4088 0.102s 0.000s
im_detect: 3424/4088 0.102s 0.000s
im_detect: 3425/4088 0.102s 0.000s
im_detect: 3426/4088 0.102s 0.000s
im_detect: 3427/4088 0.102s 0.000s
im_detect: 3428/4088 0.102s 0.000s
im_detect: 3429/4088 0.102s 0.000s
im_detect: 3430/4088 0.102s 0.000s
im_detect: 3431/4088 0.102s 0.000s
im_detect: 3432/4088 0.102s 0.000s
im_detect: 3433/4088 0.102s 0.000s
im_detect: 3434/4088 0.102s 0.000s
im_detect: 3435/4088 0.102s 0.000s
im_detect: 3436/4088 0.102s 0.000s
im_detect: 3437/4088 0.102s 0.000s
im_detect: 3438/4088 0.102s 0.000s
im_detect: 3439/4088 0.102s 0.000s
im_detect: 3440/4088 0.102s 0.000s
im_detect: 3441/4088 0.102s 0.000s
im_detect: 3442/4088 0.102s 0.000s
im_detect: 3443/4088 0.102s 0.000s
im_detect: 3444/4088 0.102s 0.000s
im_detect: 3445/4088 0.102s 0.000s
im_detect: 3446/4088 0.102s 0.000s
im_detect: 3447/4088 0.102s 0.000s
im_detect: 3448/4088 0.102s 0.000s
im_detect: 3449/4088 0.102s 0.000s
im_detect: 3450/4088 0.102s 0.000s
im_detect: 3451/4088 0.102s 0.000s
im_detect: 3452/4088 0.102s 0.000s
im_detect: 3453/4088 0.102s 0.000s
im_detect: 3454/4088 0.102s 0.000s
im_detect: 3455/4088 0.102s 0.000s
im_detect: 3456/4088 0.102s 0.000s
im_detect: 3457/4088 0.102s 0.000s
im_detect: 3458/4088 0.102s 0.000s
im_detect: 3459/4088 0.102s 0.000s
im_detect: 3460/4088 0.102s 0.000s
im_detect: 3461/4088 0.102s 0.000s
im_detect: 3462/4088 0.102s 0.000s
im_detect: 3463/4088 0.102s 0.000s
im_detect: 3464/4088 0.102s 0.000s
im_detect: 3465/4088 0.102s 0.000s
im_detect: 3466/4088 0.102s 0.000s
im_detect: 3467/4088 0.102s 0.000s
im_detect: 3468/4088 0.102s 0.000s
im_detect: 3469/4088 0.102s 0.000s
im_detect: 3470/4088 0.102s 0.000s
im_detect: 3471/4088 0.102s 0.000s
im_detect: 3472/4088 0.102s 0.000s
im_detect: 3473/4088 0.102s 0.000s
im_detect: 3474/4088 0.102s 0.000s
im_detect: 3475/4088 0.102s 0.000s
im_detect: 3476/4088 0.102s 0.000s
im_detect: 3477/4088 0.102s 0.000s
im_detect: 3478/4088 0.102s 0.000s
im_detect: 3479/4088 0.102s 0.000s
im_detect: 3480/4088 0.102s 0.000s
im_detect: 3481/4088 0.102s 0.000s
im_detect: 3482/4088 0.102s 0.000s
im_detect: 3483/4088 0.102s 0.000s
im_detect: 3484/4088 0.102s 0.000s
im_detect: 3485/4088 0.102s 0.000s
im_detect: 3486/4088 0.102s 0.000s
im_detect: 3487/4088 0.102s 0.000s
im_detect: 3488/4088 0.102s 0.000s
im_detect: 3489/4088 0.102s 0.000s
im_detect: 3490/4088 0.102s 0.000s
im_detect: 3491/4088 0.102s 0.000s
im_detect: 3492/4088 0.102s 0.000s
im_detect: 3493/4088 0.102s 0.000s
im_detect: 3494/4088 0.102s 0.000s
im_detect: 3495/4088 0.102s 0.000s
im_detect: 3496/4088 0.102s 0.000s
im_detect: 3497/4088 0.102s 0.000s
im_detect: 3498/4088 0.102s 0.000s
im_detect: 3499/4088 0.102s 0.000s
im_detect: 3500/4088 0.102s 0.000s
im_detect: 3501/4088 0.102s 0.000s
im_detect: 3502/4088 0.102s 0.000s
im_detect: 3503/4088 0.102s 0.000s
im_detect: 3504/4088 0.102s 0.000s
im_detect: 3505/4088 0.102s 0.000s
im_detect: 3506/4088 0.102s 0.000s
im_detect: 3507/4088 0.102s 0.000s
im_detect: 3508/4088 0.102s 0.000s
im_detect: 3509/4088 0.102s 0.000s
im_detect: 3510/4088 0.102s 0.000s
im_detect: 3511/4088 0.102s 0.000s
im_detect: 3512/4088 0.102s 0.000s
im_detect: 3513/4088 0.102s 0.000s
im_detect: 3514/4088 0.102s 0.000s
im_detect: 3515/4088 0.102s 0.000s
im_detect: 3516/4088 0.102s 0.000s
im_detect: 3517/4088 0.102s 0.000s
im_detect: 3518/4088 0.102s 0.000s
im_detect: 3519/4088 0.102s 0.000s
im_detect: 3520/4088 0.102s 0.000s
im_detect: 3521/4088 0.102s 0.000s
im_detect: 3522/4088 0.102s 0.000s
im_detect: 3523/4088 0.102s 0.000s
im_detect: 3524/4088 0.102s 0.000s
im_detect: 3525/4088 0.102s 0.000s
im_detect: 3526/4088 0.102s 0.000s
im_detect: 3527/4088 0.102s 0.000s
im_detect: 3528/4088 0.102s 0.000s
im_detect: 3529/4088 0.102s 0.000s
im_detect: 3530/4088 0.102s 0.000s
im_detect: 3531/4088 0.102s 0.000s
im_detect: 3532/4088 0.102s 0.000s
im_detect: 3533/4088 0.102s 0.000s
im_detect: 3534/4088 0.102s 0.000s
im_detect: 3535/4088 0.102s 0.000s
im_detect: 3536/4088 0.102s 0.000s
im_detect: 3537/4088 0.102s 0.000s
im_detect: 3538/4088 0.102s 0.000s
im_detect: 3539/4088 0.102s 0.000s
im_detect: 3540/4088 0.102s 0.000s
im_detect: 3541/4088 0.102s 0.000s
im_detect: 3542/4088 0.102s 0.000s
im_detect: 3543/4088 0.102s 0.000s
im_detect: 3544/4088 0.102s 0.000s
im_detect: 3545/4088 0.102s 0.000s
im_detect: 3546/4088 0.102s 0.000s
im_detect: 3547/4088 0.102s 0.000s
im_detect: 3548/4088 0.102s 0.000s
im_detect: 3549/4088 0.102s 0.000s
im_detect: 3550/4088 0.102s 0.000s
im_detect: 3551/4088 0.102s 0.000s
im_detect: 3552/4088 0.102s 0.000s
im_detect: 3553/4088 0.102s 0.000s
im_detect: 3554/4088 0.102s 0.000s
im_detect: 3555/4088 0.102s 0.000s
im_detect: 3556/4088 0.102s 0.000s
im_detect: 3557/4088 0.102s 0.000s
im_detect: 3558/4088 0.102s 0.000s
im_detect: 3559/4088 0.102s 0.000s
im_detect: 3560/4088 0.102s 0.000s
im_detect: 3561/4088 0.102s 0.000s
im_detect: 3562/4088 0.102s 0.000s
im_detect: 3563/4088 0.102s 0.000s
im_detect: 3564/4088 0.102s 0.000s
im_detect: 3565/4088 0.102s 0.000s
im_detect: 3566/4088 0.102s 0.000s
im_detect: 3567/4088 0.102s 0.000s
im_detect: 3568/4088 0.102s 0.000s
im_detect: 3569/4088 0.102s 0.000s
im_detect: 3570/4088 0.102s 0.000s
im_detect: 3571/4088 0.102s 0.000s
im_detect: 3572/4088 0.102s 0.000s
im_detect: 3573/4088 0.102s 0.000s
im_detect: 3574/4088 0.102s 0.000s
im_detect: 3575/4088 0.102s 0.000s
im_detect: 3576/4088 0.102s 0.000s
im_detect: 3577/4088 0.102s 0.000s
im_detect: 3578/4088 0.102s 0.000s
im_detect: 3579/4088 0.102s 0.000s
im_detect: 3580/4088 0.102s 0.000s
im_detect: 3581/4088 0.102s 0.000s
im_detect: 3582/4088 0.102s 0.000s
im_detect: 3583/4088 0.102s 0.000s
im_detect: 3584/4088 0.102s 0.000s
im_detect: 3585/4088 0.102s 0.000s
im_detect: 3586/4088 0.102s 0.000s
im_detect: 3587/4088 0.102s 0.000s
im_detect: 3588/4088 0.102s 0.000s
im_detect: 3589/4088 0.102s 0.000s
im_detect: 3590/4088 0.102s 0.000s
im_detect: 3591/4088 0.102s 0.000s
im_detect: 3592/4088 0.102s 0.000s
im_detect: 3593/4088 0.102s 0.000s
im_detect: 3594/4088 0.102s 0.000s
im_detect: 3595/4088 0.102s 0.000s
im_detect: 3596/4088 0.102s 0.000s
im_detect: 3597/4088 0.102s 0.000s
im_detect: 3598/4088 0.102s 0.000s
im_detect: 3599/4088 0.102s 0.000s
im_detect: 3600/4088 0.102s 0.000s
im_detect: 3601/4088 0.102s 0.000s
im_detect: 3602/4088 0.102s 0.000s
im_detect: 3603/4088 0.102s 0.000s
im_detect: 3604/4088 0.102s 0.000s
im_detect: 3605/4088 0.102s 0.000s
im_detect: 3606/4088 0.102s 0.000s
im_detect: 3607/4088 0.102s 0.000s
im_detect: 3608/4088 0.102s 0.000s
im_detect: 3609/4088 0.102s 0.000s
im_detect: 3610/4088 0.102s 0.000s
im_detect: 3611/4088 0.102s 0.000s
im_detect: 3612/4088 0.102s 0.000s
im_detect: 3613/4088 0.102s 0.000s
im_detect: 3614/4088 0.102s 0.000s
im_detect: 3615/4088 0.102s 0.000s
im_detect: 3616/4088 0.102s 0.000s
im_detect: 3617/4088 0.102s 0.000s
im_detect: 3618/4088 0.102s 0.000s
im_detect: 3619/4088 0.102s 0.000s
im_detect: 3620/4088 0.102s 0.000s
im_detect: 3621/4088 0.102s 0.000s
im_detect: 3622/4088 0.102s 0.000s
im_detect: 3623/4088 0.102s 0.000s
im_detect: 3624/4088 0.102s 0.000s
im_detect: 3625/4088 0.102s 0.000s
im_detect: 3626/4088 0.102s 0.000s
im_detect: 3627/4088 0.102s 0.000s
im_detect: 3628/4088 0.102s 0.000s
im_detect: 3629/4088 0.102s 0.000s
im_detect: 3630/4088 0.102s 0.000s
im_detect: 3631/4088 0.102s 0.000s
im_detect: 3632/4088 0.102s 0.000s
im_detect: 3633/4088 0.102s 0.000s
im_detect: 3634/4088 0.102s 0.000s
im_detect: 3635/4088 0.102s 0.000s
im_detect: 3636/4088 0.102s 0.000s
im_detect: 3637/4088 0.102s 0.000s
im_detect: 3638/4088 0.102s 0.000s
im_detect: 3639/4088 0.102s 0.000s
im_detect: 3640/4088 0.102s 0.000s
im_detect: 3641/4088 0.102s 0.000s
im_detect: 3642/4088 0.102s 0.000s
im_detect: 3643/4088 0.102s 0.000s
im_detect: 3644/4088 0.102s 0.000s
im_detect: 3645/4088 0.102s 0.000s
im_detect: 3646/4088 0.102s 0.000s
im_detect: 3647/4088 0.102s 0.000s
im_detect: 3648/4088 0.102s 0.000s
im_detect: 3649/4088 0.102s 0.000s
im_detect: 3650/4088 0.102s 0.000s
im_detect: 3651/4088 0.102s 0.000s
im_detect: 3652/4088 0.102s 0.000s
im_detect: 3653/4088 0.102s 0.000s
im_detect: 3654/4088 0.102s 0.000s
im_detect: 3655/4088 0.102s 0.000s
im_detect: 3656/4088 0.102s 0.000s
im_detect: 3657/4088 0.102s 0.000s
im_detect: 3658/4088 0.102s 0.000s
im_detect: 3659/4088 0.102s 0.000s
im_detect: 3660/4088 0.102s 0.000s
im_detect: 3661/4088 0.102s 0.000s
im_detect: 3662/4088 0.102s 0.000s
im_detect: 3663/4088 0.102s 0.000s
im_detect: 3664/4088 0.102s 0.000s
im_detect: 3665/4088 0.102s 0.000s
im_detect: 3666/4088 0.102s 0.000s
im_detect: 3667/4088 0.102s 0.000s
im_detect: 3668/4088 0.102s 0.000s
im_detect: 3669/4088 0.102s 0.000s
im_detect: 3670/4088 0.102s 0.000s
im_detect: 3671/4088 0.102s 0.000s
im_detect: 3672/4088 0.102s 0.000s
im_detect: 3673/4088 0.102s 0.000s
im_detect: 3674/4088 0.102s 0.000s
im_detect: 3675/4088 0.102s 0.000s
im_detect: 3676/4088 0.102s 0.000s
im_detect: 3677/4088 0.102s 0.000s
im_detect: 3678/4088 0.102s 0.000s
im_detect: 3679/4088 0.102s 0.000s
im_detect: 3680/4088 0.102s 0.000s
im_detect: 3681/4088 0.102s 0.000s
im_detect: 3682/4088 0.102s 0.000s
im_detect: 3683/4088 0.102s 0.000s
im_detect: 3684/4088 0.102s 0.000s
im_detect: 3685/4088 0.102s 0.000s
im_detect: 3686/4088 0.102s 0.000s
im_detect: 3687/4088 0.102s 0.000s
im_detect: 3688/4088 0.102s 0.000s
im_detect: 3689/4088 0.102s 0.000s
im_detect: 3690/4088 0.102s 0.000s
im_detect: 3691/4088 0.102s 0.000s
im_detect: 3692/4088 0.102s 0.000s
im_detect: 3693/4088 0.102s 0.000s
im_detect: 3694/4088 0.102s 0.000s
im_detect: 3695/4088 0.102s 0.000s
im_detect: 3696/4088 0.102s 0.000s
im_detect: 3697/4088 0.102s 0.000s
im_detect: 3698/4088 0.102s 0.000s
im_detect: 3699/4088 0.102s 0.000s
im_detect: 3700/4088 0.102s 0.000s
im_detect: 3701/4088 0.102s 0.000s
im_detect: 3702/4088 0.102s 0.000s
im_detect: 3703/4088 0.102s 0.000s
im_detect: 3704/4088 0.102s 0.000s
im_detect: 3705/4088 0.102s 0.000s
im_detect: 3706/4088 0.102s 0.000s
im_detect: 3707/4088 0.102s 0.000s
im_detect: 3708/4088 0.102s 0.000s
im_detect: 3709/4088 0.102s 0.000s
im_detect: 3710/4088 0.102s 0.000s
im_detect: 3711/4088 0.102s 0.000s
im_detect: 3712/4088 0.102s 0.000s
im_detect: 3713/4088 0.102s 0.000s
im_detect: 3714/4088 0.102s 0.000s
im_detect: 3715/4088 0.102s 0.000s
im_detect: 3716/4088 0.102s 0.000s
im_detect: 3717/4088 0.102s 0.000s
im_detect: 3718/4088 0.102s 0.000s
im_detect: 3719/4088 0.102s 0.000s
im_detect: 3720/4088 0.102s 0.000s
im_detect: 3721/4088 0.102s 0.000s
im_detect: 3722/4088 0.102s 0.000s
im_detect: 3723/4088 0.102s 0.000s
im_detect: 3724/4088 0.102s 0.000s
im_detect: 3725/4088 0.102s 0.000s
im_detect: 3726/4088 0.102s 0.000s
im_detect: 3727/4088 0.102s 0.000s
im_detect: 3728/4088 0.102s 0.000s
im_detect: 3729/4088 0.102s 0.000s
im_detect: 3730/4088 0.102s 0.000s
im_detect: 3731/4088 0.102s 0.000s
im_detect: 3732/4088 0.102s 0.000s
im_detect: 3733/4088 0.102s 0.000s
im_detect: 3734/4088 0.102s 0.000s
im_detect: 3735/4088 0.102s 0.000s
im_detect: 3736/4088 0.102s 0.000s
im_detect: 3737/4088 0.102s 0.000s
im_detect: 3738/4088 0.102s 0.000s
im_detect: 3739/4088 0.102s 0.000s
im_detect: 3740/4088 0.102s 0.000s
im_detect: 3741/4088 0.102s 0.000s
im_detect: 3742/4088 0.102s 0.000s
im_detect: 3743/4088 0.102s 0.000s
im_detect: 3744/4088 0.102s 0.000s
im_detect: 3745/4088 0.102s 0.000s
im_detect: 3746/4088 0.102s 0.000s
im_detect: 3747/4088 0.102s 0.000s
im_detect: 3748/4088 0.102s 0.000s
im_detect: 3749/4088 0.102s 0.000s
im_detect: 3750/4088 0.102s 0.000s
im_detect: 3751/4088 0.102s 0.000s
im_detect: 3752/4088 0.102s 0.000s
im_detect: 3753/4088 0.102s 0.000s
im_detect: 3754/4088 0.102s 0.000s
im_detect: 3755/4088 0.102s 0.000s
im_detect: 3756/4088 0.102s 0.000s
im_detect: 3757/4088 0.102s 0.000s
im_detect: 3758/4088 0.102s 0.000s
im_detect: 3759/4088 0.102s 0.000s
im_detect: 3760/4088 0.102s 0.000s
im_detect: 3761/4088 0.102s 0.000s
im_detect: 3762/4088 0.102s 0.000s
im_detect: 3763/4088 0.102s 0.000s
im_detect: 3764/4088 0.102s 0.000s
im_detect: 3765/4088 0.102s 0.000s
im_detect: 3766/4088 0.102s 0.000s
im_detect: 3767/4088 0.102s 0.000s
im_detect: 3768/4088 0.102s 0.000s
im_detect: 3769/4088 0.102s 0.000s
im_detect: 3770/4088 0.102s 0.000s
im_detect: 3771/4088 0.102s 0.000s
im_detect: 3772/4088 0.102s 0.000s
im_detect: 3773/4088 0.102s 0.000s
im_detect: 3774/4088 0.102s 0.000s
im_detect: 3775/4088 0.102s 0.000s
im_detect: 3776/4088 0.102s 0.000s
im_detect: 3777/4088 0.102s 0.000s
im_detect: 3778/4088 0.102s 0.000s
im_detect: 3779/4088 0.102s 0.000s
im_detect: 3780/4088 0.102s 0.000s
im_detect: 3781/4088 0.102s 0.000s
im_detect: 3782/4088 0.102s 0.000s
im_detect: 3783/4088 0.102s 0.000s
im_detect: 3784/4088 0.102s 0.000s
im_detect: 3785/4088 0.102s 0.000s
im_detect: 3786/4088 0.102s 0.000s
im_detect: 3787/4088 0.102s 0.000s
im_detect: 3788/4088 0.102s 0.000s
im_detect: 3789/4088 0.102s 0.000s
im_detect: 3790/4088 0.102s 0.000s
im_detect: 3791/4088 0.102s 0.000s
im_detect: 3792/4088 0.102s 0.000s
im_detect: 3793/4088 0.102s 0.000s
im_detect: 3794/4088 0.102s 0.000s
im_detect: 3795/4088 0.102s 0.000s
im_detect: 3796/4088 0.102s 0.000s
im_detect: 3797/4088 0.102s 0.000s
im_detect: 3798/4088 0.102s 0.000s
im_detect: 3799/4088 0.102s 0.000s
im_detect: 3800/4088 0.102s 0.000s
im_detect: 3801/4088 0.102s 0.000s
im_detect: 3802/4088 0.102s 0.000s
im_detect: 3803/4088 0.102s 0.000s
im_detect: 3804/4088 0.102s 0.000s
im_detect: 3805/4088 0.102s 0.000s
im_detect: 3806/4088 0.102s 0.000s
im_detect: 3807/4088 0.102s 0.000s
im_detect: 3808/4088 0.102s 0.000s
im_detect: 3809/4088 0.102s 0.000s
im_detect: 3810/4088 0.102s 0.000s
im_detect: 3811/4088 0.102s 0.000s
im_detect: 3812/4088 0.102s 0.000s
im_detect: 3813/4088 0.102s 0.000s
im_detect: 3814/4088 0.102s 0.000s
im_detect: 3815/4088 0.102s 0.000s
im_detect: 3816/4088 0.102s 0.000s
im_detect: 3817/4088 0.102s 0.000s
im_detect: 3818/4088 0.102s 0.000s
im_detect: 3819/4088 0.102s 0.000s
im_detect: 3820/4088 0.102s 0.000s
im_detect: 3821/4088 0.102s 0.000s
im_detect: 3822/4088 0.102s 0.000s
im_detect: 3823/4088 0.102s 0.000s
im_detect: 3824/4088 0.102s 0.000s
im_detect: 3825/4088 0.102s 0.000s
im_detect: 3826/4088 0.102s 0.000s
im_detect: 3827/4088 0.102s 0.000s
im_detect: 3828/4088 0.102s 0.000s
im_detect: 3829/4088 0.102s 0.000s
im_detect: 3830/4088 0.102s 0.000s
im_detect: 3831/4088 0.102s 0.000s
im_detect: 3832/4088 0.102s 0.000s
im_detect: 3833/4088 0.102s 0.000s
im_detect: 3834/4088 0.102s 0.000s
im_detect: 3835/4088 0.102s 0.000s
im_detect: 3836/4088 0.102s 0.000s
im_detect: 3837/4088 0.102s 0.000s
im_detect: 3838/4088 0.102s 0.000s
im_detect: 3839/4088 0.102s 0.000s
im_detect: 3840/4088 0.102s 0.000s
im_detect: 3841/4088 0.102s 0.000s
im_detect: 3842/4088 0.102s 0.000s
im_detect: 3843/4088 0.102s 0.000s
im_detect: 3844/4088 0.102s 0.000s
im_detect: 3845/4088 0.102s 0.000s
im_detect: 3846/4088 0.102s 0.000s
im_detect: 3847/4088 0.102s 0.000s
im_detect: 3848/4088 0.102s 0.000s
im_detect: 3849/4088 0.102s 0.000s
im_detect: 3850/4088 0.102s 0.000s
im_detect: 3851/4088 0.102s 0.000s
im_detect: 3852/4088 0.102s 0.000s
im_detect: 3853/4088 0.102s 0.000s
im_detect: 3854/4088 0.102s 0.000s
im_detect: 3855/4088 0.102s 0.000s
im_detect: 3856/4088 0.102s 0.000s
im_detect: 3857/4088 0.102s 0.000s
im_detect: 3858/4088 0.102s 0.000s
im_detect: 3859/4088 0.102s 0.000s
im_detect: 3860/4088 0.102s 0.000s
im_detect: 3861/4088 0.102s 0.000s
im_detect: 3862/4088 0.102s 0.000s
im_detect: 3863/4088 0.102s 0.000s
im_detect: 3864/4088 0.102s 0.000s
im_detect: 3865/4088 0.102s 0.000s
im_detect: 3866/4088 0.102s 0.000s
im_detect: 3867/4088 0.102s 0.000s
im_detect: 3868/4088 0.102s 0.000s
im_detect: 3869/4088 0.102s 0.000s
im_detect: 3870/4088 0.102s 0.000s
im_detect: 3871/4088 0.102s 0.000s
im_detect: 3872/4088 0.102s 0.000s
im_detect: 3873/4088 0.102s 0.000s
im_detect: 3874/4088 0.102s 0.000s
im_detect: 3875/4088 0.102s 0.000s
im_detect: 3876/4088 0.102s 0.000s
im_detect: 3877/4088 0.102s 0.000s
im_detect: 3878/4088 0.102s 0.000s
im_detect: 3879/4088 0.102s 0.000s
im_detect: 3880/4088 0.102s 0.000s
im_detect: 3881/4088 0.102s 0.000s
im_detect: 3882/4088 0.102s 0.000s
im_detect: 3883/4088 0.102s 0.000s
im_detect: 3884/4088 0.102s 0.000s
im_detect: 3885/4088 0.102s 0.000s
im_detect: 3886/4088 0.102s 0.000s
im_detect: 3887/4088 0.102s 0.000s
im_detect: 3888/4088 0.102s 0.000s
im_detect: 3889/4088 0.102s 0.000s
im_detect: 3890/4088 0.102s 0.000s
im_detect: 3891/4088 0.102s 0.000s
im_detect: 3892/4088 0.102s 0.000s
im_detect: 3893/4088 0.102s 0.000s
im_detect: 3894/4088 0.102s 0.000s
im_detect: 3895/4088 0.102s 0.000s
im_detect: 3896/4088 0.102s 0.000s
im_detect: 3897/4088 0.102s 0.000s
im_detect: 3898/4088 0.102s 0.000s
im_detect: 3899/4088 0.102s 0.000s
im_detect: 3900/4088 0.102s 0.000s
im_detect: 3901/4088 0.102s 0.000s
im_detect: 3902/4088 0.102s 0.000s
im_detect: 3903/4088 0.102s 0.000s
im_detect: 3904/4088 0.102s 0.000s
im_detect: 3905/4088 0.102s 0.000s
im_detect: 3906/4088 0.102s 0.000s
im_detect: 3907/4088 0.102s 0.000s
im_detect: 3908/4088 0.102s 0.000s
im_detect: 3909/4088 0.102s 0.000s
im_detect: 3910/4088 0.102s 0.000s
im_detect: 3911/4088 0.102s 0.000s
im_detect: 3912/4088 0.102s 0.000s
im_detect: 3913/4088 0.102s 0.000s
im_detect: 3914/4088 0.102s 0.000s
im_detect: 3915/4088 0.102s 0.000s
im_detect: 3916/4088 0.102s 0.000s
im_detect: 3917/4088 0.102s 0.000s
im_detect: 3918/4088 0.102s 0.000s
im_detect: 3919/4088 0.102s 0.000s
im_detect: 3920/4088 0.102s 0.000s
im_detect: 3921/4088 0.102s 0.000s
im_detect: 3922/4088 0.102s 0.000s
im_detect: 3923/4088 0.102s 0.000s
im_detect: 3924/4088 0.102s 0.000s
im_detect: 3925/4088 0.102s 0.000s
im_detect: 3926/4088 0.102s 0.000s
im_detect: 3927/4088 0.102s 0.000s
im_detect: 3928/4088 0.102s 0.000s
im_detect: 3929/4088 0.102s 0.000s
im_detect: 3930/4088 0.102s 0.000s
im_detect: 3931/4088 0.102s 0.000s
im_detect: 3932/4088 0.102s 0.000s
im_detect: 3933/4088 0.102s 0.000s
im_detect: 3934/4088 0.102s 0.000s
im_detect: 3935/4088 0.102s 0.000s
im_detect: 3936/4088 0.102s 0.000s
im_detect: 3937/4088 0.102s 0.000s
im_detect: 3938/4088 0.102s 0.000s
im_detect: 3939/4088 0.102s 0.000s
im_detect: 3940/4088 0.102s 0.000s
im_detect: 3941/4088 0.102s 0.000s
im_detect: 3942/4088 0.102s 0.000s
im_detect: 3943/4088 0.102s 0.000s
im_detect: 3944/4088 0.102s 0.000s
im_detect: 3945/4088 0.102s 0.000s
im_detect: 3946/4088 0.102s 0.000s
im_detect: 3947/4088 0.102s 0.000s
im_detect: 3948/4088 0.102s 0.000s
im_detect: 3949/4088 0.102s 0.000s
im_detect: 3950/4088 0.102s 0.000s
im_detect: 3951/4088 0.102s 0.000s
im_detect: 3952/4088 0.102s 0.000s
im_detect: 3953/4088 0.102s 0.000s
im_detect: 3954/4088 0.102s 0.000s
im_detect: 3955/4088 0.102s 0.000s
im_detect: 3956/4088 0.102s 0.000s
im_detect: 3957/4088 0.102s 0.000s
im_detect: 3958/4088 0.102s 0.000s
im_detect: 3959/4088 0.102s 0.000s
im_detect: 3960/4088 0.102s 0.000s
im_detect: 3961/4088 0.102s 0.000s
im_detect: 3962/4088 0.102s 0.000s
im_detect: 3963/4088 0.102s 0.000s
im_detect: 3964/4088 0.102s 0.000s
im_detect: 3965/4088 0.102s 0.000s
im_detect: 3966/4088 0.102s 0.000s
im_detect: 3967/4088 0.102s 0.000s
im_detect: 3968/4088 0.102s 0.000s
im_detect: 3969/4088 0.102s 0.000s
im_detect: 3970/4088 0.102s 0.000s
im_detect: 3971/4088 0.102s 0.000s
im_detect: 3972/4088 0.102s 0.000s
im_detect: 3973/4088 0.102s 0.000s
im_detect: 3974/4088 0.102s 0.000s
im_detect: 3975/4088 0.102s 0.000s
im_detect: 3976/4088 0.102s 0.000s
im_detect: 3977/4088 0.102s 0.000s
im_detect: 3978/4088 0.102s 0.000s
im_detect: 3979/4088 0.102s 0.000s
im_detect: 3980/4088 0.102s 0.000s
im_detect: 3981/4088 0.102s 0.000s
im_detect: 3982/4088 0.102s 0.000s
im_detect: 3983/4088 0.102s 0.000s
im_detect: 3984/4088 0.102s 0.000s
im_detect: 3985/4088 0.102s 0.000s
im_detect: 3986/4088 0.102s 0.000s
im_detect: 3987/4088 0.102s 0.000s
im_detect: 3988/4088 0.102s 0.000s
im_detect: 3989/4088 0.102s 0.000s
im_detect: 3990/4088 0.102s 0.000s
im_detect: 3991/4088 0.102s 0.000s
im_detect: 3992/4088 0.102s 0.000s
im_detect: 3993/4088 0.102s 0.000s
im_detect: 3994/4088 0.102s 0.000s
im_detect: 3995/4088 0.102s 0.000s
im_detect: 3996/4088 0.102s 0.000s
im_detect: 3997/4088 0.102s 0.000s
im_detect: 3998/4088 0.102s 0.000s
im_detect: 3999/4088 0.102s 0.000s
im_detect: 4000/4088 0.102s 0.000s
im_detect: 4001/4088 0.102s 0.000s
im_detect: 4002/4088 0.102s 0.000s
im_detect: 4003/4088 0.102s 0.000s
im_detect: 4004/4088 0.102s 0.000s
im_detect: 4005/4088 0.102s 0.000s
im_detect: 4006/4088 0.102s 0.000s
im_detect: 4007/4088 0.102s 0.000s
im_detect: 4008/4088 0.102s 0.000s
im_detect: 4009/4088 0.102s 0.000s
im_detect: 4010/4088 0.102s 0.000s
im_detect: 4011/4088 0.102s 0.000s
im_detect: 4012/4088 0.102s 0.000s
im_detect: 4013/4088 0.102s 0.000s
im_detect: 4014/4088 0.102s 0.000s
im_detect: 4015/4088 0.102s 0.000s
im_detect: 4016/4088 0.102s 0.000s
im_detect: 4017/4088 0.102s 0.000s
im_detect: 4018/4088 0.102s 0.000s
im_detect: 4019/4088 0.102s 0.000s
im_detect: 4020/4088 0.102s 0.000s
im_detect: 4021/4088 0.102s 0.000s
im_detect: 4022/4088 0.102s 0.000s
im_detect: 4023/4088 0.102s 0.000s
im_detect: 4024/4088 0.102s 0.000s
im_detect: 4025/4088 0.102s 0.000s
im_detect: 4026/4088 0.102s 0.000s
im_detect: 4027/4088 0.102s 0.000s
im_detect: 4028/4088 0.102s 0.000s
im_detect: 4029/4088 0.102s 0.000s
im_detect: 4030/4088 0.102s 0.000s
im_detect: 4031/4088 0.102s 0.000s
im_detect: 4032/4088 0.102s 0.000s
im_detect: 4033/4088 0.102s 0.000s
im_detect: 4034/4088 0.102s 0.000s
im_detect: 4035/4088 0.102s 0.000s
im_detect: 4036/4088 0.102s 0.000s
im_detect: 4037/4088 0.102s 0.000s
im_detect: 4038/4088 0.102s 0.000s
im_detect: 4039/4088 0.102s 0.000s
im_detect: 4040/4088 0.102s 0.000s
im_detect: 4041/4088 0.102s 0.000s
im_detect: 4042/4088 0.102s 0.000s
im_detect: 4043/4088 0.102s 0.000s
im_detect: 4044/4088 0.102s 0.000s
im_detect: 4045/4088 0.102s 0.000s
im_detect: 4046/4088 0.102s 0.000s
im_detect: 4047/4088 0.102s 0.000s
im_detect: 4048/4088 0.102s 0.000s
im_detect: 4049/4088 0.102s 0.000s
im_detect: 4050/4088 0.102s 0.000s
im_detect: 4051/4088 0.102s 0.000s
im_detect: 4052/4088 0.102s 0.000s
im_detect: 4053/4088 0.102s 0.000s
im_detect: 4054/4088 0.102s 0.000s
im_detect: 4055/4088 0.102s 0.000s
im_detect: 4056/4088 0.102s 0.000s
im_detect: 4057/4088 0.102s 0.000s
im_detect: 4058/4088 0.102s 0.000s
im_detect: 4059/4088 0.102s 0.000s
im_detect: 4060/4088 0.102s 0.000s
im_detect: 4061/4088 0.102s 0.000s
im_detect: 4062/4088 0.102s 0.000s
im_detect: 4063/4088 0.102s 0.000s
im_detect: 4064/4088 0.102s 0.000s
im_detect: 4065/4088 0.102s 0.000s
im_detect: 4066/4088 0.102s 0.000s
im_detect: 4067/4088 0.102s 0.000s
im_detect: 4068/4088 0.102s 0.000s
im_detect: 4069/4088 0.102s 0.000s
im_detect: 4070/4088 0.102s 0.000s
im_detect: 4071/4088 0.102s 0.000s
im_detect: 4072/4088 0.102s 0.000s
im_detect: 4073/4088 0.102s 0.000s
im_detect: 4074/4088 0.102s 0.000s
im_detect: 4075/4088 0.102s 0.000s
im_detect: 4076/4088 0.102s 0.000s
im_detect: 4077/4088 0.102s 0.000s
im_detect: 4078/4088 0.102s 0.000s
im_detect: 4079/4088 0.102s 0.000s
im_detect: 4080/4088 0.102s 0.000s
im_detect: 4081/4088 0.102s 0.000s
im_detect: 4082/4088 0.102s 0.000s
im_detect: 4083/4088 0.102s 0.000s
im_detect: 4084/4088 0.102s 0.000s
im_detect: 4085/4088 0.102s 0.000s
im_detect: 4086/4088 0.102s 0.000s
im_detect: 4087/4088 0.102s 0.000s
im_detect: 4088/4088 0.102s 0.000s
Evaluating detections
Writing person caltech results file
Saving cached annotations to /home/deeplearning_3/Aven_caltech/py-faster-rcnn-caltech-pedestrian/data/caltech/annotations_cache/annots.pkl
AP for person = 0.0665
Mean AP = 0.0665
~~~~~~~~
Results:
0.067
0.067
~~~~~~~~

--------------------------------------------------------------
Results computed with the **unofficial** Python eval code.
Results should be very close to the official MATLAB eval code.
Recompute with `./tools/reval.py --matlab ...` for your paper.
-- Thanks, The Management
--------------------------------------------------------------

real	7m31.823s
user	6m44.472s
sys	1m31.276s
